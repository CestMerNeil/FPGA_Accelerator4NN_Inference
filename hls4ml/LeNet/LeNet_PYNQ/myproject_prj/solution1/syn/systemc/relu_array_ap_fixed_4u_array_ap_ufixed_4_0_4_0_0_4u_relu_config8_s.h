// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_array_ap_fixed_4u_array_ap_ufixed_4_0_4_0_0_4u_relu_config8_s_HH_
#define _relu_array_ap_fixed_4u_array_ap_ufixed_4_0_4_0_0_4u_relu_config8_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_array_ap_fixed_4u_array_ap_ufixed_4_0_4_0_0_4u_relu_config8_s : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<16> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<16> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<16> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_out< sc_lv<4> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<4> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<4> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<4> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;


    // Module declarations
    relu_array_ap_fixed_4u_array_ap_ufixed_4_0_4_0_0_4u_relu_config8_s(sc_module_name name);
    SC_HAS_PROCESS(relu_array_ap_fixed_4u_array_ap_ufixed_4_0_4_0_0_4u_relu_config8_s);

    ~relu_array_ap_fixed_4u_array_ap_ufixed_4_0_4_0_0_4u_relu_config8_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln41_reg_679;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > icmp_ln41_reg_679_pp0_iter2_reg;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_lv<7> > i_0_reg_120;
    sc_signal< sc_lv<1> > icmp_ln41_fu_131_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op21;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< sc_logic > io_acc_block_signal_op109;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln41_reg_679_pp0_iter1_reg;
    sc_signal< sc_lv<7> > i_fu_137_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > tmp_data_0_V_reg_688;
    sc_signal< sc_lv<16> > tmp_data_1_V_reg_697;
    sc_signal< sc_lv<16> > tmp_data_2_V_reg_706;
    sc_signal< sc_lv<16> > tmp_data_3_V_reg_715;
    sc_signal< sc_lv<1> > icmp_ln718_fu_163_p2;
    sc_signal< sc_lv<1> > icmp_ln718_reg_724;
    sc_signal< sc_lv<1> > icmp_ln879_fu_179_p2;
    sc_signal< sc_lv<1> > icmp_ln879_reg_729;
    sc_signal< sc_lv<1> > icmp_ln768_fu_185_p2;
    sc_signal< sc_lv<1> > icmp_ln768_reg_734;
    sc_signal< sc_lv<1> > icmp_ln718_1_fu_195_p2;
    sc_signal< sc_lv<1> > icmp_ln718_1_reg_739;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_211_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_reg_744;
    sc_signal< sc_lv<1> > icmp_ln768_1_fu_217_p2;
    sc_signal< sc_lv<1> > icmp_ln768_1_reg_749;
    sc_signal< sc_lv<1> > icmp_ln718_2_fu_227_p2;
    sc_signal< sc_lv<1> > icmp_ln718_2_reg_754;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_243_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_reg_759;
    sc_signal< sc_lv<1> > icmp_ln768_2_fu_249_p2;
    sc_signal< sc_lv<1> > icmp_ln768_2_reg_764;
    sc_signal< sc_lv<1> > icmp_ln718_3_fu_259_p2;
    sc_signal< sc_lv<1> > icmp_ln718_3_reg_769;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_275_p2;
    sc_signal< sc_lv<1> > icmp_ln879_3_reg_774;
    sc_signal< sc_lv<1> > icmp_ln768_3_fu_281_p2;
    sc_signal< sc_lv<1> > icmp_ln768_3_reg_779;
    sc_signal< sc_lv<4> > tmp_data_0_V_1_fu_377_p3;
    sc_signal< sc_lv<4> > tmp_data_0_V_1_reg_784;
    sc_signal< sc_lv<4> > tmp_data_1_V_1_fu_475_p3;
    sc_signal< sc_lv<4> > tmp_data_1_V_1_reg_789;
    sc_signal< sc_lv<4> > tmp_data_2_V_1_fu_573_p3;
    sc_signal< sc_lv<4> > tmp_data_2_V_1_reg_794;
    sc_signal< sc_lv<4> > tmp_data_3_V_1_fu_671_p3;
    sc_signal< sc_lv<4> > tmp_data_3_V_1_reg_799;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<5> > trunc_ln718_fu_159_p1;
    sc_signal< sc_lv<6> > p_Result_s_fu_169_p4;
    sc_signal< sc_lv<5> > trunc_ln718_1_fu_191_p1;
    sc_signal< sc_lv<6> > p_Result_10_1_fu_201_p4;
    sc_signal< sc_lv<5> > trunc_ln718_2_fu_223_p1;
    sc_signal< sc_lv<6> > p_Result_10_2_fu_233_p4;
    sc_signal< sc_lv<5> > trunc_ln718_3_fu_255_p1;
    sc_signal< sc_lv<6> > p_Result_10_3_fu_265_p4;
    sc_signal< sc_lv<1> > tmp_46_fu_301_p3;
    sc_signal< sc_lv<1> > or_ln412_fu_315_p2;
    sc_signal< sc_lv<1> > tmp_48_fu_320_p3;
    sc_signal< sc_lv<1> > and_ln415_fu_327_p2;
    sc_signal< sc_lv<4> > zext_ln415_fu_333_p1;
    sc_signal< sc_lv<4> > trunc_ln_fu_292_p4;
    sc_signal< sc_lv<4> > add_ln415_fu_337_p2;
    sc_signal< sc_lv<1> > tmp_49_fu_343_p3;
    sc_signal< sc_lv<1> > tmp_47_fu_308_p3;
    sc_signal< sc_lv<1> > xor_ln416_fu_351_p2;
    sc_signal< sc_lv<1> > and_ln416_fu_357_p2;
    sc_signal< sc_lv<1> > select_ln777_fu_363_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_287_p2;
    sc_signal< sc_lv<4> > select_ln340_fu_369_p3;
    sc_signal< sc_lv<1> > tmp_50_fu_399_p3;
    sc_signal< sc_lv<1> > or_ln412_1_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_52_fu_418_p3;
    sc_signal< sc_lv<1> > and_ln415_1_fu_425_p2;
    sc_signal< sc_lv<4> > zext_ln415_1_fu_431_p1;
    sc_signal< sc_lv<4> > trunc_ln708_s_fu_390_p4;
    sc_signal< sc_lv<4> > add_ln415_1_fu_435_p2;
    sc_signal< sc_lv<1> > tmp_53_fu_441_p3;
    sc_signal< sc_lv<1> > tmp_51_fu_406_p3;
    sc_signal< sc_lv<1> > xor_ln416_1_fu_449_p2;
    sc_signal< sc_lv<1> > and_ln416_1_fu_455_p2;
    sc_signal< sc_lv<1> > select_ln777_1_fu_461_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_385_p2;
    sc_signal< sc_lv<4> > select_ln340_1_fu_467_p3;
    sc_signal< sc_lv<1> > tmp_54_fu_497_p3;
    sc_signal< sc_lv<1> > or_ln412_2_fu_511_p2;
    sc_signal< sc_lv<1> > tmp_56_fu_516_p3;
    sc_signal< sc_lv<1> > and_ln415_2_fu_523_p2;
    sc_signal< sc_lv<4> > zext_ln415_2_fu_529_p1;
    sc_signal< sc_lv<4> > trunc_ln708_1_fu_488_p4;
    sc_signal< sc_lv<4> > add_ln415_2_fu_533_p2;
    sc_signal< sc_lv<1> > tmp_57_fu_539_p3;
    sc_signal< sc_lv<1> > tmp_55_fu_504_p3;
    sc_signal< sc_lv<1> > xor_ln416_2_fu_547_p2;
    sc_signal< sc_lv<1> > and_ln416_2_fu_553_p2;
    sc_signal< sc_lv<1> > select_ln777_2_fu_559_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_483_p2;
    sc_signal< sc_lv<4> > select_ln340_2_fu_565_p3;
    sc_signal< sc_lv<1> > tmp_58_fu_595_p3;
    sc_signal< sc_lv<1> > or_ln412_3_fu_609_p2;
    sc_signal< sc_lv<1> > tmp_60_fu_614_p3;
    sc_signal< sc_lv<1> > and_ln415_3_fu_621_p2;
    sc_signal< sc_lv<4> > zext_ln415_3_fu_627_p1;
    sc_signal< sc_lv<4> > trunc_ln708_2_fu_586_p4;
    sc_signal< sc_lv<4> > add_ln415_3_fu_631_p2;
    sc_signal< sc_lv<1> > tmp_61_fu_637_p3;
    sc_signal< sc_lv<1> > tmp_59_fu_602_p3;
    sc_signal< sc_lv<1> > xor_ln416_3_fu_645_p2;
    sc_signal< sc_lv<1> > and_ln416_3_fu_651_p2;
    sc_signal< sc_lv<1> > select_ln777_3_fu_657_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_581_p2;
    sc_signal< sc_lv<4> > select_ln340_3_fu_663_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln415_1_fu_435_p2();
    void thread_add_ln415_2_fu_533_p2();
    void thread_add_ln415_3_fu_631_p2();
    void thread_add_ln415_fu_337_p2();
    void thread_and_ln415_1_fu_425_p2();
    void thread_and_ln415_2_fu_523_p2();
    void thread_and_ln415_3_fu_621_p2();
    void thread_and_ln415_fu_327_p2();
    void thread_and_ln416_1_fu_455_p2();
    void thread_and_ln416_2_fu_553_p2();
    void thread_and_ln416_3_fu_651_p2();
    void thread_and_ln416_fu_357_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_i_fu_137_p2();
    void thread_icmp_ln1494_1_fu_385_p2();
    void thread_icmp_ln1494_2_fu_483_p2();
    void thread_icmp_ln1494_3_fu_581_p2();
    void thread_icmp_ln1494_fu_287_p2();
    void thread_icmp_ln41_fu_131_p2();
    void thread_icmp_ln718_1_fu_195_p2();
    void thread_icmp_ln718_2_fu_227_p2();
    void thread_icmp_ln718_3_fu_259_p2();
    void thread_icmp_ln718_fu_163_p2();
    void thread_icmp_ln768_1_fu_217_p2();
    void thread_icmp_ln768_2_fu_249_p2();
    void thread_icmp_ln768_3_fu_281_p2();
    void thread_icmp_ln768_fu_185_p2();
    void thread_icmp_ln879_1_fu_211_p2();
    void thread_icmp_ln879_2_fu_243_p2();
    void thread_icmp_ln879_3_fu_275_p2();
    void thread_icmp_ln879_fu_179_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op109();
    void thread_io_acc_block_signal_op21();
    void thread_or_ln412_1_fu_413_p2();
    void thread_or_ln412_2_fu_511_p2();
    void thread_or_ln412_3_fu_609_p2();
    void thread_or_ln412_fu_315_p2();
    void thread_p_Result_10_1_fu_201_p4();
    void thread_p_Result_10_2_fu_233_p4();
    void thread_p_Result_10_3_fu_265_p4();
    void thread_p_Result_s_fu_169_p4();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_select_ln340_1_fu_467_p3();
    void thread_select_ln340_2_fu_565_p3();
    void thread_select_ln340_3_fu_663_p3();
    void thread_select_ln340_fu_369_p3();
    void thread_select_ln777_1_fu_461_p3();
    void thread_select_ln777_2_fu_559_p3();
    void thread_select_ln777_3_fu_657_p3();
    void thread_select_ln777_fu_363_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_46_fu_301_p3();
    void thread_tmp_47_fu_308_p3();
    void thread_tmp_48_fu_320_p3();
    void thread_tmp_49_fu_343_p3();
    void thread_tmp_50_fu_399_p3();
    void thread_tmp_51_fu_406_p3();
    void thread_tmp_52_fu_418_p3();
    void thread_tmp_53_fu_441_p3();
    void thread_tmp_54_fu_497_p3();
    void thread_tmp_55_fu_504_p3();
    void thread_tmp_56_fu_516_p3();
    void thread_tmp_57_fu_539_p3();
    void thread_tmp_58_fu_595_p3();
    void thread_tmp_59_fu_602_p3();
    void thread_tmp_60_fu_614_p3();
    void thread_tmp_61_fu_637_p3();
    void thread_tmp_data_0_V_1_fu_377_p3();
    void thread_tmp_data_1_V_1_fu_475_p3();
    void thread_tmp_data_2_V_1_fu_573_p3();
    void thread_tmp_data_3_V_1_fu_671_p3();
    void thread_trunc_ln708_1_fu_488_p4();
    void thread_trunc_ln708_2_fu_586_p4();
    void thread_trunc_ln708_s_fu_390_p4();
    void thread_trunc_ln718_1_fu_191_p1();
    void thread_trunc_ln718_2_fu_223_p1();
    void thread_trunc_ln718_3_fu_255_p1();
    void thread_trunc_ln718_fu_159_p1();
    void thread_trunc_ln_fu_292_p4();
    void thread_xor_ln416_1_fu_449_p2();
    void thread_xor_ln416_2_fu_547_p2();
    void thread_xor_ln416_3_fu_645_p2();
    void thread_xor_ln416_fu_351_p2();
    void thread_zext_ln415_1_fu_431_p1();
    void thread_zext_ln415_2_fu_529_p1();
    void thread_zext_ln415_3_fu_627_p1();
    void thread_zext_ln415_fu_333_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
