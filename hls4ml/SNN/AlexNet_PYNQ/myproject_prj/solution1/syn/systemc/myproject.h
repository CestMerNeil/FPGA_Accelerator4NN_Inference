// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 40
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<16> > layer6_out_V_data_0_V_din;
    sc_in< sc_logic > layer6_out_V_data_0_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_0_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_1_V_din;
    sc_in< sc_logic > layer6_out_V_data_1_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_1_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_2_V_din;
    sc_in< sc_logic > layer6_out_V_data_2_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_2_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_3_V_din;
    sc_in< sc_logic > layer6_out_V_data_3_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_3_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_4_V_din;
    sc_in< sc_logic > layer6_out_V_data_4_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_4_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_5_V_din;
    sc_in< sc_logic > layer6_out_V_data_5_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_5_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_6_V_din;
    sc_in< sc_logic > layer6_out_V_data_6_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_6_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_7_V_din;
    sc_in< sc_logic > layer6_out_V_data_7_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_7_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_8_V_din;
    sc_in< sc_logic > layer6_out_V_data_8_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_8_V_write;
    sc_out< sc_lv<16> > layer6_out_V_data_9_V_din;
    sc_in< sc_logic > layer6_out_V_data_9_V_full_n;
    sc_out< sc_logic > layer6_out_V_data_9_V_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s* dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_ap_start;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_ap_done;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_ap_continue;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_ap_idle;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_ap_ready;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_0_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_0_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_1_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_1_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_2_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_2_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_3_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_3_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_4_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_4_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_5_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_5_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_6_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_6_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_7_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_7_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_8_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_8_V_write;
    sc_signal< sc_lv<16> > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_9_V_din;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_res_stream_V_data_9_V_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_start_full_n;
    sc_signal< sc_logic > dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_ap_continue();
    void thread_dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_ap_start();
    void thread_dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_start_full_n();
    void thread_dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_U0_start_write();
    void thread_internal_ap_ready();
    void thread_layer6_out_V_data_0_V_din();
    void thread_layer6_out_V_data_0_V_write();
    void thread_layer6_out_V_data_1_V_din();
    void thread_layer6_out_V_data_1_V_write();
    void thread_layer6_out_V_data_2_V_din();
    void thread_layer6_out_V_data_2_V_write();
    void thread_layer6_out_V_data_3_V_din();
    void thread_layer6_out_V_data_3_V_write();
    void thread_layer6_out_V_data_4_V_din();
    void thread_layer6_out_V_data_4_V_write();
    void thread_layer6_out_V_data_5_V_din();
    void thread_layer6_out_V_data_5_V_write();
    void thread_layer6_out_V_data_6_V_din();
    void thread_layer6_out_V_data_6_V_write();
    void thread_layer6_out_V_data_7_V_din();
    void thread_layer6_out_V_data_7_V_write();
    void thread_layer6_out_V_data_8_V_din();
    void thread_layer6_out_V_data_8_V_write();
    void thread_layer6_out_V_data_9_V_din();
    void thread_layer6_out_V_data_9_V_write();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
};

}

using namespace ap_rtl;

#endif
