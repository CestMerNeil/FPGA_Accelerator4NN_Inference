// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_ST_fsm_state1 = "1";
const sc_lv<32> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_FF50 = "1111111101010000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_80 = "10000000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_FFC0 = "1111111111000000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_130 = "100110000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_FF80 = "1111111110000000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_30 = "110000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_FFF0 = "1111111111110000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_lv16_E0 = "11100000";
const bool dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::ap_const_boolean_1 = true;

dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_io_acc_block_signal_op13);
    sensitive << ( res_stream_V_data_0_V_full_n );
    sensitive << ( res_stream_V_data_1_V_full_n );
    sensitive << ( res_stream_V_data_2_V_full_n );
    sensitive << ( res_stream_V_data_3_V_full_n );
    sensitive << ( res_stream_V_data_4_V_full_n );
    sensitive << ( res_stream_V_data_5_V_full_n );
    sensitive << ( res_stream_V_data_6_V_full_n );
    sensitive << ( res_stream_V_data_7_V_full_n );
    sensitive << ( res_stream_V_data_8_V_full_n );
    sensitive << ( res_stream_V_data_9_V_full_n );

    SC_METHOD(thread_res_stream_V_data_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_0_V_full_n );

    SC_METHOD(thread_res_stream_V_data_0_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_0_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_1_V_full_n );

    SC_METHOD(thread_res_stream_V_data_1_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_1_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_2_V_full_n );

    SC_METHOD(thread_res_stream_V_data_2_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_2_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_3_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_3_V_full_n );

    SC_METHOD(thread_res_stream_V_data_3_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_3_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_4_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_4_V_full_n );

    SC_METHOD(thread_res_stream_V_data_4_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_4_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_5_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_5_V_full_n );

    SC_METHOD(thread_res_stream_V_data_5_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_5_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_6_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_6_V_full_n );

    SC_METHOD(thread_res_stream_V_data_6_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_6_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_7_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_7_V_full_n );

    SC_METHOD(thread_res_stream_V_data_7_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_7_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_8_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_8_V_full_n );

    SC_METHOD(thread_res_stream_V_data_8_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_8_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_9_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_stream_V_data_9_V_full_n );

    SC_METHOD(thread_res_stream_V_data_9_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_res_stream_V_data_9_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op13 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, res_stream_V_data_0_V_din, "(port)res_stream_V_data_0_V_din");
    sc_trace(mVcdFile, res_stream_V_data_0_V_full_n, "(port)res_stream_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_0_V_write, "(port)res_stream_V_data_0_V_write");
    sc_trace(mVcdFile, res_stream_V_data_1_V_din, "(port)res_stream_V_data_1_V_din");
    sc_trace(mVcdFile, res_stream_V_data_1_V_full_n, "(port)res_stream_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_1_V_write, "(port)res_stream_V_data_1_V_write");
    sc_trace(mVcdFile, res_stream_V_data_2_V_din, "(port)res_stream_V_data_2_V_din");
    sc_trace(mVcdFile, res_stream_V_data_2_V_full_n, "(port)res_stream_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_2_V_write, "(port)res_stream_V_data_2_V_write");
    sc_trace(mVcdFile, res_stream_V_data_3_V_din, "(port)res_stream_V_data_3_V_din");
    sc_trace(mVcdFile, res_stream_V_data_3_V_full_n, "(port)res_stream_V_data_3_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_3_V_write, "(port)res_stream_V_data_3_V_write");
    sc_trace(mVcdFile, res_stream_V_data_4_V_din, "(port)res_stream_V_data_4_V_din");
    sc_trace(mVcdFile, res_stream_V_data_4_V_full_n, "(port)res_stream_V_data_4_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_4_V_write, "(port)res_stream_V_data_4_V_write");
    sc_trace(mVcdFile, res_stream_V_data_5_V_din, "(port)res_stream_V_data_5_V_din");
    sc_trace(mVcdFile, res_stream_V_data_5_V_full_n, "(port)res_stream_V_data_5_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_5_V_write, "(port)res_stream_V_data_5_V_write");
    sc_trace(mVcdFile, res_stream_V_data_6_V_din, "(port)res_stream_V_data_6_V_din");
    sc_trace(mVcdFile, res_stream_V_data_6_V_full_n, "(port)res_stream_V_data_6_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_6_V_write, "(port)res_stream_V_data_6_V_write");
    sc_trace(mVcdFile, res_stream_V_data_7_V_din, "(port)res_stream_V_data_7_V_din");
    sc_trace(mVcdFile, res_stream_V_data_7_V_full_n, "(port)res_stream_V_data_7_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_7_V_write, "(port)res_stream_V_data_7_V_write");
    sc_trace(mVcdFile, res_stream_V_data_8_V_din, "(port)res_stream_V_data_8_V_din");
    sc_trace(mVcdFile, res_stream_V_data_8_V_full_n, "(port)res_stream_V_data_8_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_8_V_write, "(port)res_stream_V_data_8_V_write");
    sc_trace(mVcdFile, res_stream_V_data_9_V_din, "(port)res_stream_V_data_9_V_din");
    sc_trace(mVcdFile, res_stream_V_data_9_V_full_n, "(port)res_stream_V_data_9_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_9_V_write, "(port)res_stream_V_data_9_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, res_stream_V_data_0_V_blk_n, "res_stream_V_data_0_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_1_V_blk_n, "res_stream_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_2_V_blk_n, "res_stream_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_3_V_blk_n, "res_stream_V_data_3_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_4_V_blk_n, "res_stream_V_data_4_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_5_V_blk_n, "res_stream_V_data_5_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_6_V_blk_n, "res_stream_V_data_6_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_7_V_blk_n, "res_stream_V_data_7_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_8_V_blk_n, "res_stream_V_data_8_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_9_V_blk_n, "res_stream_V_data_9_V_blk_n");
    sc_trace(mVcdFile, io_acc_block_signal_op13, "io_acc_block_signal_op13");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::~dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read()));
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_io_acc_block_signal_op13() {
    io_acc_block_signal_op13 = (res_stream_V_data_0_V_full_n.read() & res_stream_V_data_1_V_full_n.read() & res_stream_V_data_2_V_full_n.read() & res_stream_V_data_3_V_full_n.read() & res_stream_V_data_4_V_full_n.read() & res_stream_V_data_5_V_full_n.read() & res_stream_V_data_6_V_full_n.read() & res_stream_V_data_7_V_full_n.read() & res_stream_V_data_8_V_full_n.read() & res_stream_V_data_9_V_full_n.read());
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n.read();
    } else {
        res_stream_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_0_V_din() {
    res_stream_V_data_0_V_din = ap_const_lv16_FF50;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_0_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n.read();
    } else {
        res_stream_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_1_V_din() {
    res_stream_V_data_1_V_din = ap_const_lv16_80;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_1_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n.read();
    } else {
        res_stream_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_2_V_din() {
    res_stream_V_data_2_V_din = ap_const_lv16_FF50;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_2_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n.read();
    } else {
        res_stream_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_3_V_din() {
    res_stream_V_data_3_V_din = ap_const_lv16_FFC0;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_3_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_3_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_4_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n.read();
    } else {
        res_stream_V_data_4_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_4_V_din() {
    res_stream_V_data_4_V_din = ap_const_lv16_130;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_4_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_4_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_4_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_5_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n.read();
    } else {
        res_stream_V_data_5_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_5_V_din() {
    res_stream_V_data_5_V_din = ap_const_lv16_FF80;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_5_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_5_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_5_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_6_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_6_V_blk_n = res_stream_V_data_6_V_full_n.read();
    } else {
        res_stream_V_data_6_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_6_V_din() {
    res_stream_V_data_6_V_din = ap_const_lv16_30;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_6_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_6_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_6_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_7_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_7_V_blk_n = res_stream_V_data_7_V_full_n.read();
    } else {
        res_stream_V_data_7_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_7_V_din() {
    res_stream_V_data_7_V_din = ap_const_lv16_FFF0;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_7_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_7_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_7_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_8_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_8_V_blk_n = res_stream_V_data_8_V_full_n.read();
    } else {
        res_stream_V_data_8_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_8_V_din() {
    res_stream_V_data_8_V_din = ap_const_lv16_0;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_8_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_8_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_8_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_9_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_stream_V_data_9_V_blk_n = res_stream_V_data_9_V_full_n.read();
    } else {
        res_stream_V_data_9_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_9_V_din() {
    res_stream_V_data_9_V_din = ap_const_lv16_E0;
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_res_stream_V_data_9_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op13.read())))) {
        res_stream_V_data_9_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_9_V_write = ap_const_logic_0;
    }
}

void dense_array_ap_fixed_784u_array_ap_fixed_16_6_5_3_0_10u_config6_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

