-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config15_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC;
    res_V_data_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_full_n : IN STD_LOGIC;
    res_V_data_8_V_write : OUT STD_LOGIC;
    res_V_data_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_full_n : IN STD_LOGIC;
    res_V_data_9_V_write : OUT STD_LOGIC;
    data_V_data_0_V_blk_n : OUT STD_LOGIC;
    data_V_data_1_V_blk_n : OUT STD_LOGIC;
    data_V_data_2_V_blk_n : OUT STD_LOGIC;
    data_V_data_3_V_blk_n : OUT STD_LOGIC;
    data_V_data_4_V_blk_n : OUT STD_LOGIC;
    data_V_data_5_V_blk_n : OUT STD_LOGIC;
    data_V_data_6_V_blk_n : OUT STD_LOGIC;
    data_V_data_7_V_blk_n : OUT STD_LOGIC;
    data_V_data_8_V_blk_n : OUT STD_LOGIC;
    data_V_data_9_V_blk_n : OUT STD_LOGIC;
    res_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_V_data_3_V_blk_n : OUT STD_LOGIC;
    res_V_data_4_V_blk_n : OUT STD_LOGIC;
    res_V_data_5_V_blk_n : OUT STD_LOGIC;
    res_V_data_6_V_blk_n : OUT STD_LOGIC;
    res_V_data_7_V_blk_n : OUT STD_LOGIC;
    res_V_data_8_V_blk_n : OUT STD_LOGIC;
    res_V_data_9_V_blk_n : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config15_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal exp_table3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table3_ce0 : STD_LOGIC;
    signal exp_table3_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table3_ce1 : STD_LOGIC;
    signal exp_table3_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table4_ce0 : STD_LOGIC;
    signal invert_table4_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal io_acc_block_signal_op34 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_array_0_V_reg_2286 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_2293 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_2300 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_2307 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_2314 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_2321 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_2328 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_2335 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2342 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2349 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_2356 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln1496_1_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_2361 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_reg_2366 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_reg_2371 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_803_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_2_reg_2376 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter3 : BOOLEAN;
    signal io_acc_block_signal_op386 : STD_LOGIC;
    signal ap_block_state23_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal select_ln65_5_fu_827_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_reg_2382 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_fu_839_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_reg_2388 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln1496_7_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_reg_2394 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_859_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_reg_2399 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_V_fu_1445_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_reg_2404 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_1479_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_reg_2409 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_1513_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_2414 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_1547_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_2419 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_1581_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_2424 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_1615_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_2429 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_fu_1649_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_2434 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_fu_1683_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_reg_2439 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_fu_1717_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_reg_2444 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_fu_1751_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_reg_2449 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_1_reg_2464 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_1_reg_2464_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_1_reg_2464_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_2470 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_2470_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_2470_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_2486 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_2486_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_2486_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_2492 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_2492_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_2492_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_2508 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_2508_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_2508_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_2514 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_2514_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_2514_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_1_reg_2530 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_1_reg_2530_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_1_reg_2536 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_1_reg_2536_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_1_reg_2552 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_1_reg_2552_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_1_reg_2559 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_1_reg_2559_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_19_reg_2566 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_reg_2572 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_26_fu_1919_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_26_reg_2578 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_27_fu_1951_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_27_reg_2584 : STD_LOGIC_VECTOR (16 downto 0);
    signal y_V_10_fu_2051_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_10_reg_2590 : STD_LOGIC_VECTOR (9 downto 0);
    signal inv_exp_sum_V_reg_2600 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln241_fu_2063_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_V_reg_2669 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_reg_2674 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_2679 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_2684 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_2689 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_reg_2694 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_2699 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_2704 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_8_V_reg_2709 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_9_V_reg_2714 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_ce : STD_LOGIC;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call233 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1_ignore_call233 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2_ignore_call233 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter3_ignore_call233 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter4_ignore_call233 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp244 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call233 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1_ignore_call233 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter2_ignore_call233 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter3_ignore_call233 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp246 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0_ignore_call233 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1_ignore_call233 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter2_ignore_call233 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter3_ignore_call233 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp248 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call233 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call233 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2_ignore_call233 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter3_ignore_call233 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4_ignore_call233 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp250 : BOOLEAN;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_ce : STD_LOGIC;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call234 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1_ignore_call234 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2_ignore_call234 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter3_ignore_call234 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter4_ignore_call234 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp245 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call234 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1_ignore_call234 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter2_ignore_call234 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter3_ignore_call234 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp247 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0_ignore_call234 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1_ignore_call234 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter2_ignore_call234 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter3_ignore_call234 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp249 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call234 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call234 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2_ignore_call234 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter3_ignore_call234 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4_ignore_call234 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp251 : BOOLEAN;
    signal exp_res_0_V_fu_128 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_fu_132 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_fu_136 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_fu_140 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_fu_144 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_fu_148 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_fu_152 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_fu_156 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_fu_160 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_fu_164 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln225_fu_1759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln225_1_fu_1763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_1771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln225_5_fu_1779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1783_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln225_7_fu_1787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_8_fu_1791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_9_fu_1795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_2059_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_328_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_328_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_329_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_329_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_330_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_330_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_331_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_331_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_332_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_332_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_333_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_333_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_334_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_334_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_335_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_335_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_336_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_336_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_337_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_337_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln65_fu_787_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_792_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_811_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_816_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_5_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_6_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_7_fu_849_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_8_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_fu_866_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_869_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_872_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_924_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_1_fu_927_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_941_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_933_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_979_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_2_fu_982_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_fu_996_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_988_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_1034_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_3_fu_1037_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_28_fu_1051_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1043_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_1089_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_4_fu_1092_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_fu_1106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_6_fu_1144_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_5_fu_1147_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_32_fu_1161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1153_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_7_fu_1199_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_6_fu_1202_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_fu_1216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_8_fu_1254_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_7_fu_1257_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_fu_1271_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_9_fu_1309_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_8_fu_1312_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_fu_1326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1318_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_10_fu_1364_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_9_fu_1367_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_fu_1381_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1373_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1419_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1429_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1437_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_11_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1453_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_1_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1463_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_1471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_12_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1487_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_2_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1497_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_1505_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_13_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1521_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_3_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1531_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_1539_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_14_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1555_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_4_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1565_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_1573_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_15_fu_1181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1589_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1599_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_5_fu_1607_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_16_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1623_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_12_fu_1633_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_6_fu_1641_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_17_fu_1291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1657_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_14_fu_1667_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_7_fu_1675_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_18_fu_1346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1691_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_8_fu_1340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_16_fu_1701_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_8_fu_1709_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_19_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1725_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_9_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_18_fu_1735_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_9_fu_1743_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_fu_1841_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_fu_1844_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_1847_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_22_fu_1861_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_18_fu_1865_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_1853_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_10_fu_1873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_21_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_20_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_10_fu_1897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_20_fu_1903_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln388_10_fu_1911_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_24_fu_1930_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_23_fu_1927_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_25_fu_1933_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_19_fu_1943_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln746_fu_1939_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_1_fu_1962_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_1_fu_1965_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_1_fu_1968_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln746_fu_1959_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_29_fu_1982_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_21_fu_1987_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_fu_1974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_11_fu_1995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_23_fu_2013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_22_fu_2007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_2025_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_1_fu_2001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_11_fu_2019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_22_fu_2035_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_11_fu_2043_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_335_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_329_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_332_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_330_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_333_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_337_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_328_ce : STD_LOGIC;
    signal grp_fu_329_ce : STD_LOGIC;
    signal grp_fu_330_ce : STD_LOGIC;
    signal grp_fu_331_ce : STD_LOGIC;
    signal grp_fu_332_ce : STD_LOGIC;
    signal grp_fu_333_ce : STD_LOGIC;
    signal grp_fu_334_ce : STD_LOGIC;
    signal grp_fu_335_ce : STD_LOGIC;
    signal grp_fu_336_ce : STD_LOGIC;
    signal grp_fu_337_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_328_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_329_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_330_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_331_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_332_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_333_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_334_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_335_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_336_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_337_p00 : STD_LOGIC_VECTOR (25 downto 0);

    component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_0_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_1_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_2_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_3_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_4_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_5_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_6_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_7_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_8_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_9_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_V_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_axi_mul_17ns_18s_26_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config15_s_exp_tabbBo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config15_s_invert_bCo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table3_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config15_s_exp_tabbBo
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table3_address0,
        ce0 => exp_table3_ce0,
        q0 => exp_table3_q0,
        address1 => exp_table3_address1,
        ce1 => exp_table3_ce1,
        q1 => exp_table3_q1);

    invert_table4_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config15_s_invert_bCo
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table4_address0,
        ce0 => invert_table4_ce0,
        q0 => invert_table4_q0);

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V => exp_res_0_V_fu_128,
        x_1_V => exp_res_1_V_fu_132,
        x_2_V => exp_res_2_V_fu_136,
        x_3_V => exp_res_3_V_fu_140,
        x_4_V => exp_res_4_V_fu_144,
        x_5_V => exp_res_5_V_fu_148,
        x_6_V => exp_res_6_V_fu_152,
        x_7_V => exp_res_7_V_fu_156,
        x_8_V => exp_res_8_V_fu_160,
        x_9_V => exp_res_9_V_fu_164,
        x_V_offset => ap_const_lv5_0,
        ap_return => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_return,
        ap_ce => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_ce);

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V => exp_res_0_V_fu_128,
        x_1_V => exp_res_1_V_fu_132,
        x_2_V => exp_res_2_V_fu_136,
        x_3_V => exp_res_3_V_fu_140,
        x_4_V => exp_res_4_V_fu_144,
        x_5_V => exp_res_5_V_fu_148,
        x_6_V => exp_res_6_V_fu_152,
        x_7_V => exp_res_7_V_fu_156,
        x_8_V => exp_res_8_V_fu_160,
        x_9_V => exp_res_9_V_fu_164,
        x_V_offset => ap_const_lv5_4,
        ap_return => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_return,
        ap_ce => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_ce);

    myproject_axi_mul_17ns_18s_26_2_1_U335 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_328_p0,
        din1 => grp_fu_328_p1,
        ce => grp_fu_328_ce,
        dout => grp_fu_328_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U336 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_329_p0,
        din1 => grp_fu_329_p1,
        ce => grp_fu_329_ce,
        dout => grp_fu_329_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U337 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_330_p0,
        din1 => grp_fu_330_p1,
        ce => grp_fu_330_ce,
        dout => grp_fu_330_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U338 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_331_p0,
        din1 => grp_fu_331_p1,
        ce => grp_fu_331_ce,
        dout => grp_fu_331_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U339 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_332_p0,
        din1 => grp_fu_332_p1,
        ce => grp_fu_332_ce,
        dout => grp_fu_332_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U340 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_333_p0,
        din1 => grp_fu_333_p1,
        ce => grp_fu_333_ce,
        dout => grp_fu_333_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U341 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_334_p0,
        din1 => grp_fu_334_p1,
        ce => grp_fu_334_ce,
        dout => grp_fu_334_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U342 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_335_p0,
        din1 => grp_fu_335_p1,
        ce => grp_fu_335_ce,
        dout => grp_fu_335_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U343 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_336_p0,
        din1 => grp_fu_336_p1,
        ce => grp_fu_336_ce,
        dout => grp_fu_336_p2);

    myproject_axi_mul_17ns_18s_26_2_1_U344 : component myproject_axi_mul_17ns_18s_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_337_p0,
        din1 => grp_fu_337_p1,
        ce => grp_fu_337_ce,
        dout => grp_fu_337_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_array_0_V_reg_2286 <= data_V_data_0_V_dout;
                data_array_1_V_reg_2293 <= data_V_data_1_V_dout;
                data_array_2_V_reg_2300 <= data_V_data_2_V_dout;
                data_array_3_V_reg_2307 <= data_V_data_3_V_dout;
                data_array_4_V_reg_2314 <= data_V_data_4_V_dout;
                data_array_5_V_reg_2321 <= data_V_data_5_V_dout;
                data_array_6_V_reg_2328 <= data_V_data_6_V_dout;
                data_array_7_V_reg_2335 <= data_V_data_7_V_dout;
                data_array_8_V_reg_2342 <= data_V_data_8_V_dout;
                data_array_9_V_reg_2349 <= data_V_data_9_V_dout;
                exp_res_6_V_1_reg_2530_pp0_iter3_reg <= exp_res_6_V_1_reg_2530;
                exp_res_7_V_1_reg_2536_pp0_iter3_reg <= exp_res_7_V_1_reg_2536;
                p_Val2_19_reg_2566 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_return;
                p_Val2_1_reg_2572 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_return;
                y_V_1_reg_2409 <= y_V_1_fu_1479_p3;
                y_V_2_reg_2414 <= y_V_2_fu_1513_p3;
                y_V_3_reg_2419 <= y_V_3_fu_1547_p3;
                y_V_4_reg_2424 <= y_V_4_fu_1581_p3;
                y_V_5_reg_2429 <= y_V_5_fu_1615_p3;
                y_V_6_reg_2434 <= y_V_6_fu_1649_p3;
                y_V_7_reg_2439 <= y_V_7_fu_1683_p3;
                y_V_8_reg_2444 <= y_V_8_fu_1717_p3;
                y_V_9_reg_2449 <= y_V_9_fu_1751_p3;
                y_V_reg_2404 <= y_V_fu_1445_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                exp_res_0_V_1_reg_2464 <= exp_table3_q0;
                exp_res_1_V_1_reg_2470 <= exp_table3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                exp_res_0_V_1_reg_2464_pp0_iter2_reg <= exp_res_0_V_1_reg_2464;
                exp_res_0_V_1_reg_2464_pp0_iter3_reg <= exp_res_0_V_1_reg_2464_pp0_iter2_reg;
                exp_res_1_V_1_reg_2470_pp0_iter2_reg <= exp_res_1_V_1_reg_2470;
                exp_res_1_V_1_reg_2470_pp0_iter3_reg <= exp_res_1_V_1_reg_2470_pp0_iter2_reg;
                select_ln65_2_reg_2376 <= select_ln65_2_fu_803_p3;
                select_ln65_5_reg_2382 <= select_ln65_5_fu_827_p3;
                y_V_10_reg_2590 <= y_V_10_fu_2051_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exp_res_0_V_fu_128 <= exp_res_0_V_1_reg_2464;
                exp_res_1_V_fu_132 <= exp_res_1_V_1_reg_2470;
                exp_res_2_V_fu_136 <= exp_res_2_V_1_reg_2486;
                exp_res_3_V_fu_140 <= exp_res_3_V_1_reg_2492;
                exp_res_4_V_fu_144 <= exp_res_4_V_1_reg_2508;
                exp_res_5_V_fu_148 <= exp_res_5_V_1_reg_2514;
                exp_res_6_V_fu_152 <= exp_res_6_V_1_reg_2530;
                exp_res_7_V_fu_156 <= exp_res_7_V_1_reg_2536;
                exp_res_8_V_1_reg_2552 <= exp_table3_q0;
                exp_res_8_V_fu_160 <= exp_table3_q0;
                exp_res_9_V_1_reg_2559 <= exp_table3_q1;
                exp_res_9_V_fu_164 <= exp_table3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                exp_res_2_V_1_reg_2486 <= exp_table3_q0;
                exp_res_3_V_1_reg_2492 <= exp_table3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                exp_res_2_V_1_reg_2486_pp0_iter2_reg <= exp_res_2_V_1_reg_2486;
                exp_res_2_V_1_reg_2486_pp0_iter3_reg <= exp_res_2_V_1_reg_2486_pp0_iter2_reg;
                exp_res_3_V_1_reg_2492_pp0_iter2_reg <= exp_res_3_V_1_reg_2492;
                exp_res_3_V_1_reg_2492_pp0_iter3_reg <= exp_res_3_V_1_reg_2492_pp0_iter2_reg;
                icmp_ln1496_7_reg_2394 <= icmp_ln1496_7_fu_845_p2;
                select_ln65_6_reg_2388 <= select_ln65_6_fu_839_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                exp_res_4_V_1_reg_2508 <= exp_table3_q0;
                exp_res_5_V_1_reg_2514 <= exp_table3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                exp_res_4_V_1_reg_2508_pp0_iter2_reg <= exp_res_4_V_1_reg_2508;
                exp_res_4_V_1_reg_2508_pp0_iter3_reg <= exp_res_4_V_1_reg_2508_pp0_iter2_reg;
                exp_res_5_V_1_reg_2514_pp0_iter2_reg <= exp_res_5_V_1_reg_2514;
                exp_res_5_V_1_reg_2514_pp0_iter3_reg <= exp_res_5_V_1_reg_2514_pp0_iter2_reg;
                inv_exp_sum_V_reg_2600 <= invert_table4_q0;
                x_max_V_reg_2399 <= x_max_V_fu_859_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exp_res_6_V_1_reg_2530 <= exp_table3_q0;
                exp_res_7_V_1_reg_2536 <= exp_table3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exp_res_8_V_1_reg_2552_pp0_iter3_reg <= exp_res_8_V_1_reg_2552;
                exp_res_9_V_1_reg_2559_pp0_iter3_reg <= exp_res_9_V_1_reg_2559;
                icmp_ln1496_1_reg_2361 <= icmp_ln1496_1_fu_775_p2;
                icmp_ln1496_3_reg_2366 <= icmp_ln1496_3_fu_779_p2;
                icmp_ln1496_4_reg_2371 <= icmp_ln1496_4_fu_783_p2;
                icmp_ln1496_reg_2356 <= icmp_ln1496_fu_771_p2;
                p_Val2_26_reg_2578 <= p_Val2_26_fu_1919_p3;
                p_Val2_27_reg_2584 <= p_Val2_27_fu_1951_p3;
                tmp_data_0_V_reg_2669 <= grp_fu_328_p2(25 downto 10);
                tmp_data_1_V_reg_2674 <= grp_fu_335_p2(25 downto 10);
                tmp_data_2_V_reg_2679 <= grp_fu_329_p2(25 downto 10);
                tmp_data_3_V_reg_2684 <= grp_fu_332_p2(25 downto 10);
                tmp_data_4_V_reg_2689 <= grp_fu_330_p2(25 downto 10);
                tmp_data_5_V_reg_2694 <= grp_fu_334_p2(25 downto 10);
                tmp_data_6_V_reg_2699 <= grp_fu_331_p2(25 downto 10);
                tmp_data_7_V_reg_2704 <= grp_fu_333_p2(25 downto 10);
                tmp_data_8_V_reg_2709 <= grp_fu_336_p2(25 downto 10);
                tmp_data_9_V_reg_2714 <= grp_fu_337_p2(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln746_fu_1939_p2 <= std_logic_vector(unsigned(exp_res_8_V_1_reg_2552) + unsigned(exp_res_9_V_1_reg_2559));
    and_ln786_1_fu_955_p2 <= (xor_ln786_1_fu_949_p2 and tmp_23_fu_933_p3);
    and_ln786_2_fu_1010_p2 <= (xor_ln786_2_fu_1004_p2 and tmp_25_fu_988_p3);
    and_ln786_3_fu_1065_p2 <= (xor_ln786_3_fu_1059_p2 and tmp_27_fu_1043_p3);
    and_ln786_4_fu_1120_p2 <= (xor_ln786_4_fu_1114_p2 and tmp_29_fu_1098_p3);
    and_ln786_5_fu_1175_p2 <= (xor_ln786_5_fu_1169_p2 and tmp_31_fu_1153_p3);
    and_ln786_6_fu_1230_p2 <= (xor_ln786_6_fu_1224_p2 and tmp_33_fu_1208_p3);
    and_ln786_7_fu_1285_p2 <= (xor_ln786_7_fu_1279_p2 and tmp_35_fu_1263_p3);
    and_ln786_8_fu_1340_p2 <= (xor_ln786_8_fu_1334_p2 and tmp_37_fu_1318_p3);
    and_ln786_9_fu_1395_p2 <= (xor_ln786_9_fu_1389_p2 and tmp_39_fu_1373_p3);
    and_ln786_fu_900_p2 <= (xor_ln786_fu_894_p2 and tmp_21_fu_878_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, io_acc_block_signal_op34)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((io_acc_block_signal_op34 = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp250_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, io_acc_block_signal_op34)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp250 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((io_acc_block_signal_op34 = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp251_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, io_acc_block_signal_op34)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp251 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((io_acc_block_signal_op34 = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, io_acc_block_signal_op34)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((io_acc_block_signal_op34 = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter4, io_acc_block_signal_op386)
    begin
                ap_block_pp0_stage2_01001 <= ((io_acc_block_signal_op386 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter4, io_acc_block_signal_op386)
    begin
                ap_block_pp0_stage2_11001 <= ((io_acc_block_signal_op386 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_ignoreCallOp244_assign_proc : process(ap_enable_reg_pp0_iter4, io_acc_block_signal_op386)
    begin
                ap_block_pp0_stage2_11001_ignoreCallOp244 <= ((io_acc_block_signal_op386 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_ignoreCallOp245_assign_proc : process(ap_enable_reg_pp0_iter4, io_acc_block_signal_op386)
    begin
                ap_block_pp0_stage2_11001_ignoreCallOp245 <= ((io_acc_block_signal_op386 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, io_acc_block_signal_op386)
    begin
                ap_block_pp0_stage2_subdone <= ((io_acc_block_signal_op386 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp246 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp247 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001_ignoreCallOp248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001_ignoreCallOp249 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter2_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter2_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter2_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter2_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter3_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter3_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter3_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter3_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter3_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter3_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, io_acc_block_signal_op34)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((io_acc_block_signal_op34 = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call233_assign_proc : process(ap_start, io_acc_block_signal_op34)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call233 <= ((io_acc_block_signal_op34 = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call234_assign_proc : process(ap_start, io_acc_block_signal_op34)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call234 <= ((io_acc_block_signal_op34 = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state20_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter3_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter3_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_pp0_stage2_iter4_assign_proc : process(io_acc_block_signal_op386)
    begin
                ap_block_state23_pp0_stage2_iter4 <= (io_acc_block_signal_op386 = ap_const_logic_0);
    end process;


    ap_block_state23_pp0_stage2_iter4_ignore_call233_assign_proc : process(io_acc_block_signal_op386)
    begin
                ap_block_state23_pp0_stage2_iter4_ignore_call233 <= (io_acc_block_signal_op386 = ap_const_logic_0);
    end process;


    ap_block_state23_pp0_stage2_iter4_ignore_call234_assign_proc : process(io_acc_block_signal_op386)
    begin
                ap_block_state23_pp0_stage2_iter4_ignore_call234 <= (io_acc_block_signal_op386 = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_0_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_1_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_2_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_3_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_4_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_5_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_6_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_7_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_8_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_9_V_empty_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;


    exp_table3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, zext_ln225_fu_1759_p1, ap_block_pp0_stage1, zext_ln225_2_fu_1767_p1, zext_ln225_4_fu_1775_p1, ap_block_pp0_stage3, zext_ln225_6_fu_1783_p1, ap_block_pp0_stage4, zext_ln225_8_fu_1791_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table3_address0 <= zext_ln225_8_fu_1791_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            exp_table3_address0 <= zext_ln225_6_fu_1783_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            exp_table3_address0 <= zext_ln225_4_fu_1775_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            exp_table3_address0 <= zext_ln225_2_fu_1767_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            exp_table3_address0 <= zext_ln225_fu_1759_p1(10 - 1 downto 0);
        else 
            exp_table3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table3_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1, zext_ln225_1_fu_1763_p1, zext_ln225_3_fu_1771_p1, ap_block_pp0_stage3, zext_ln225_5_fu_1779_p1, ap_block_pp0_stage4, zext_ln225_7_fu_1787_p1, zext_ln225_9_fu_1795_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table3_address1 <= zext_ln225_9_fu_1795_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            exp_table3_address1 <= zext_ln225_7_fu_1787_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            exp_table3_address1 <= zext_ln225_5_fu_1779_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            exp_table3_address1 <= zext_ln225_3_fu_1771_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            exp_table3_address1 <= zext_ln225_1_fu_1763_p1(10 - 1 downto 0);
        else 
            exp_table3_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            exp_table3_ce0 <= ap_const_logic_1;
        else 
            exp_table3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            exp_table3_ce1 <= ap_const_logic_1;
        else 
            exp_table3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_328_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_328_ce <= ap_const_logic_1;
        else 
            grp_fu_328_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_328_p0 <= grp_fu_328_p00(17 - 1 downto 0);
    grp_fu_328_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_1_reg_2464_pp0_iter3_reg),26));
    grp_fu_328_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_329_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_329_ce <= ap_const_logic_1;
        else 
            grp_fu_329_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_329_p0 <= grp_fu_329_p00(17 - 1 downto 0);
    grp_fu_329_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_1_reg_2486_pp0_iter3_reg),26));
    grp_fu_329_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_330_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_330_ce <= ap_const_logic_1;
        else 
            grp_fu_330_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_330_p0 <= grp_fu_330_p00(17 - 1 downto 0);
    grp_fu_330_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_1_reg_2508_pp0_iter3_reg),26));
    grp_fu_330_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_331_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_331_ce <= ap_const_logic_1;
        else 
            grp_fu_331_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_331_p0 <= grp_fu_331_p00(17 - 1 downto 0);
    grp_fu_331_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_6_V_1_reg_2530_pp0_iter3_reg),26));
    grp_fu_331_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_332_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_332_ce <= ap_const_logic_1;
        else 
            grp_fu_332_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_332_p0 <= grp_fu_332_p00(17 - 1 downto 0);
    grp_fu_332_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_1_reg_2492_pp0_iter3_reg),26));
    grp_fu_332_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_333_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_333_ce <= ap_const_logic_1;
        else 
            grp_fu_333_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_333_p0 <= grp_fu_333_p00(17 - 1 downto 0);
    grp_fu_333_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_7_V_1_reg_2536_pp0_iter3_reg),26));
    grp_fu_333_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_334_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_334_ce <= ap_const_logic_1;
        else 
            grp_fu_334_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_334_p0 <= grp_fu_334_p00(17 - 1 downto 0);
    grp_fu_334_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_V_1_reg_2514_pp0_iter3_reg),26));
    grp_fu_334_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_335_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_335_ce <= ap_const_logic_1;
        else 
            grp_fu_335_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_335_p0 <= grp_fu_335_p00(17 - 1 downto 0);
    grp_fu_335_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_1_reg_2470_pp0_iter3_reg),26));
    grp_fu_335_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_336_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_336_ce <= ap_const_logic_1;
        else 
            grp_fu_336_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_336_p0 <= grp_fu_336_p00(17 - 1 downto 0);
    grp_fu_336_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_V_1_reg_2552_pp0_iter3_reg),26));
    grp_fu_336_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_fu_337_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_337_ce <= ap_const_logic_1;
        else 
            grp_fu_337_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_337_p0 <= grp_fu_337_p00(17 - 1 downto 0);
    grp_fu_337_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_V_1_reg_2559_pp0_iter3_reg),26));
    grp_fu_337_p1 <= sext_ln241_fu_2063_p1(18 - 1 downto 0);

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001_ignoreCallOp244, ap_block_pp0_stage3_11001_ignoreCallOp246, ap_block_pp0_stage4_11001_ignoreCallOp248, ap_block_pp0_stage0_11001_ignoreCallOp250)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp248) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp246) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp250) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp244) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_ce <= ap_const_logic_1;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_699_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001_ignoreCallOp245, ap_block_pp0_stage3_11001_ignoreCallOp247, ap_block_pp0_stage4_11001_ignoreCallOp249, ap_block_pp0_stage0_11001_ignoreCallOp251)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp249) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp247) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp251) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp245) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_ce <= ap_const_logic_1;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_715_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_1_fu_775_p2 <= "1" when (signed(data_array_2_V_reg_2300) < signed(data_array_3_V_reg_2307)) else "0";
    icmp_ln1496_2_fu_797_p2 <= "1" when (signed(select_ln65_fu_787_p3) < signed(select_ln65_1_fu_792_p3)) else "0";
    icmp_ln1496_3_fu_779_p2 <= "1" when (signed(data_array_4_V_reg_2314) < signed(data_array_5_V_reg_2321)) else "0";
    icmp_ln1496_4_fu_783_p2 <= "1" when (signed(data_array_6_V_reg_2328) < signed(data_array_7_V_reg_2335)) else "0";
    icmp_ln1496_5_fu_821_p2 <= "1" when (signed(select_ln65_3_fu_811_p3) < signed(select_ln65_4_fu_816_p3)) else "0";
    icmp_ln1496_6_fu_835_p2 <= "1" when (signed(select_ln65_2_reg_2376) < signed(select_ln65_5_reg_2382)) else "0";
    icmp_ln1496_7_fu_845_p2 <= "1" when (signed(data_array_8_V_reg_2342) < signed(data_array_9_V_reg_2349)) else "0";
    icmp_ln1496_8_fu_854_p2 <= "1" when (signed(select_ln65_6_reg_2388) < signed(select_ln65_7_fu_849_p3)) else "0";
    icmp_ln1496_fu_771_p2 <= "1" when (signed(data_array_0_V_reg_2286) < signed(data_array_1_V_reg_2293)) else "0";
    invert_table4_address0 <= zext_ln235_fu_2059_p1(10 - 1 downto 0);

    invert_table4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            invert_table4_ce0 <= ap_const_logic_1;
        else 
            invert_table4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op34 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op386 <= (res_V_data_9_V_full_n and res_V_data_8_V_full_n and res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
        lhs_V_1_fu_1962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_reg_2578),19));

        lhs_V_fu_1841_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_19_reg_2566),19));

    or_ln340_10_fu_1897_p2 <= (xor_ln340_21_fu_1891_p2 or p_Result_18_fu_1865_p3);
    or_ln340_11_fu_2019_p2 <= (xor_ln340_23_fu_2013_p2 or p_Result_21_fu_1987_p3);
    or_ln340_1_fu_973_p2 <= (xor_ln340_1_fu_967_p2 or tmp_24_fu_941_p3);
    or_ln340_2_fu_1028_p2 <= (xor_ln340_2_fu_1022_p2 or tmp_26_fu_996_p3);
    or_ln340_3_fu_1083_p2 <= (xor_ln340_3_fu_1077_p2 or tmp_28_fu_1051_p3);
    or_ln340_4_fu_1138_p2 <= (xor_ln340_4_fu_1132_p2 or tmp_30_fu_1106_p3);
    or_ln340_5_fu_1193_p2 <= (xor_ln340_5_fu_1187_p2 or tmp_32_fu_1161_p3);
    or_ln340_6_fu_1248_p2 <= (xor_ln340_6_fu_1242_p2 or tmp_34_fu_1216_p3);
    or_ln340_7_fu_1303_p2 <= (xor_ln340_7_fu_1297_p2 or tmp_36_fu_1271_p3);
    or_ln340_8_fu_1358_p2 <= (xor_ln340_8_fu_1352_p2 or tmp_38_fu_1326_p3);
    or_ln340_9_fu_1413_p2 <= (xor_ln340_9_fu_1407_p2 or tmp_40_fu_1381_p3);
    or_ln340_fu_918_p2 <= (xor_ln340_fu_912_p2 or tmp_22_fu_886_p3);
    p_Result_18_fu_1865_p3 <= p_Val2_22_fu_1861_p2(17 downto 17);
    p_Result_19_fu_1943_p3 <= p_Val2_25_fu_1933_p2(17 downto 17);
    p_Result_20_fu_1974_p3 <= ret_V_1_fu_1968_p2(18 downto 18);
    p_Result_21_fu_1987_p3 <= p_Val2_29_fu_1982_p2(17 downto 17);
    p_Result_s_fu_1853_p3 <= ret_V_fu_1847_p2(18 downto 18);
    p_Val2_22_fu_1861_p2 <= std_logic_vector(signed(p_Val2_1_reg_2572) + signed(p_Val2_19_reg_2566));
    p_Val2_23_fu_1927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_V_1_reg_2552),18));
    p_Val2_24_fu_1930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_V_1_reg_2559),18));
    p_Val2_25_fu_1933_p2 <= std_logic_vector(unsigned(p_Val2_24_fu_1930_p1) + unsigned(p_Val2_23_fu_1927_p1));
    p_Val2_26_fu_1919_p3 <= 
        select_ln340_20_fu_1903_p3 when (or_ln340_10_fu_1897_p2(0) = '1') else 
        select_ln388_10_fu_1911_p3;
    p_Val2_27_fu_1951_p3 <= 
        ap_const_lv17_1FFFF when (p_Result_19_fu_1943_p3(0) = '1') else 
        add_ln746_fu_1939_p2;
    p_Val2_29_fu_1982_p2 <= std_logic_vector(unsigned(zext_ln746_fu_1959_p1) + unsigned(p_Val2_26_reg_2578));

    res_V_data_0_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_2669;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_2674;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_2679;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_2684;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_4_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_2689;

    res_V_data_4_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_5_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_2694;

    res_V_data_5_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_6_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_2699;

    res_V_data_6_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_7_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_2704;

    res_V_data_7_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_8_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_8_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_8_V_blk_n <= res_V_data_8_V_full_n;
        else 
            res_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_8_V_din <= tmp_data_8_V_reg_2709;

    res_V_data_8_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_9_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_9_V_full_n, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_9_V_blk_n <= res_V_data_9_V_full_n;
        else 
            res_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_9_V_din <= tmp_data_9_V_reg_2714;

    res_V_data_9_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_1968_p2 <= std_logic_vector(signed(lhs_V_1_fu_1962_p1) + signed(rhs_V_1_fu_1965_p1));
    ret_V_fu_1847_p2 <= std_logic_vector(signed(lhs_V_fu_1841_p1) + signed(rhs_V_fu_1844_p1));
    rhs_V_1_fu_1965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_27_reg_2584),19));
        rhs_V_fu_1844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_2572),19));

    select_ln340_10_fu_1599_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_15_fu_1181_p2(0) = '1') else 
        tmp_15_fu_1589_p4;
    select_ln340_12_fu_1633_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_16_fu_1236_p2(0) = '1') else 
        tmp_16_fu_1623_p4;
    select_ln340_14_fu_1667_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_17_fu_1291_p2(0) = '1') else 
        tmp_17_fu_1657_p4;
    select_ln340_16_fu_1701_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_18_fu_1346_p2(0) = '1') else 
        tmp_18_fu_1691_p4;
    select_ln340_18_fu_1735_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_19_fu_1401_p2(0) = '1') else 
        tmp_19_fu_1725_p4;
    select_ln340_20_fu_1903_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln340_20_fu_1885_p2(0) = '1') else 
        p_Val2_22_fu_1861_p2;
    select_ln340_22_fu_2035_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_22_fu_2007_p2(0) = '1') else 
        tmp_20_fu_2025_p4;
    select_ln340_2_fu_1463_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_11_fu_961_p2(0) = '1') else 
        tmp_11_fu_1453_p4;
    select_ln340_4_fu_1497_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_1016_p2(0) = '1') else 
        tmp_12_fu_1487_p4;
    select_ln340_6_fu_1531_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_13_fu_1071_p2(0) = '1') else 
        tmp_13_fu_1521_p4;
    select_ln340_8_fu_1565_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_14_fu_1126_p2(0) = '1') else 
        tmp_14_fu_1555_p4;
    select_ln340_fu_1429_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_10_fu_906_p2(0) = '1') else 
        tmp_fu_1419_p4;
    select_ln388_10_fu_1911_p3 <= 
        ap_const_lv18_20000 when (underflow_fu_1879_p2(0) = '1') else 
        p_Val2_22_fu_1861_p2;
    select_ln388_11_fu_2043_p3 <= 
        ap_const_lv10_200 when (underflow_1_fu_2001_p2(0) = '1') else 
        tmp_20_fu_2025_p4;
    select_ln388_1_fu_1471_p3 <= 
        ap_const_lv10_200 when (and_ln786_1_fu_955_p2(0) = '1') else 
        tmp_11_fu_1453_p4;
    select_ln388_2_fu_1505_p3 <= 
        ap_const_lv10_200 when (and_ln786_2_fu_1010_p2(0) = '1') else 
        tmp_12_fu_1487_p4;
    select_ln388_3_fu_1539_p3 <= 
        ap_const_lv10_200 when (and_ln786_3_fu_1065_p2(0) = '1') else 
        tmp_13_fu_1521_p4;
    select_ln388_4_fu_1573_p3 <= 
        ap_const_lv10_200 when (and_ln786_4_fu_1120_p2(0) = '1') else 
        tmp_14_fu_1555_p4;
    select_ln388_5_fu_1607_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_1175_p2(0) = '1') else 
        tmp_15_fu_1589_p4;
    select_ln388_6_fu_1641_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_1230_p2(0) = '1') else 
        tmp_16_fu_1623_p4;
    select_ln388_7_fu_1675_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_1285_p2(0) = '1') else 
        tmp_17_fu_1657_p4;
    select_ln388_8_fu_1709_p3 <= 
        ap_const_lv10_200 when (and_ln786_8_fu_1340_p2(0) = '1') else 
        tmp_18_fu_1691_p4;
    select_ln388_9_fu_1743_p3 <= 
        ap_const_lv10_200 when (and_ln786_9_fu_1395_p2(0) = '1') else 
        tmp_19_fu_1725_p4;
    select_ln388_fu_1437_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_900_p2(0) = '1') else 
        tmp_fu_1419_p4;
    select_ln65_1_fu_792_p3 <= 
        data_array_3_V_reg_2307 when (icmp_ln1496_1_reg_2361(0) = '1') else 
        data_array_2_V_reg_2300;
    select_ln65_2_fu_803_p3 <= 
        select_ln65_1_fu_792_p3 when (icmp_ln1496_2_fu_797_p2(0) = '1') else 
        select_ln65_fu_787_p3;
    select_ln65_3_fu_811_p3 <= 
        data_array_5_V_reg_2321 when (icmp_ln1496_3_reg_2366(0) = '1') else 
        data_array_4_V_reg_2314;
    select_ln65_4_fu_816_p3 <= 
        data_array_7_V_reg_2335 when (icmp_ln1496_4_reg_2371(0) = '1') else 
        data_array_6_V_reg_2328;
    select_ln65_5_fu_827_p3 <= 
        select_ln65_4_fu_816_p3 when (icmp_ln1496_5_fu_821_p2(0) = '1') else 
        select_ln65_3_fu_811_p3;
    select_ln65_6_fu_839_p3 <= 
        select_ln65_5_reg_2382 when (icmp_ln1496_6_fu_835_p2(0) = '1') else 
        select_ln65_2_reg_2376;
    select_ln65_7_fu_849_p3 <= 
        data_array_9_V_reg_2349 when (icmp_ln1496_7_reg_2394(0) = '1') else 
        data_array_8_V_reg_2342;
    select_ln65_fu_787_p3 <= 
        data_array_1_V_reg_2293 when (icmp_ln1496_reg_2356(0) = '1') else 
        data_array_0_V_reg_2286;
        sext_ln241_fu_2063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_2600),26));

        sext_ln703_10_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_9_V_reg_2349),17));

        sext_ln703_1_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_reg_2399),17));

        sext_ln703_2_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_V_reg_2293),17));

        sext_ln703_3_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_V_reg_2300),17));

        sext_ln703_4_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_V_reg_2307),17));

        sext_ln703_5_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_V_reg_2314),17));

        sext_ln703_6_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_V_reg_2321),17));

        sext_ln703_7_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_V_reg_2328),17));

        sext_ln703_8_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_V_reg_2335),17));

        sext_ln703_9_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_8_V_reg_2342),17));

        sext_ln703_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_0_V_reg_2286),17));

    sub_ln1193_1_fu_927_p2 <= std_logic_vector(signed(sext_ln703_2_fu_924_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_2_fu_982_p2 <= std_logic_vector(signed(sext_ln703_3_fu_979_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_3_fu_1037_p2 <= std_logic_vector(signed(sext_ln703_4_fu_1034_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_4_fu_1092_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1089_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_5_fu_1147_p2 <= std_logic_vector(signed(sext_ln703_6_fu_1144_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_6_fu_1202_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1199_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_7_fu_1257_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1254_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_8_fu_1312_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1309_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_9_fu_1367_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1364_p1) - signed(sext_ln703_1_fu_869_p1));
    sub_ln1193_fu_872_p2 <= std_logic_vector(signed(sext_ln703_fu_866_p1) - signed(sext_ln703_1_fu_869_p1));
    tmp_11_fu_1453_p4 <= sub_ln1193_1_fu_927_p2(15 downto 6);
    tmp_12_fu_1487_p4 <= sub_ln1193_2_fu_982_p2(15 downto 6);
    tmp_13_fu_1521_p4 <= sub_ln1193_3_fu_1037_p2(15 downto 6);
    tmp_14_fu_1555_p4 <= sub_ln1193_4_fu_1092_p2(15 downto 6);
    tmp_15_fu_1589_p4 <= sub_ln1193_5_fu_1147_p2(15 downto 6);
    tmp_16_fu_1623_p4 <= sub_ln1193_6_fu_1202_p2(15 downto 6);
    tmp_17_fu_1657_p4 <= sub_ln1193_7_fu_1257_p2(15 downto 6);
    tmp_18_fu_1691_p4 <= sub_ln1193_8_fu_1312_p2(15 downto 6);
    tmp_19_fu_1725_p4 <= sub_ln1193_9_fu_1367_p2(15 downto 6);
    tmp_20_fu_2025_p4 <= p_Val2_29_fu_1982_p2(17 downto 8);
    tmp_21_fu_878_p3 <= sub_ln1193_fu_872_p2(16 downto 16);
    tmp_22_fu_886_p3 <= sub_ln1193_fu_872_p2(15 downto 15);
    tmp_23_fu_933_p3 <= sub_ln1193_1_fu_927_p2(16 downto 16);
    tmp_24_fu_941_p3 <= sub_ln1193_1_fu_927_p2(15 downto 15);
    tmp_25_fu_988_p3 <= sub_ln1193_2_fu_982_p2(16 downto 16);
    tmp_26_fu_996_p3 <= sub_ln1193_2_fu_982_p2(15 downto 15);
    tmp_27_fu_1043_p3 <= sub_ln1193_3_fu_1037_p2(16 downto 16);
    tmp_28_fu_1051_p3 <= sub_ln1193_3_fu_1037_p2(15 downto 15);
    tmp_29_fu_1098_p3 <= sub_ln1193_4_fu_1092_p2(16 downto 16);
    tmp_30_fu_1106_p3 <= sub_ln1193_4_fu_1092_p2(15 downto 15);
    tmp_31_fu_1153_p3 <= sub_ln1193_5_fu_1147_p2(16 downto 16);
    tmp_32_fu_1161_p3 <= sub_ln1193_5_fu_1147_p2(15 downto 15);
    tmp_33_fu_1208_p3 <= sub_ln1193_6_fu_1202_p2(16 downto 16);
    tmp_34_fu_1216_p3 <= sub_ln1193_6_fu_1202_p2(15 downto 15);
    tmp_35_fu_1263_p3 <= sub_ln1193_7_fu_1257_p2(16 downto 16);
    tmp_36_fu_1271_p3 <= sub_ln1193_7_fu_1257_p2(15 downto 15);
    tmp_37_fu_1318_p3 <= sub_ln1193_8_fu_1312_p2(16 downto 16);
    tmp_38_fu_1326_p3 <= sub_ln1193_8_fu_1312_p2(15 downto 15);
    tmp_39_fu_1373_p3 <= sub_ln1193_9_fu_1367_p2(16 downto 16);
    tmp_40_fu_1381_p3 <= sub_ln1193_9_fu_1367_p2(15 downto 15);
    tmp_fu_1419_p4 <= sub_ln1193_fu_872_p2(15 downto 6);
    underflow_1_fu_2001_p2 <= (xor_ln786_11_fu_1995_p2 and p_Result_20_fu_1974_p3);
    underflow_fu_1879_p2 <= (xor_ln786_10_fu_1873_p2 and p_Result_s_fu_1853_p3);
    x_max_V_fu_859_p3 <= 
        select_ln65_7_fu_849_p3 when (icmp_ln1496_8_fu_854_p2(0) = '1') else 
        select_ln65_6_reg_2388;
    xor_ln340_10_fu_906_p2 <= (tmp_22_fu_886_p3 xor tmp_21_fu_878_p3);
    xor_ln340_11_fu_961_p2 <= (tmp_24_fu_941_p3 xor tmp_23_fu_933_p3);
    xor_ln340_12_fu_1016_p2 <= (tmp_26_fu_996_p3 xor tmp_25_fu_988_p3);
    xor_ln340_13_fu_1071_p2 <= (tmp_28_fu_1051_p3 xor tmp_27_fu_1043_p3);
    xor_ln340_14_fu_1126_p2 <= (tmp_30_fu_1106_p3 xor tmp_29_fu_1098_p3);
    xor_ln340_15_fu_1181_p2 <= (tmp_32_fu_1161_p3 xor tmp_31_fu_1153_p3);
    xor_ln340_16_fu_1236_p2 <= (tmp_34_fu_1216_p3 xor tmp_33_fu_1208_p3);
    xor_ln340_17_fu_1291_p2 <= (tmp_36_fu_1271_p3 xor tmp_35_fu_1263_p3);
    xor_ln340_18_fu_1346_p2 <= (tmp_38_fu_1326_p3 xor tmp_37_fu_1318_p3);
    xor_ln340_19_fu_1401_p2 <= (tmp_40_fu_1381_p3 xor tmp_39_fu_1373_p3);
    xor_ln340_1_fu_967_p2 <= (tmp_23_fu_933_p3 xor ap_const_lv1_1);
    xor_ln340_20_fu_1885_p2 <= (p_Result_s_fu_1853_p3 xor p_Result_18_fu_1865_p3);
    xor_ln340_21_fu_1891_p2 <= (p_Result_s_fu_1853_p3 xor ap_const_lv1_1);
    xor_ln340_22_fu_2007_p2 <= (p_Result_21_fu_1987_p3 xor p_Result_20_fu_1974_p3);
    xor_ln340_23_fu_2013_p2 <= (p_Result_20_fu_1974_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_1022_p2 <= (tmp_25_fu_988_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_1077_p2 <= (tmp_27_fu_1043_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_1132_p2 <= (tmp_29_fu_1098_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_1187_p2 <= (tmp_31_fu_1153_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1242_p2 <= (tmp_33_fu_1208_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1297_p2 <= (tmp_35_fu_1263_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1352_p2 <= (tmp_37_fu_1318_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_1407_p2 <= (tmp_39_fu_1373_p3 xor ap_const_lv1_1);
    xor_ln340_fu_912_p2 <= (tmp_21_fu_878_p3 xor ap_const_lv1_1);
    xor_ln786_10_fu_1873_p2 <= (p_Result_18_fu_1865_p3 xor ap_const_lv1_1);
    xor_ln786_11_fu_1995_p2 <= (p_Result_21_fu_1987_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_949_p2 <= (tmp_24_fu_941_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_1004_p2 <= (tmp_26_fu_996_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_1059_p2 <= (tmp_28_fu_1051_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_1114_p2 <= (tmp_30_fu_1106_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1169_p2 <= (tmp_32_fu_1161_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1224_p2 <= (tmp_34_fu_1216_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1279_p2 <= (tmp_36_fu_1271_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1334_p2 <= (tmp_38_fu_1326_p3 xor ap_const_lv1_1);
    xor_ln786_9_fu_1389_p2 <= (tmp_40_fu_1381_p3 xor ap_const_lv1_1);
    xor_ln786_fu_894_p2 <= (tmp_22_fu_886_p3 xor ap_const_lv1_1);
    y_V_10_fu_2051_p3 <= 
        select_ln340_22_fu_2035_p3 when (or_ln340_11_fu_2019_p2(0) = '1') else 
        select_ln388_11_fu_2043_p3;
    y_V_1_fu_1479_p3 <= 
        select_ln340_2_fu_1463_p3 when (or_ln340_1_fu_973_p2(0) = '1') else 
        select_ln388_1_fu_1471_p3;
    y_V_2_fu_1513_p3 <= 
        select_ln340_4_fu_1497_p3 when (or_ln340_2_fu_1028_p2(0) = '1') else 
        select_ln388_2_fu_1505_p3;
    y_V_3_fu_1547_p3 <= 
        select_ln340_6_fu_1531_p3 when (or_ln340_3_fu_1083_p2(0) = '1') else 
        select_ln388_3_fu_1539_p3;
    y_V_4_fu_1581_p3 <= 
        select_ln340_8_fu_1565_p3 when (or_ln340_4_fu_1138_p2(0) = '1') else 
        select_ln388_4_fu_1573_p3;
    y_V_5_fu_1615_p3 <= 
        select_ln340_10_fu_1599_p3 when (or_ln340_5_fu_1193_p2(0) = '1') else 
        select_ln388_5_fu_1607_p3;
    y_V_6_fu_1649_p3 <= 
        select_ln340_12_fu_1633_p3 when (or_ln340_6_fu_1248_p2(0) = '1') else 
        select_ln388_6_fu_1641_p3;
    y_V_7_fu_1683_p3 <= 
        select_ln340_14_fu_1667_p3 when (or_ln340_7_fu_1303_p2(0) = '1') else 
        select_ln388_7_fu_1675_p3;
    y_V_8_fu_1717_p3 <= 
        select_ln340_16_fu_1701_p3 when (or_ln340_8_fu_1358_p2(0) = '1') else 
        select_ln388_8_fu_1709_p3;
    y_V_9_fu_1751_p3 <= 
        select_ln340_18_fu_1735_p3 when (or_ln340_9_fu_1413_p2(0) = '1') else 
        select_ln388_9_fu_1743_p3;
    y_V_fu_1445_p3 <= 
        select_ln340_fu_1429_p3 when (or_ln340_fu_918_p2(0) = '1') else 
        select_ln388_fu_1437_p3;
    zext_ln225_1_fu_1763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_reg_2409),64));
    zext_ln225_2_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_2414),64));
    zext_ln225_3_fu_1771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_2419),64));
    zext_ln225_4_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_2424),64));
    zext_ln225_5_fu_1779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_reg_2429),64));
    zext_ln225_6_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_reg_2434),64));
    zext_ln225_7_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_7_reg_2439),64));
    zext_ln225_8_fu_1791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_8_reg_2444),64));
    zext_ln225_9_fu_1795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_9_reg_2449),64));
    zext_ln225_fu_1759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_2404),64));
    zext_ln235_fu_2059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_10_reg_2590),64));
    zext_ln746_fu_1959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_27_reg_2584),18));
end behav;
