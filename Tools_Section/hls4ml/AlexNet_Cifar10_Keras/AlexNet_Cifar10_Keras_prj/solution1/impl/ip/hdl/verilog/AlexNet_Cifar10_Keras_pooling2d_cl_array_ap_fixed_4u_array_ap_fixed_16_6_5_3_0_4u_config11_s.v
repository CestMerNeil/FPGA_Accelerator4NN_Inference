// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer10_out_dout,
        layer10_out_num_data_valid,
        layer10_out_fifo_cap,
        layer10_out_empty_n,
        layer10_out_read,
        layer11_out_din,
        layer11_out_num_data_valid,
        layer11_out_fifo_cap,
        layer11_out_full_n,
        layer11_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] layer10_out_dout;
input  [8:0] layer10_out_num_data_valid;
input  [8:0] layer10_out_fifo_cap;
input   layer10_out_empty_n;
output   layer10_out_read;
output  [63:0] layer11_out_din;
input  [6:0] layer11_out_num_data_valid;
input  [6:0] layer11_out_fifo_cap;
input   layer11_out_full_n;
output   layer11_out_write;
output   start_out;
output   start_write;

reg ap_idle;
reg layer10_out_read;
reg layer11_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln55_reg_712;
reg   [0:0] icmp_ln55_reg_712_pp0_iter1_reg;
reg   [0:0] and_ln55_1_reg_734;
reg    ap_predicate_op120_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_134_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] sY_3;
reg   [31:0] pY_3;
reg   [31:0] pX_3;
reg   [31:0] sX_3;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1;
reg   [15:0] void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_195;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_196;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_197;
reg   [15:0] p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_198;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0;
reg    void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0;
wire   [15:0] void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
reg    layer10_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer11_out_blk_n;
reg   [0:0] icmp_ln109_reg_708;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln55_fu_150_p2;
wire   [0:0] icmp_ln55_2_fu_164_p2;
reg   [0:0] icmp_ln55_2_reg_716;
wire   [0:0] icmp_ln55_3_fu_170_p2;
reg   [0:0] icmp_ln55_3_reg_721;
wire   [0:0] icmp_ln76_fu_182_p2;
reg   [0:0] icmp_ln76_reg_726;
wire   [0:0] icmp_ln80_fu_236_p2;
reg   [0:0] icmp_ln80_reg_730;
wire   [0:0] and_ln55_1_fu_427_p2;
wire   [15:0] select_ln65_fu_445_p3;
reg   [15:0] select_ln65_reg_738;
wire   [15:0] select_ln65_9_fu_465_p3;
reg   [15:0] select_ln65_9_reg_744;
wire   [15:0] select_ln65_11_fu_485_p3;
reg   [15:0] select_ln65_11_reg_750;
wire   [15:0] select_ln65_12_fu_505_p3;
reg   [15:0] select_ln65_12_reg_756;
wire   [15:0] select_ln65_14_fu_525_p3;
reg   [15:0] select_ln65_14_reg_762;
wire   [15:0] select_ln65_15_fu_545_p3;
reg   [15:0] select_ln65_15_reg_768;
wire   [15:0] select_ln65_17_fu_565_p3;
reg   [15:0] select_ln65_17_reg_774;
wire   [15:0] select_ln65_18_fu_585_p3;
reg   [15:0] select_ln65_18_reg_780;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_119_p4;
wire   [31:0] add_ln86_fu_611_p2;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_115;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_115;
wire   [31:0] add_ln80_fu_230_p2;
wire   [31:0] add_ln76_fu_176_p2;
wire   [31:0] add_ln91_fu_202_p2;
wire   [15:0] pool_window_V_9_fu_259_p1;
wire   [15:0] pool_window_V_7_fu_283_p4;
wire   [15:0] pool_window_V_1_fu_263_p4;
wire   [15:0] pool_window_V_2_fu_273_p4;
reg   [8:0] indvar_flatten_fu_98;
wire   [8:0] add_ln109_fu_140_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] select_ln91_fu_194_p3;
wire   [0:0] and_ln55_fu_423_p2;
wire   [0:0] icmp_ln55_1_fu_417_p2;
wire   [0:0] icmp_ln1697_fu_433_p2;
wire   [0:0] xor_ln1697_fu_439_p2;
wire   [0:0] icmp_ln1697_9_fu_453_p2;
wire   [0:0] xor_ln1697_9_fu_459_p2;
wire   [0:0] icmp_ln1697_11_fu_473_p2;
wire   [0:0] xor_ln1697_11_fu_479_p2;
wire   [0:0] icmp_ln1697_12_fu_493_p2;
wire   [0:0] xor_ln1697_12_fu_499_p2;
wire   [0:0] icmp_ln1697_14_fu_513_p2;
wire   [0:0] xor_ln1697_14_fu_519_p2;
wire   [0:0] icmp_ln1697_15_fu_533_p2;
wire   [0:0] xor_ln1697_15_fu_539_p2;
wire   [0:0] icmp_ln1697_17_fu_553_p2;
wire   [0:0] xor_ln1697_17_fu_559_p2;
wire   [0:0] icmp_ln1697_18_fu_573_p2;
wire   [0:0] xor_ln1697_18_fu_579_p2;
wire   [0:0] icmp_ln86_fu_597_p2;
wire   [31:0] select_ln86_fu_603_p3;
wire   [0:0] icmp_ln1697_10_fu_624_p2;
wire   [0:0] xor_ln1697_10_fu_628_p2;
wire   [0:0] icmp_ln1697_13_fu_640_p2;
wire   [0:0] xor_ln1697_13_fu_644_p2;
wire   [0:0] icmp_ln1697_16_fu_656_p2;
wire   [0:0] xor_ln1697_16_fu_660_p2;
wire   [0:0] icmp_ln1697_19_fu_672_p2;
wire   [0:0] xor_ln1697_19_fu_676_p2;
wire   [15:0] res_pack_data_3_fu_682_p3;
wire   [15:0] res_pack_data_2_fu_666_p3;
wire   [15:0] res_pack_data_1_fu_650_p3;
wire   [15:0] res_pack_data_fu_634_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_224;
reg    ap_condition_222;
reg    ap_condition_289;
reg    ap_condition_248;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 sY_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 pX_3 = 32'd0;
#0 sX_3 = 32'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 = 16'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2 = 16'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 = 16'd0;
#0 void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_195 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_196 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_197 = 16'd0;
#0 p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_198 = 16'd0;
end

AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pdnG #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd15),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0),
    .d0(pool_window_V_9_fu_259_p1),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0)
);

AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pdnG #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd15),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0)
);

AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pdnG #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd15),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0)
);

AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s_void_pdnG #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(4'd15),
    .ce0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0),
    .we0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0),
    .d0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0),
    .q0(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0)
);

AlexNet_Cifar10_Keras_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_222)) begin
        if ((1'b1 == ap_condition_224)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_115 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_115 <= ap_phi_reg_pp0_iter0_storemerge_reg_115;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_222)) begin
        if ((icmp_ln109_fu_134_p2 == 1'd0)) begin
            indvar_flatten_fu_98 <= add_ln109_fu_140_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_98 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_289)) begin
        if ((icmp_ln76_fu_182_p2 == 1'd1)) begin
            pX_3 <= 32'd0;
        end else if ((icmp_ln76_fu_182_p2 == 1'd0)) begin
            pX_3 <= add_ln76_fu_176_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_248)) begin
        if ((icmp_ln80_fu_236_p2 == 1'd1)) begin
            pY_3 <= 32'd0;
        end else if ((icmp_ln80_fu_236_p2 == 1'd0)) begin
            pY_3 <= add_ln80_fu_230_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_289)) begin
        if ((icmp_ln76_fu_182_p2 == 1'd1)) begin
            sX_3 <= 32'd0;
        end else if ((icmp_ln76_fu_182_p2 == 1'd0)) begin
            sX_3 <= add_ln91_fu_202_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_712 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln55_1_reg_734 <= and_ln55_1_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln109_reg_708 <= icmp_ln109_fu_134_p2;
        icmp_ln55_reg_712_pp0_iter1_reg <= icmp_ln55_reg_712;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_134_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln55_fu_150_p2 == 1'd1))) begin
        icmp_ln55_2_reg_716 <= icmp_ln55_2_fu_164_p2;
        icmp_ln55_3_reg_721 <= icmp_ln55_3_fu_170_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_134_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln55_reg_712 <= icmp_ln55_fu_150_p2;
        icmp_ln76_reg_726 <= icmp_ln76_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_134_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_182_p2 == 1'd1))) begin
        icmp_ln80_reg_730 <= icmp_ln80_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_195 <= pool_window_V_9_fu_259_p1;
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_196 <= {{layer10_out_dout[31:16]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_197 <= {{layer10_out_dout[47:32]}};
        p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_198 <= {{layer10_out_dout[63:48]}};
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0;
        void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 <= void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_reg_726 == 1'd1))) begin
        sY_3 <= ap_phi_mux_storemerge_phi_fu_119_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln55_1_fu_427_p2) & (icmp_ln55_reg_712 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln65_11_reg_750 <= select_ln65_11_fu_485_p3;
        select_ln65_12_reg_756 <= select_ln65_12_fu_505_p3;
        select_ln65_14_reg_762 <= select_ln65_14_fu_525_p3;
        select_ln65_15_reg_768 <= select_ln65_15_fu_545_p3;
        select_ln65_17_reg_774 <= select_ln65_17_fu_565_p3;
        select_ln65_18_reg_780 <= select_ln65_18_fu_585_p3;
        select_ln65_9_reg_744 <= select_ln65_9_fu_465_p3;
        select_ln65_reg_738 <= select_ln65_fu_445_p3;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_134_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln80_reg_730 == 1'd0) & (icmp_ln76_reg_726 == 1'd1) & (icmp_ln109_reg_708 == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_119_p4 = add_ln86_fu_611_p2;
    end else begin
        ap_phi_mux_storemerge_phi_fu_119_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_115;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer10_out_blk_n = layer10_out_empty_n;
    end else begin
        layer10_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer10_out_read = 1'b1;
    end else begin
        layer10_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op120_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer11_out_blk_n = layer11_out_full_n;
    end else begin
        layer11_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op120_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer11_out_write = 1'b1;
    end else begin
        layer11_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 = 1'd1;
    end else begin
        void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_fu_140_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln76_fu_176_p2 = (pX_3 + 32'd1);

assign add_ln80_fu_230_p2 = (pY_3 + 32'd1);

assign add_ln86_fu_611_p2 = (sY_3 + select_ln86_fu_603_p3);

assign add_ln91_fu_202_p2 = (sX_3 + select_ln91_fu_194_p3);

assign and_ln55_1_fu_427_p2 = (icmp_ln55_1_fu_417_p2 & and_ln55_fu_423_p2);

assign and_ln55_fu_423_p2 = (icmp_ln55_3_reg_721 & icmp_ln55_2_reg_716);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op120_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_predicate_op120_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_predicate_op120_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer10_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (layer10_out_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op120_write_state3 == 1'b1) & (layer11_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_222 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_224 = ((icmp_ln109_fu_134_p2 == 1'd0) & (icmp_ln80_fu_236_p2 == 1'd1) & (icmp_ln76_fu_182_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_248 = ((icmp_ln109_fu_134_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_182_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_289 = ((icmp_ln109_fu_134_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_115 = 'bx;

always @ (*) begin
    ap_predicate_op120_write_state3 = ((1'd1 == and_ln55_1_reg_734) & (icmp_ln55_reg_712_pp0_iter1_reg == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln109_fu_134_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln1697_10_fu_624_p2 = (($signed(select_ln65_reg_738) < $signed(select_ln65_9_reg_744)) ? 1'b1 : 1'b0);

assign icmp_ln1697_11_fu_473_p2 = (($signed(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2) < $signed(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1697_12_fu_493_p2 = (($signed(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_196) < $signed(pool_window_V_7_fu_283_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1697_13_fu_640_p2 = (($signed(select_ln65_11_reg_750) < $signed(select_ln65_12_reg_756)) ? 1'b1 : 1'b0);

assign icmp_ln1697_14_fu_513_p2 = (($signed(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1) < $signed(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1697_15_fu_533_p2 = (($signed(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_197) < $signed(pool_window_V_1_fu_263_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1697_16_fu_656_p2 = (($signed(select_ln65_14_reg_762) < $signed(select_ln65_15_reg_768)) ? 1'b1 : 1'b0);

assign icmp_ln1697_17_fu_553_p2 = (($signed(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel) < $signed(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1697_18_fu_573_p2 = (($signed(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_198) < $signed(pool_window_V_2_fu_273_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1697_19_fu_672_p2 = (($signed(select_ln65_17_reg_774) < $signed(select_ln65_18_reg_780)) ? 1'b1 : 1'b0);

assign icmp_ln1697_9_fu_453_p2 = (($signed(p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_195) < $signed(pool_window_V_9_fu_259_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1697_fu_433_p2 = (($signed(void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3) < $signed(void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0)) ? 1'b1 : 1'b0);

assign icmp_ln55_1_fu_417_p2 = ((sY_3 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln55_2_fu_164_p2 = (($signed(pY_3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_3_fu_170_p2 = (($signed(pX_3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_150_p2 = ((sX_3 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_182_p2 = ((add_ln76_fu_176_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_236_p2 = ((add_ln80_fu_230_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_597_p2 = ((sY_3 == 32'd1) ? 1'b1 : 1'b0);

assign layer11_out_din = {{{{res_pack_data_3_fu_682_p3}, {res_pack_data_2_fu_666_p3}}, {res_pack_data_1_fu_650_p3}}, {res_pack_data_fu_634_p3}};

assign pool_window_V_1_fu_263_p4 = {{layer10_out_dout[47:32]}};

assign pool_window_V_2_fu_273_p4 = {{layer10_out_dout[63:48]}};

assign pool_window_V_7_fu_283_p4 = {{layer10_out_dout[31:16]}};

assign pool_window_V_9_fu_259_p1 = layer10_out_dout[15:0];

assign res_pack_data_1_fu_650_p3 = ((xor_ln1697_13_fu_644_p2[0:0] == 1'b1) ? select_ln65_11_reg_750 : select_ln65_12_reg_756);

assign res_pack_data_2_fu_666_p3 = ((xor_ln1697_16_fu_660_p2[0:0] == 1'b1) ? select_ln65_14_reg_762 : select_ln65_15_reg_768);

assign res_pack_data_3_fu_682_p3 = ((xor_ln1697_19_fu_676_p2[0:0] == 1'b1) ? select_ln65_17_reg_774 : select_ln65_18_reg_780);

assign res_pack_data_fu_634_p3 = ((xor_ln1697_10_fu_628_p2[0:0] == 1'b1) ? select_ln65_reg_738 : select_ln65_9_reg_744);

assign select_ln65_11_fu_485_p3 = ((xor_ln1697_11_fu_479_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_2 : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_q0);

assign select_ln65_12_fu_505_p3 = ((xor_ln1697_12_fu_499_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_196 : pool_window_V_7_fu_283_p4);

assign select_ln65_14_fu_525_p3 = ((xor_ln1697_14_fu_519_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_1 : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_q0);

assign select_ln65_15_fu_545_p3 = ((xor_ln1697_15_fu_539_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_197 : pool_window_V_1_fu_263_p4);

assign select_ln65_17_fu_565_p3 = ((xor_ln1697_17_fu_559_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_q0);

assign select_ln65_18_fu_585_p3 = ((xor_ln1697_18_fu_579_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_198 : pool_window_V_2_fu_273_p4);

assign select_ln65_9_fu_465_p3 = ((xor_ln1697_9_fu_459_p2[0:0] == 1'b1) ? p_ZZN4nnet22compute_pool_buffer_2dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9ap_195 : pool_window_V_9_fu_259_p1);

assign select_ln65_fu_445_p3 = ((xor_ln1697_fu_439_p2[0:0] == 1'b1) ? void_compute_pool_buffer_2d_array_const_ap_shift_reg_n_filt_stream_kernel_3 : void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_3_q0);

assign select_ln86_fu_603_p3 = ((icmp_ln86_fu_597_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign select_ln91_fu_194_p3 = ((icmp_ln55_fu_150_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign start_out = real_start;

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_1_d0 = {{layer10_out_dout[47:32]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_2_d0 = {{layer10_out_dout[31:16]}};

assign void_pooling2d_cl_stream_stream_array_ap_fixed_4u_0_line_buffer_d0 = {{layer10_out_dout[63:48]}};

assign xor_ln1697_10_fu_628_p2 = (icmp_ln1697_10_fu_624_p2 ^ 1'd1);

assign xor_ln1697_11_fu_479_p2 = (icmp_ln1697_11_fu_473_p2 ^ 1'd1);

assign xor_ln1697_12_fu_499_p2 = (icmp_ln1697_12_fu_493_p2 ^ 1'd1);

assign xor_ln1697_13_fu_644_p2 = (icmp_ln1697_13_fu_640_p2 ^ 1'd1);

assign xor_ln1697_14_fu_519_p2 = (icmp_ln1697_14_fu_513_p2 ^ 1'd1);

assign xor_ln1697_15_fu_539_p2 = (icmp_ln1697_15_fu_533_p2 ^ 1'd1);

assign xor_ln1697_16_fu_660_p2 = (icmp_ln1697_16_fu_656_p2 ^ 1'd1);

assign xor_ln1697_17_fu_559_p2 = (icmp_ln1697_17_fu_553_p2 ^ 1'd1);

assign xor_ln1697_18_fu_579_p2 = (icmp_ln1697_18_fu_573_p2 ^ 1'd1);

assign xor_ln1697_19_fu_676_p2 = (icmp_ln1697_19_fu_672_p2 ^ 1'd1);

assign xor_ln1697_9_fu_459_p2 = (icmp_ln1697_9_fu_453_p2 ^ 1'd1);

assign xor_ln1697_fu_439_p2 = (icmp_ln1697_fu_433_p2 ^ 1'd1);

endmodule //AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s
