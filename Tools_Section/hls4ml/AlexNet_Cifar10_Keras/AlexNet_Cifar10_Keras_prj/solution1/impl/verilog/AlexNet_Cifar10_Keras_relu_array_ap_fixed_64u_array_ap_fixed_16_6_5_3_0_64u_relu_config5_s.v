// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AlexNet_Cifar10_Keras_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer2_out_dout,
        layer2_out_num_data_valid,
        layer2_out_fifo_cap,
        layer2_out_empty_n,
        layer2_out_read,
        layer5_out_din,
        layer5_out_num_data_valid,
        layer5_out_fifo_cap,
        layer5_out_full_n,
        layer5_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1023:0] layer2_out_dout;
input  [10:0] layer2_out_num_data_valid;
input  [10:0] layer2_out_fifo_cap;
input   layer2_out_empty_n;
output   layer2_out_read;
output  [1023:0] layer5_out_din;
input  [10:0] layer5_out_num_data_valid;
input  [10:0] layer5_out_fifo_cap;
input   layer5_out_full_n;
output   layer5_out_write;
output   start_out;
output   start_write;

reg ap_idle;
reg layer2_out_read;
reg layer5_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln41_fu_449_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    layer2_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer5_out_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [14:0] out_data_data_fu_1740_p3;
reg   [14:0] out_data_data_reg_2966;
wire   [14:0] out_data_data_8_fu_1754_p3;
reg   [14:0] out_data_data_8_reg_2971;
wire   [14:0] out_data_data_10_fu_1768_p3;
reg   [14:0] out_data_data_10_reg_2976;
wire   [14:0] out_data_data_12_fu_1782_p3;
reg   [14:0] out_data_data_12_reg_2981;
wire   [14:0] select_ln51_fu_1796_p3;
reg   [14:0] select_ln51_reg_2986;
wire   [14:0] select_ln51_4_fu_1810_p3;
reg   [14:0] select_ln51_4_reg_2991;
wire   [14:0] select_ln51_5_fu_1824_p3;
reg   [14:0] select_ln51_5_reg_2996;
wire   [14:0] select_ln51_6_fu_1838_p3;
reg   [14:0] select_ln51_6_reg_3001;
wire   [14:0] select_ln51_7_fu_1852_p3;
reg   [14:0] select_ln51_7_reg_3006;
wire   [14:0] select_ln51_8_fu_1866_p3;
reg   [14:0] select_ln51_8_reg_3011;
wire   [14:0] select_ln51_9_fu_1880_p3;
reg   [14:0] select_ln51_9_reg_3016;
wire   [14:0] select_ln51_10_fu_1894_p3;
reg   [14:0] select_ln51_10_reg_3021;
wire   [14:0] select_ln51_11_fu_1908_p3;
reg   [14:0] select_ln51_11_reg_3026;
wire   [14:0] select_ln51_12_fu_1922_p3;
reg   [14:0] select_ln51_12_reg_3031;
wire   [14:0] select_ln51_13_fu_1936_p3;
reg   [14:0] select_ln51_13_reg_3036;
wire   [14:0] select_ln51_14_fu_1950_p3;
reg   [14:0] select_ln51_14_reg_3041;
wire   [14:0] select_ln51_15_fu_1964_p3;
reg   [14:0] select_ln51_15_reg_3046;
wire   [14:0] select_ln51_16_fu_1978_p3;
reg   [14:0] select_ln51_16_reg_3051;
wire   [14:0] select_ln51_17_fu_1992_p3;
reg   [14:0] select_ln51_17_reg_3056;
wire   [14:0] select_ln51_18_fu_2006_p3;
reg   [14:0] select_ln51_18_reg_3061;
wire   [14:0] select_ln51_19_fu_2020_p3;
reg   [14:0] select_ln51_19_reg_3066;
wire   [14:0] select_ln51_20_fu_2034_p3;
reg   [14:0] select_ln51_20_reg_3071;
wire   [14:0] select_ln51_21_fu_2048_p3;
reg   [14:0] select_ln51_21_reg_3076;
wire   [14:0] select_ln51_22_fu_2062_p3;
reg   [14:0] select_ln51_22_reg_3081;
wire   [14:0] select_ln51_23_fu_2076_p3;
reg   [14:0] select_ln51_23_reg_3086;
wire   [14:0] select_ln51_24_fu_2090_p3;
reg   [14:0] select_ln51_24_reg_3091;
wire   [14:0] select_ln51_25_fu_2104_p3;
reg   [14:0] select_ln51_25_reg_3096;
wire   [14:0] select_ln51_26_fu_2118_p3;
reg   [14:0] select_ln51_26_reg_3101;
wire   [14:0] select_ln51_27_fu_2132_p3;
reg   [14:0] select_ln51_27_reg_3106;
wire   [14:0] select_ln51_28_fu_2146_p3;
reg   [14:0] select_ln51_28_reg_3111;
wire   [14:0] select_ln51_29_fu_2160_p3;
reg   [14:0] select_ln51_29_reg_3116;
wire   [14:0] select_ln51_30_fu_2174_p3;
reg   [14:0] select_ln51_30_reg_3121;
wire   [14:0] select_ln51_31_fu_2188_p3;
reg   [14:0] select_ln51_31_reg_3126;
wire   [14:0] select_ln51_32_fu_2202_p3;
reg   [14:0] select_ln51_32_reg_3131;
wire   [14:0] select_ln51_33_fu_2216_p3;
reg   [14:0] select_ln51_33_reg_3136;
wire   [14:0] select_ln51_34_fu_2230_p3;
reg   [14:0] select_ln51_34_reg_3141;
wire   [14:0] select_ln51_35_fu_2244_p3;
reg   [14:0] select_ln51_35_reg_3146;
wire   [14:0] select_ln51_36_fu_2258_p3;
reg   [14:0] select_ln51_36_reg_3151;
wire   [14:0] select_ln51_37_fu_2272_p3;
reg   [14:0] select_ln51_37_reg_3156;
wire   [14:0] select_ln51_38_fu_2286_p3;
reg   [14:0] select_ln51_38_reg_3161;
wire   [14:0] select_ln51_39_fu_2300_p3;
reg   [14:0] select_ln51_39_reg_3166;
wire   [14:0] select_ln51_40_fu_2314_p3;
reg   [14:0] select_ln51_40_reg_3171;
wire   [14:0] select_ln51_41_fu_2328_p3;
reg   [14:0] select_ln51_41_reg_3176;
wire   [14:0] select_ln51_42_fu_2342_p3;
reg   [14:0] select_ln51_42_reg_3181;
wire   [14:0] select_ln51_43_fu_2356_p3;
reg   [14:0] select_ln51_43_reg_3186;
wire   [14:0] select_ln51_44_fu_2370_p3;
reg   [14:0] select_ln51_44_reg_3191;
wire   [14:0] select_ln51_45_fu_2384_p3;
reg   [14:0] select_ln51_45_reg_3196;
wire   [14:0] select_ln51_46_fu_2398_p3;
reg   [14:0] select_ln51_46_reg_3201;
wire   [14:0] select_ln51_47_fu_2412_p3;
reg   [14:0] select_ln51_47_reg_3206;
wire   [14:0] select_ln51_48_fu_2426_p3;
reg   [14:0] select_ln51_48_reg_3211;
wire   [14:0] select_ln51_49_fu_2440_p3;
reg   [14:0] select_ln51_49_reg_3216;
wire   [14:0] select_ln51_50_fu_2454_p3;
reg   [14:0] select_ln51_50_reg_3221;
wire   [14:0] select_ln51_51_fu_2468_p3;
reg   [14:0] select_ln51_51_reg_3226;
wire   [14:0] select_ln51_52_fu_2482_p3;
reg   [14:0] select_ln51_52_reg_3231;
wire   [14:0] select_ln51_53_fu_2496_p3;
reg   [14:0] select_ln51_53_reg_3236;
wire   [14:0] select_ln51_54_fu_2510_p3;
reg   [14:0] select_ln51_54_reg_3241;
wire   [14:0] select_ln51_55_fu_2524_p3;
reg   [14:0] select_ln51_55_reg_3246;
wire   [14:0] select_ln51_56_fu_2538_p3;
reg   [14:0] select_ln51_56_reg_3251;
wire   [14:0] select_ln51_57_fu_2552_p3;
reg   [14:0] select_ln51_57_reg_3256;
wire   [14:0] select_ln51_58_fu_2566_p3;
reg   [14:0] select_ln51_58_reg_3261;
wire   [14:0] select_ln51_59_fu_2580_p3;
reg   [14:0] select_ln51_59_reg_3266;
wire   [14:0] select_ln51_60_fu_2594_p3;
reg   [14:0] select_ln51_60_reg_3271;
wire   [14:0] select_ln51_61_fu_2608_p3;
reg   [14:0] select_ln51_61_reg_3276;
wire   [14:0] select_ln51_62_fu_2622_p3;
reg   [14:0] select_ln51_62_reg_3281;
reg   [10:0] i_fu_424;
wire   [10:0] i_14_fu_455_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_i_13;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] in_data_data_fu_466_p1;
wire   [0:0] icmp_ln1695_fu_1734_p2;
wire   [14:0] trunc_ln145_61_fu_470_p1;
wire   [15:0] in_data_data_10_fu_494_p4;
wire   [0:0] icmp_ln1695_8_fu_1748_p2;
wire   [14:0] trunc_ln_fu_504_p4;
wire   [15:0] in_data_data_11_fu_514_p4;
wire   [0:0] icmp_ln1695_9_fu_1762_p2;
wire   [14:0] trunc_ln44_3_fu_524_p4;
wire   [15:0] in_data_data_12_fu_534_p4;
wire   [0:0] icmp_ln1695_10_fu_1776_p2;
wire   [14:0] trunc_ln44_4_fu_544_p4;
wire   [15:0] tmp_fu_554_p4;
wire   [0:0] icmp_ln1695_11_fu_1790_p2;
wire   [14:0] trunc_ln145_s_fu_564_p4;
wire   [15:0] tmp_s_fu_574_p4;
wire   [0:0] icmp_ln1695_12_fu_1804_p2;
wire   [14:0] trunc_ln145_3_fu_584_p4;
wire   [15:0] tmp_3_fu_594_p4;
wire   [0:0] icmp_ln1695_13_fu_1818_p2;
wire   [14:0] trunc_ln145_4_fu_604_p4;
wire   [15:0] tmp_4_fu_614_p4;
wire   [0:0] icmp_ln1695_14_fu_1832_p2;
wire   [14:0] trunc_ln145_5_fu_624_p4;
wire   [15:0] tmp_5_fu_634_p4;
wire   [0:0] icmp_ln1695_15_fu_1846_p2;
wire   [14:0] trunc_ln145_6_fu_644_p4;
wire   [15:0] tmp_6_fu_654_p4;
wire   [0:0] icmp_ln1695_16_fu_1860_p2;
wire   [14:0] trunc_ln145_7_fu_664_p4;
wire   [15:0] tmp_7_fu_674_p4;
wire   [0:0] icmp_ln1695_17_fu_1874_p2;
wire   [14:0] trunc_ln145_8_fu_684_p4;
wire   [15:0] tmp_8_fu_694_p4;
wire   [0:0] icmp_ln1695_18_fu_1888_p2;
wire   [14:0] trunc_ln145_9_fu_704_p4;
wire   [15:0] tmp_9_fu_714_p4;
wire   [0:0] icmp_ln1695_19_fu_1902_p2;
wire   [14:0] trunc_ln145_10_fu_724_p4;
wire   [15:0] tmp_10_fu_734_p4;
wire   [0:0] icmp_ln1695_20_fu_1916_p2;
wire   [14:0] trunc_ln145_11_fu_744_p4;
wire   [15:0] tmp_11_fu_754_p4;
wire   [0:0] icmp_ln1695_21_fu_1930_p2;
wire   [14:0] trunc_ln145_12_fu_764_p4;
wire   [15:0] tmp_12_fu_774_p4;
wire   [0:0] icmp_ln1695_22_fu_1944_p2;
wire   [14:0] trunc_ln145_13_fu_784_p4;
wire   [15:0] tmp_13_fu_794_p4;
wire   [0:0] icmp_ln1695_23_fu_1958_p2;
wire   [14:0] trunc_ln145_14_fu_804_p4;
wire   [15:0] tmp_14_fu_814_p4;
wire   [0:0] icmp_ln1695_24_fu_1972_p2;
wire   [14:0] trunc_ln145_15_fu_824_p4;
wire   [15:0] tmp_15_fu_834_p4;
wire   [0:0] icmp_ln1695_25_fu_1986_p2;
wire   [14:0] trunc_ln145_16_fu_844_p4;
wire   [15:0] tmp_16_fu_854_p4;
wire   [0:0] icmp_ln1695_26_fu_2000_p2;
wire   [14:0] trunc_ln145_17_fu_864_p4;
wire   [15:0] tmp_17_fu_874_p4;
wire   [0:0] icmp_ln1695_27_fu_2014_p2;
wire   [14:0] trunc_ln145_18_fu_884_p4;
wire   [15:0] tmp_18_fu_894_p4;
wire   [0:0] icmp_ln1695_28_fu_2028_p2;
wire   [14:0] trunc_ln145_19_fu_904_p4;
wire   [15:0] tmp_19_fu_914_p4;
wire   [0:0] icmp_ln1695_29_fu_2042_p2;
wire   [14:0] trunc_ln145_20_fu_924_p4;
wire   [15:0] tmp_20_fu_934_p4;
wire   [0:0] icmp_ln1695_30_fu_2056_p2;
wire   [14:0] trunc_ln145_21_fu_944_p4;
wire   [15:0] tmp_21_fu_954_p4;
wire   [0:0] icmp_ln1695_31_fu_2070_p2;
wire   [14:0] trunc_ln145_22_fu_964_p4;
wire   [15:0] tmp_22_fu_974_p4;
wire   [0:0] icmp_ln1695_32_fu_2084_p2;
wire   [14:0] trunc_ln145_23_fu_984_p4;
wire   [15:0] tmp_23_fu_994_p4;
wire   [0:0] icmp_ln1695_33_fu_2098_p2;
wire   [14:0] trunc_ln145_24_fu_1004_p4;
wire   [15:0] tmp_24_fu_1014_p4;
wire   [0:0] icmp_ln1695_34_fu_2112_p2;
wire   [14:0] trunc_ln145_25_fu_1024_p4;
wire   [15:0] tmp_25_fu_1034_p4;
wire   [0:0] icmp_ln1695_35_fu_2126_p2;
wire   [14:0] trunc_ln145_26_fu_1044_p4;
wire   [15:0] tmp_26_fu_1054_p4;
wire   [0:0] icmp_ln1695_36_fu_2140_p2;
wire   [14:0] trunc_ln145_27_fu_1064_p4;
wire   [15:0] tmp_27_fu_1074_p4;
wire   [0:0] icmp_ln1695_37_fu_2154_p2;
wire   [14:0] trunc_ln145_28_fu_1084_p4;
wire   [15:0] tmp_28_fu_1094_p4;
wire   [0:0] icmp_ln1695_38_fu_2168_p2;
wire   [14:0] trunc_ln145_29_fu_1104_p4;
wire   [15:0] tmp_29_fu_1114_p4;
wire   [0:0] icmp_ln1695_39_fu_2182_p2;
wire   [14:0] trunc_ln145_30_fu_1124_p4;
wire   [15:0] tmp_30_fu_1134_p4;
wire   [0:0] icmp_ln1695_40_fu_2196_p2;
wire   [14:0] trunc_ln145_31_fu_1144_p4;
wire   [15:0] tmp_31_fu_1154_p4;
wire   [0:0] icmp_ln1695_41_fu_2210_p2;
wire   [14:0] trunc_ln145_32_fu_1164_p4;
wire   [15:0] tmp_32_fu_1174_p4;
wire   [0:0] icmp_ln1695_42_fu_2224_p2;
wire   [14:0] trunc_ln145_33_fu_1184_p4;
wire   [15:0] tmp_33_fu_1194_p4;
wire   [0:0] icmp_ln1695_43_fu_2238_p2;
wire   [14:0] trunc_ln145_34_fu_1204_p4;
wire   [15:0] tmp_34_fu_1214_p4;
wire   [0:0] icmp_ln1695_44_fu_2252_p2;
wire   [14:0] trunc_ln145_35_fu_1224_p4;
wire   [15:0] tmp_35_fu_1234_p4;
wire   [0:0] icmp_ln1695_45_fu_2266_p2;
wire   [14:0] trunc_ln145_36_fu_1244_p4;
wire   [15:0] tmp_36_fu_1254_p4;
wire   [0:0] icmp_ln1695_46_fu_2280_p2;
wire   [14:0] trunc_ln145_37_fu_1264_p4;
wire   [15:0] tmp_37_fu_1274_p4;
wire   [0:0] icmp_ln1695_47_fu_2294_p2;
wire   [14:0] trunc_ln145_38_fu_1284_p4;
wire   [15:0] tmp_38_fu_1294_p4;
wire   [0:0] icmp_ln1695_48_fu_2308_p2;
wire   [14:0] trunc_ln145_39_fu_1304_p4;
wire   [15:0] tmp_39_fu_1314_p4;
wire   [0:0] icmp_ln1695_49_fu_2322_p2;
wire   [14:0] trunc_ln145_40_fu_1324_p4;
wire   [15:0] tmp_40_fu_1334_p4;
wire   [0:0] icmp_ln1695_50_fu_2336_p2;
wire   [14:0] trunc_ln145_41_fu_1344_p4;
wire   [15:0] tmp_41_fu_1354_p4;
wire   [0:0] icmp_ln1695_51_fu_2350_p2;
wire   [14:0] trunc_ln145_42_fu_1364_p4;
wire   [15:0] tmp_42_fu_1374_p4;
wire   [0:0] icmp_ln1695_52_fu_2364_p2;
wire   [14:0] trunc_ln145_43_fu_1384_p4;
wire   [15:0] tmp_43_fu_1394_p4;
wire   [0:0] icmp_ln1695_53_fu_2378_p2;
wire   [14:0] trunc_ln145_44_fu_1404_p4;
wire   [15:0] tmp_44_fu_1414_p4;
wire   [0:0] icmp_ln1695_54_fu_2392_p2;
wire   [14:0] trunc_ln145_45_fu_1424_p4;
wire   [15:0] tmp_45_fu_1434_p4;
wire   [0:0] icmp_ln1695_55_fu_2406_p2;
wire   [14:0] trunc_ln145_46_fu_1444_p4;
wire   [15:0] tmp_46_fu_1454_p4;
wire   [0:0] icmp_ln1695_56_fu_2420_p2;
wire   [14:0] trunc_ln145_47_fu_1464_p4;
wire   [15:0] tmp_47_fu_1474_p4;
wire   [0:0] icmp_ln1695_57_fu_2434_p2;
wire   [14:0] trunc_ln145_48_fu_1484_p4;
wire   [15:0] tmp_48_fu_1494_p4;
wire   [0:0] icmp_ln1695_58_fu_2448_p2;
wire   [14:0] trunc_ln145_49_fu_1504_p4;
wire   [15:0] tmp_49_fu_1514_p4;
wire   [0:0] icmp_ln1695_59_fu_2462_p2;
wire   [14:0] trunc_ln145_50_fu_1524_p4;
wire   [15:0] tmp_50_fu_1534_p4;
wire   [0:0] icmp_ln1695_60_fu_2476_p2;
wire   [14:0] trunc_ln145_51_fu_1544_p4;
wire   [15:0] tmp_51_fu_1554_p4;
wire   [0:0] icmp_ln1695_61_fu_2490_p2;
wire   [14:0] trunc_ln145_52_fu_1564_p4;
wire   [15:0] tmp_52_fu_1574_p4;
wire   [0:0] icmp_ln1695_62_fu_2504_p2;
wire   [14:0] trunc_ln145_53_fu_1584_p4;
wire   [15:0] tmp_53_fu_1594_p4;
wire   [0:0] icmp_ln1695_63_fu_2518_p2;
wire   [14:0] trunc_ln145_54_fu_1604_p4;
wire   [15:0] tmp_54_fu_1614_p4;
wire   [0:0] icmp_ln1695_64_fu_2532_p2;
wire   [14:0] trunc_ln145_55_fu_1624_p4;
wire   [15:0] tmp_55_fu_1634_p4;
wire   [0:0] icmp_ln1695_65_fu_2546_p2;
wire   [14:0] trunc_ln145_56_fu_1644_p4;
wire   [15:0] tmp_56_fu_1654_p4;
wire   [0:0] icmp_ln1695_66_fu_2560_p2;
wire   [14:0] trunc_ln145_57_fu_1664_p4;
wire   [15:0] tmp_57_fu_1674_p4;
wire   [0:0] icmp_ln1695_67_fu_2574_p2;
wire   [14:0] trunc_ln145_58_fu_1684_p4;
wire   [15:0] tmp_58_fu_1694_p4;
wire   [0:0] icmp_ln1695_68_fu_2588_p2;
wire   [14:0] trunc_ln145_59_fu_1704_p4;
wire   [15:0] trunc_ln145_1_fu_474_p4;
wire   [0:0] icmp_ln1695_69_fu_2602_p2;
wire   [14:0] trunc_ln145_60_fu_1714_p4;
wire   [15:0] trunc_ln145_2_fu_484_p4;
wire   [0:0] icmp_ln1695_70_fu_2616_p2;
wire   [14:0] trunc_ln2_fu_1724_p4;
wire   [15:0] zext_ln1695_60_fu_2816_p1;
wire   [15:0] zext_ln1695_59_fu_2813_p1;
wire   [15:0] zext_ln1695_58_fu_2810_p1;
wire   [15:0] zext_ln1695_57_fu_2807_p1;
wire   [15:0] zext_ln1695_56_fu_2804_p1;
wire   [15:0] zext_ln1695_55_fu_2801_p1;
wire   [15:0] zext_ln1695_54_fu_2798_p1;
wire   [15:0] zext_ln1695_53_fu_2795_p1;
wire   [15:0] zext_ln1695_52_fu_2792_p1;
wire   [15:0] zext_ln1695_51_fu_2789_p1;
wire   [15:0] zext_ln1695_50_fu_2786_p1;
wire   [15:0] zext_ln1695_49_fu_2783_p1;
wire   [15:0] zext_ln1695_48_fu_2780_p1;
wire   [15:0] zext_ln1695_47_fu_2777_p1;
wire   [15:0] zext_ln1695_46_fu_2774_p1;
wire   [15:0] zext_ln1695_45_fu_2771_p1;
wire   [15:0] zext_ln1695_44_fu_2768_p1;
wire   [15:0] zext_ln1695_43_fu_2765_p1;
wire   [15:0] zext_ln1695_42_fu_2762_p1;
wire   [15:0] zext_ln1695_41_fu_2759_p1;
wire   [15:0] zext_ln1695_40_fu_2756_p1;
wire   [15:0] zext_ln1695_39_fu_2753_p1;
wire   [15:0] zext_ln1695_38_fu_2750_p1;
wire   [15:0] zext_ln1695_37_fu_2747_p1;
wire   [15:0] zext_ln1695_36_fu_2744_p1;
wire   [15:0] zext_ln1695_35_fu_2741_p1;
wire   [15:0] zext_ln1695_34_fu_2738_p1;
wire   [15:0] zext_ln1695_33_fu_2735_p1;
wire   [15:0] zext_ln1695_32_fu_2732_p1;
wire   [15:0] zext_ln1695_31_fu_2729_p1;
wire   [15:0] zext_ln1695_30_fu_2726_p1;
wire   [15:0] zext_ln1695_29_fu_2723_p1;
wire   [15:0] zext_ln1695_28_fu_2720_p1;
wire   [15:0] zext_ln1695_27_fu_2717_p1;
wire   [15:0] zext_ln1695_26_fu_2714_p1;
wire   [15:0] zext_ln1695_25_fu_2711_p1;
wire   [15:0] zext_ln1695_24_fu_2708_p1;
wire   [15:0] zext_ln1695_23_fu_2705_p1;
wire   [15:0] zext_ln1695_22_fu_2702_p1;
wire   [15:0] zext_ln1695_21_fu_2699_p1;
wire   [15:0] zext_ln1695_20_fu_2696_p1;
wire   [15:0] zext_ln1695_19_fu_2693_p1;
wire   [15:0] zext_ln1695_18_fu_2690_p1;
wire   [15:0] zext_ln1695_17_fu_2687_p1;
wire   [15:0] zext_ln1695_16_fu_2684_p1;
wire   [15:0] zext_ln1695_15_fu_2681_p1;
wire   [15:0] zext_ln1695_14_fu_2678_p1;
wire   [15:0] zext_ln1695_13_fu_2675_p1;
wire   [15:0] zext_ln1695_12_fu_2672_p1;
wire   [15:0] zext_ln1695_11_fu_2669_p1;
wire   [15:0] zext_ln1695_10_fu_2666_p1;
wire   [15:0] zext_ln1695_9_fu_2663_p1;
wire   [15:0] zext_ln1695_8_fu_2660_p1;
wire   [15:0] zext_ln1695_7_fu_2657_p1;
wire   [15:0] zext_ln1695_6_fu_2654_p1;
wire   [15:0] zext_ln1695_5_fu_2651_p1;
wire   [15:0] zext_ln1695_4_fu_2648_p1;
wire   [15:0] zext_ln1695_3_fu_2645_p1;
wire   [15:0] zext_ln1695_fu_2642_p1;
wire   [15:0] zext_ln45_6_fu_2639_p1;
wire   [15:0] zext_ln45_5_fu_2636_p1;
wire   [15:0] zext_ln45_4_fu_2633_p1;
wire   [15:0] zext_ln45_fu_2630_p1;
wire   [1022:0] or_ln174_s_fu_2819_p65;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_238;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

AlexNet_Cifar10_Keras_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_238)) begin
        if ((icmp_ln41_fu_449_p2 == 1'd0)) begin
            i_fu_424 <= i_14_fu_455_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_424 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        out_data_data_10_reg_2976 <= out_data_data_10_fu_1768_p3;
        out_data_data_12_reg_2981 <= out_data_data_12_fu_1782_p3;
        out_data_data_8_reg_2971 <= out_data_data_8_fu_1754_p3;
        out_data_data_reg_2966 <= out_data_data_fu_1740_p3;
        select_ln51_10_reg_3021 <= select_ln51_10_fu_1894_p3;
        select_ln51_11_reg_3026 <= select_ln51_11_fu_1908_p3;
        select_ln51_12_reg_3031 <= select_ln51_12_fu_1922_p3;
        select_ln51_13_reg_3036 <= select_ln51_13_fu_1936_p3;
        select_ln51_14_reg_3041 <= select_ln51_14_fu_1950_p3;
        select_ln51_15_reg_3046 <= select_ln51_15_fu_1964_p3;
        select_ln51_16_reg_3051 <= select_ln51_16_fu_1978_p3;
        select_ln51_17_reg_3056 <= select_ln51_17_fu_1992_p3;
        select_ln51_18_reg_3061 <= select_ln51_18_fu_2006_p3;
        select_ln51_19_reg_3066 <= select_ln51_19_fu_2020_p3;
        select_ln51_20_reg_3071 <= select_ln51_20_fu_2034_p3;
        select_ln51_21_reg_3076 <= select_ln51_21_fu_2048_p3;
        select_ln51_22_reg_3081 <= select_ln51_22_fu_2062_p3;
        select_ln51_23_reg_3086 <= select_ln51_23_fu_2076_p3;
        select_ln51_24_reg_3091 <= select_ln51_24_fu_2090_p3;
        select_ln51_25_reg_3096 <= select_ln51_25_fu_2104_p3;
        select_ln51_26_reg_3101 <= select_ln51_26_fu_2118_p3;
        select_ln51_27_reg_3106 <= select_ln51_27_fu_2132_p3;
        select_ln51_28_reg_3111 <= select_ln51_28_fu_2146_p3;
        select_ln51_29_reg_3116 <= select_ln51_29_fu_2160_p3;
        select_ln51_30_reg_3121 <= select_ln51_30_fu_2174_p3;
        select_ln51_31_reg_3126 <= select_ln51_31_fu_2188_p3;
        select_ln51_32_reg_3131 <= select_ln51_32_fu_2202_p3;
        select_ln51_33_reg_3136 <= select_ln51_33_fu_2216_p3;
        select_ln51_34_reg_3141 <= select_ln51_34_fu_2230_p3;
        select_ln51_35_reg_3146 <= select_ln51_35_fu_2244_p3;
        select_ln51_36_reg_3151 <= select_ln51_36_fu_2258_p3;
        select_ln51_37_reg_3156 <= select_ln51_37_fu_2272_p3;
        select_ln51_38_reg_3161 <= select_ln51_38_fu_2286_p3;
        select_ln51_39_reg_3166 <= select_ln51_39_fu_2300_p3;
        select_ln51_40_reg_3171 <= select_ln51_40_fu_2314_p3;
        select_ln51_41_reg_3176 <= select_ln51_41_fu_2328_p3;
        select_ln51_42_reg_3181 <= select_ln51_42_fu_2342_p3;
        select_ln51_43_reg_3186 <= select_ln51_43_fu_2356_p3;
        select_ln51_44_reg_3191 <= select_ln51_44_fu_2370_p3;
        select_ln51_45_reg_3196 <= select_ln51_45_fu_2384_p3;
        select_ln51_46_reg_3201 <= select_ln51_46_fu_2398_p3;
        select_ln51_47_reg_3206 <= select_ln51_47_fu_2412_p3;
        select_ln51_48_reg_3211 <= select_ln51_48_fu_2426_p3;
        select_ln51_49_reg_3216 <= select_ln51_49_fu_2440_p3;
        select_ln51_4_reg_2991 <= select_ln51_4_fu_1810_p3;
        select_ln51_50_reg_3221 <= select_ln51_50_fu_2454_p3;
        select_ln51_51_reg_3226 <= select_ln51_51_fu_2468_p3;
        select_ln51_52_reg_3231 <= select_ln51_52_fu_2482_p3;
        select_ln51_53_reg_3236 <= select_ln51_53_fu_2496_p3;
        select_ln51_54_reg_3241 <= select_ln51_54_fu_2510_p3;
        select_ln51_55_reg_3246 <= select_ln51_55_fu_2524_p3;
        select_ln51_56_reg_3251 <= select_ln51_56_fu_2538_p3;
        select_ln51_57_reg_3256 <= select_ln51_57_fu_2552_p3;
        select_ln51_58_reg_3261 <= select_ln51_58_fu_2566_p3;
        select_ln51_59_reg_3266 <= select_ln51_59_fu_2580_p3;
        select_ln51_5_reg_2996 <= select_ln51_5_fu_1824_p3;
        select_ln51_60_reg_3271 <= select_ln51_60_fu_2594_p3;
        select_ln51_61_reg_3276 <= select_ln51_61_fu_2608_p3;
        select_ln51_62_reg_3281 <= select_ln51_62_fu_2622_p3;
        select_ln51_6_reg_3001 <= select_ln51_6_fu_1838_p3;
        select_ln51_7_reg_3006 <= select_ln51_7_fu_1852_p3;
        select_ln51_8_reg_3011 <= select_ln51_8_fu_1866_p3;
        select_ln51_9_reg_3016 <= select_ln51_9_fu_1880_p3;
        select_ln51_reg_2986 <= select_ln51_fu_1796_p3;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_449_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_13 = 11'd0;
    end else begin
        ap_sig_allocacmp_i_13 = i_fu_424;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_out_blk_n = layer2_out_empty_n;
    end else begin
        layer2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_out_read = 1'b1;
    end else begin
        layer2_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer5_out_blk_n = layer5_out_full_n;
    end else begin
        layer5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer5_out_write = 1'b1;
    end else begin
        layer5_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((layer5_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer2_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((layer5_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer2_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((layer5_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer2_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (layer2_out_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (layer5_out_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_238 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign i_14_fu_455_p2 = (ap_sig_allocacmp_i_13 + 11'd1);

assign icmp_ln1695_10_fu_1776_p2 = (($signed(in_data_data_12_fu_534_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_11_fu_1790_p2 = (($signed(tmp_fu_554_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_12_fu_1804_p2 = (($signed(tmp_s_fu_574_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_13_fu_1818_p2 = (($signed(tmp_3_fu_594_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_14_fu_1832_p2 = (($signed(tmp_4_fu_614_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_15_fu_1846_p2 = (($signed(tmp_5_fu_634_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_16_fu_1860_p2 = (($signed(tmp_6_fu_654_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_17_fu_1874_p2 = (($signed(tmp_7_fu_674_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_18_fu_1888_p2 = (($signed(tmp_8_fu_694_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_19_fu_1902_p2 = (($signed(tmp_9_fu_714_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_20_fu_1916_p2 = (($signed(tmp_10_fu_734_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_21_fu_1930_p2 = (($signed(tmp_11_fu_754_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_22_fu_1944_p2 = (($signed(tmp_12_fu_774_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_23_fu_1958_p2 = (($signed(tmp_13_fu_794_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_24_fu_1972_p2 = (($signed(tmp_14_fu_814_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_25_fu_1986_p2 = (($signed(tmp_15_fu_834_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_26_fu_2000_p2 = (($signed(tmp_16_fu_854_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_27_fu_2014_p2 = (($signed(tmp_17_fu_874_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_28_fu_2028_p2 = (($signed(tmp_18_fu_894_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_29_fu_2042_p2 = (($signed(tmp_19_fu_914_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_30_fu_2056_p2 = (($signed(tmp_20_fu_934_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_31_fu_2070_p2 = (($signed(tmp_21_fu_954_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_32_fu_2084_p2 = (($signed(tmp_22_fu_974_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_33_fu_2098_p2 = (($signed(tmp_23_fu_994_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_34_fu_2112_p2 = (($signed(tmp_24_fu_1014_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_35_fu_2126_p2 = (($signed(tmp_25_fu_1034_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_36_fu_2140_p2 = (($signed(tmp_26_fu_1054_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_37_fu_2154_p2 = (($signed(tmp_27_fu_1074_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_38_fu_2168_p2 = (($signed(tmp_28_fu_1094_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_39_fu_2182_p2 = (($signed(tmp_29_fu_1114_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_40_fu_2196_p2 = (($signed(tmp_30_fu_1134_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_41_fu_2210_p2 = (($signed(tmp_31_fu_1154_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_42_fu_2224_p2 = (($signed(tmp_32_fu_1174_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_43_fu_2238_p2 = (($signed(tmp_33_fu_1194_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_44_fu_2252_p2 = (($signed(tmp_34_fu_1214_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_45_fu_2266_p2 = (($signed(tmp_35_fu_1234_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_46_fu_2280_p2 = (($signed(tmp_36_fu_1254_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_47_fu_2294_p2 = (($signed(tmp_37_fu_1274_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_48_fu_2308_p2 = (($signed(tmp_38_fu_1294_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_49_fu_2322_p2 = (($signed(tmp_39_fu_1314_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_50_fu_2336_p2 = (($signed(tmp_40_fu_1334_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_51_fu_2350_p2 = (($signed(tmp_41_fu_1354_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_52_fu_2364_p2 = (($signed(tmp_42_fu_1374_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_53_fu_2378_p2 = (($signed(tmp_43_fu_1394_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_54_fu_2392_p2 = (($signed(tmp_44_fu_1414_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_55_fu_2406_p2 = (($signed(tmp_45_fu_1434_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_56_fu_2420_p2 = (($signed(tmp_46_fu_1454_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_57_fu_2434_p2 = (($signed(tmp_47_fu_1474_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_58_fu_2448_p2 = (($signed(tmp_48_fu_1494_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_59_fu_2462_p2 = (($signed(tmp_49_fu_1514_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_60_fu_2476_p2 = (($signed(tmp_50_fu_1534_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_61_fu_2490_p2 = (($signed(tmp_51_fu_1554_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_62_fu_2504_p2 = (($signed(tmp_52_fu_1574_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_63_fu_2518_p2 = (($signed(tmp_53_fu_1594_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_64_fu_2532_p2 = (($signed(tmp_54_fu_1614_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_65_fu_2546_p2 = (($signed(tmp_55_fu_1634_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_66_fu_2560_p2 = (($signed(tmp_56_fu_1654_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_67_fu_2574_p2 = (($signed(tmp_57_fu_1674_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_68_fu_2588_p2 = (($signed(tmp_58_fu_1694_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_69_fu_2602_p2 = (($signed(trunc_ln145_1_fu_474_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_70_fu_2616_p2 = (($signed(trunc_ln145_2_fu_484_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_8_fu_1748_p2 = (($signed(in_data_data_10_fu_494_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_9_fu_1762_p2 = (($signed(in_data_data_11_fu_514_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_fu_1734_p2 = (($signed(in_data_data_fu_466_p1) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_449_p2 = ((ap_sig_allocacmp_i_13 == 11'd1024) ? 1'b1 : 1'b0);

assign in_data_data_10_fu_494_p4 = {{layer2_out_dout[31:16]}};

assign in_data_data_11_fu_514_p4 = {{layer2_out_dout[47:32]}};

assign in_data_data_12_fu_534_p4 = {{layer2_out_dout[63:48]}};

assign in_data_data_fu_466_p1 = layer2_out_dout[15:0];

assign layer5_out_din = or_ln174_s_fu_2819_p65;

assign or_ln174_s_fu_2819_p65 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{select_ln51_62_reg_3281}, {zext_ln1695_60_fu_2816_p1}}, {zext_ln1695_59_fu_2813_p1}}, {zext_ln1695_58_fu_2810_p1}}, {zext_ln1695_57_fu_2807_p1}}, {zext_ln1695_56_fu_2804_p1}}, {zext_ln1695_55_fu_2801_p1}}, {zext_ln1695_54_fu_2798_p1}}, {zext_ln1695_53_fu_2795_p1}}, {zext_ln1695_52_fu_2792_p1}}, {zext_ln1695_51_fu_2789_p1}}, {zext_ln1695_50_fu_2786_p1}}, {zext_ln1695_49_fu_2783_p1}}, {zext_ln1695_48_fu_2780_p1}}, {zext_ln1695_47_fu_2777_p1}}, {zext_ln1695_46_fu_2774_p1}}, {zext_ln1695_45_fu_2771_p1}}, {zext_ln1695_44_fu_2768_p1}}, {zext_ln1695_43_fu_2765_p1}}, {zext_ln1695_42_fu_2762_p1}}, {zext_ln1695_41_fu_2759_p1}}, {zext_ln1695_40_fu_2756_p1}}, {zext_ln1695_39_fu_2753_p1}}, {zext_ln1695_38_fu_2750_p1}}, {zext_ln1695_37_fu_2747_p1}}, {zext_ln1695_36_fu_2744_p1}}, {zext_ln1695_35_fu_2741_p1}}, {zext_ln1695_34_fu_2738_p1}}, {zext_ln1695_33_fu_2735_p1}}, {zext_ln1695_32_fu_2732_p1}}, {zext_ln1695_31_fu_2729_p1}}, {zext_ln1695_30_fu_2726_p1}}, {zext_ln1695_29_fu_2723_p1}}, {zext_ln1695_28_fu_2720_p1}}, {zext_ln1695_27_fu_2717_p1}}, {zext_ln1695_26_fu_2714_p1}}, {zext_ln1695_25_fu_2711_p1}}, {zext_ln1695_24_fu_2708_p1}}, {zext_ln1695_23_fu_2705_p1}}, {zext_ln1695_22_fu_2702_p1}}, {zext_ln1695_21_fu_2699_p1}}, {zext_ln1695_20_fu_2696_p1}}, {zext_ln1695_19_fu_2693_p1}}, {zext_ln1695_18_fu_2690_p1}}, {zext_ln1695_17_fu_2687_p1}}, {zext_ln1695_16_fu_2684_p1}}, {zext_ln1695_15_fu_2681_p1}}, {zext_ln1695_14_fu_2678_p1}}, {zext_ln1695_13_fu_2675_p1}}, {zext_ln1695_12_fu_2672_p1}}, {zext_ln1695_11_fu_2669_p1}}, {zext_ln1695_10_fu_2666_p1}}, {zext_ln1695_9_fu_2663_p1}}, {zext_ln1695_8_fu_2660_p1}}, {zext_ln1695_7_fu_2657_p1}}, {zext_ln1695_6_fu_2654_p1}}, {zext_ln1695_5_fu_2651_p1}}, {zext_ln1695_4_fu_2648_p1}}, {zext_ln1695_3_fu_2645_p1}}, {zext_ln1695_fu_2642_p1}}, {zext_ln45_6_fu_2639_p1}}, {zext_ln45_5_fu_2636_p1}}, {zext_ln45_4_fu_2633_p1}}, {zext_ln45_fu_2630_p1}};

assign out_data_data_10_fu_1768_p3 = ((icmp_ln1695_9_fu_1762_p2[0:0] == 1'b1) ? trunc_ln44_3_fu_524_p4 : 15'd0);

assign out_data_data_12_fu_1782_p3 = ((icmp_ln1695_10_fu_1776_p2[0:0] == 1'b1) ? trunc_ln44_4_fu_544_p4 : 15'd0);

assign out_data_data_8_fu_1754_p3 = ((icmp_ln1695_8_fu_1748_p2[0:0] == 1'b1) ? trunc_ln_fu_504_p4 : 15'd0);

assign out_data_data_fu_1740_p3 = ((icmp_ln1695_fu_1734_p2[0:0] == 1'b1) ? trunc_ln145_61_fu_470_p1 : 15'd0);

assign select_ln51_10_fu_1894_p3 = ((icmp_ln1695_18_fu_1888_p2[0:0] == 1'b1) ? trunc_ln145_9_fu_704_p4 : 15'd0);

assign select_ln51_11_fu_1908_p3 = ((icmp_ln1695_19_fu_1902_p2[0:0] == 1'b1) ? trunc_ln145_10_fu_724_p4 : 15'd0);

assign select_ln51_12_fu_1922_p3 = ((icmp_ln1695_20_fu_1916_p2[0:0] == 1'b1) ? trunc_ln145_11_fu_744_p4 : 15'd0);

assign select_ln51_13_fu_1936_p3 = ((icmp_ln1695_21_fu_1930_p2[0:0] == 1'b1) ? trunc_ln145_12_fu_764_p4 : 15'd0);

assign select_ln51_14_fu_1950_p3 = ((icmp_ln1695_22_fu_1944_p2[0:0] == 1'b1) ? trunc_ln145_13_fu_784_p4 : 15'd0);

assign select_ln51_15_fu_1964_p3 = ((icmp_ln1695_23_fu_1958_p2[0:0] == 1'b1) ? trunc_ln145_14_fu_804_p4 : 15'd0);

assign select_ln51_16_fu_1978_p3 = ((icmp_ln1695_24_fu_1972_p2[0:0] == 1'b1) ? trunc_ln145_15_fu_824_p4 : 15'd0);

assign select_ln51_17_fu_1992_p3 = ((icmp_ln1695_25_fu_1986_p2[0:0] == 1'b1) ? trunc_ln145_16_fu_844_p4 : 15'd0);

assign select_ln51_18_fu_2006_p3 = ((icmp_ln1695_26_fu_2000_p2[0:0] == 1'b1) ? trunc_ln145_17_fu_864_p4 : 15'd0);

assign select_ln51_19_fu_2020_p3 = ((icmp_ln1695_27_fu_2014_p2[0:0] == 1'b1) ? trunc_ln145_18_fu_884_p4 : 15'd0);

assign select_ln51_20_fu_2034_p3 = ((icmp_ln1695_28_fu_2028_p2[0:0] == 1'b1) ? trunc_ln145_19_fu_904_p4 : 15'd0);

assign select_ln51_21_fu_2048_p3 = ((icmp_ln1695_29_fu_2042_p2[0:0] == 1'b1) ? trunc_ln145_20_fu_924_p4 : 15'd0);

assign select_ln51_22_fu_2062_p3 = ((icmp_ln1695_30_fu_2056_p2[0:0] == 1'b1) ? trunc_ln145_21_fu_944_p4 : 15'd0);

assign select_ln51_23_fu_2076_p3 = ((icmp_ln1695_31_fu_2070_p2[0:0] == 1'b1) ? trunc_ln145_22_fu_964_p4 : 15'd0);

assign select_ln51_24_fu_2090_p3 = ((icmp_ln1695_32_fu_2084_p2[0:0] == 1'b1) ? trunc_ln145_23_fu_984_p4 : 15'd0);

assign select_ln51_25_fu_2104_p3 = ((icmp_ln1695_33_fu_2098_p2[0:0] == 1'b1) ? trunc_ln145_24_fu_1004_p4 : 15'd0);

assign select_ln51_26_fu_2118_p3 = ((icmp_ln1695_34_fu_2112_p2[0:0] == 1'b1) ? trunc_ln145_25_fu_1024_p4 : 15'd0);

assign select_ln51_27_fu_2132_p3 = ((icmp_ln1695_35_fu_2126_p2[0:0] == 1'b1) ? trunc_ln145_26_fu_1044_p4 : 15'd0);

assign select_ln51_28_fu_2146_p3 = ((icmp_ln1695_36_fu_2140_p2[0:0] == 1'b1) ? trunc_ln145_27_fu_1064_p4 : 15'd0);

assign select_ln51_29_fu_2160_p3 = ((icmp_ln1695_37_fu_2154_p2[0:0] == 1'b1) ? trunc_ln145_28_fu_1084_p4 : 15'd0);

assign select_ln51_30_fu_2174_p3 = ((icmp_ln1695_38_fu_2168_p2[0:0] == 1'b1) ? trunc_ln145_29_fu_1104_p4 : 15'd0);

assign select_ln51_31_fu_2188_p3 = ((icmp_ln1695_39_fu_2182_p2[0:0] == 1'b1) ? trunc_ln145_30_fu_1124_p4 : 15'd0);

assign select_ln51_32_fu_2202_p3 = ((icmp_ln1695_40_fu_2196_p2[0:0] == 1'b1) ? trunc_ln145_31_fu_1144_p4 : 15'd0);

assign select_ln51_33_fu_2216_p3 = ((icmp_ln1695_41_fu_2210_p2[0:0] == 1'b1) ? trunc_ln145_32_fu_1164_p4 : 15'd0);

assign select_ln51_34_fu_2230_p3 = ((icmp_ln1695_42_fu_2224_p2[0:0] == 1'b1) ? trunc_ln145_33_fu_1184_p4 : 15'd0);

assign select_ln51_35_fu_2244_p3 = ((icmp_ln1695_43_fu_2238_p2[0:0] == 1'b1) ? trunc_ln145_34_fu_1204_p4 : 15'd0);

assign select_ln51_36_fu_2258_p3 = ((icmp_ln1695_44_fu_2252_p2[0:0] == 1'b1) ? trunc_ln145_35_fu_1224_p4 : 15'd0);

assign select_ln51_37_fu_2272_p3 = ((icmp_ln1695_45_fu_2266_p2[0:0] == 1'b1) ? trunc_ln145_36_fu_1244_p4 : 15'd0);

assign select_ln51_38_fu_2286_p3 = ((icmp_ln1695_46_fu_2280_p2[0:0] == 1'b1) ? trunc_ln145_37_fu_1264_p4 : 15'd0);

assign select_ln51_39_fu_2300_p3 = ((icmp_ln1695_47_fu_2294_p2[0:0] == 1'b1) ? trunc_ln145_38_fu_1284_p4 : 15'd0);

assign select_ln51_40_fu_2314_p3 = ((icmp_ln1695_48_fu_2308_p2[0:0] == 1'b1) ? trunc_ln145_39_fu_1304_p4 : 15'd0);

assign select_ln51_41_fu_2328_p3 = ((icmp_ln1695_49_fu_2322_p2[0:0] == 1'b1) ? trunc_ln145_40_fu_1324_p4 : 15'd0);

assign select_ln51_42_fu_2342_p3 = ((icmp_ln1695_50_fu_2336_p2[0:0] == 1'b1) ? trunc_ln145_41_fu_1344_p4 : 15'd0);

assign select_ln51_43_fu_2356_p3 = ((icmp_ln1695_51_fu_2350_p2[0:0] == 1'b1) ? trunc_ln145_42_fu_1364_p4 : 15'd0);

assign select_ln51_44_fu_2370_p3 = ((icmp_ln1695_52_fu_2364_p2[0:0] == 1'b1) ? trunc_ln145_43_fu_1384_p4 : 15'd0);

assign select_ln51_45_fu_2384_p3 = ((icmp_ln1695_53_fu_2378_p2[0:0] == 1'b1) ? trunc_ln145_44_fu_1404_p4 : 15'd0);

assign select_ln51_46_fu_2398_p3 = ((icmp_ln1695_54_fu_2392_p2[0:0] == 1'b1) ? trunc_ln145_45_fu_1424_p4 : 15'd0);

assign select_ln51_47_fu_2412_p3 = ((icmp_ln1695_55_fu_2406_p2[0:0] == 1'b1) ? trunc_ln145_46_fu_1444_p4 : 15'd0);

assign select_ln51_48_fu_2426_p3 = ((icmp_ln1695_56_fu_2420_p2[0:0] == 1'b1) ? trunc_ln145_47_fu_1464_p4 : 15'd0);

assign select_ln51_49_fu_2440_p3 = ((icmp_ln1695_57_fu_2434_p2[0:0] == 1'b1) ? trunc_ln145_48_fu_1484_p4 : 15'd0);

assign select_ln51_4_fu_1810_p3 = ((icmp_ln1695_12_fu_1804_p2[0:0] == 1'b1) ? trunc_ln145_3_fu_584_p4 : 15'd0);

assign select_ln51_50_fu_2454_p3 = ((icmp_ln1695_58_fu_2448_p2[0:0] == 1'b1) ? trunc_ln145_49_fu_1504_p4 : 15'd0);

assign select_ln51_51_fu_2468_p3 = ((icmp_ln1695_59_fu_2462_p2[0:0] == 1'b1) ? trunc_ln145_50_fu_1524_p4 : 15'd0);

assign select_ln51_52_fu_2482_p3 = ((icmp_ln1695_60_fu_2476_p2[0:0] == 1'b1) ? trunc_ln145_51_fu_1544_p4 : 15'd0);

assign select_ln51_53_fu_2496_p3 = ((icmp_ln1695_61_fu_2490_p2[0:0] == 1'b1) ? trunc_ln145_52_fu_1564_p4 : 15'd0);

assign select_ln51_54_fu_2510_p3 = ((icmp_ln1695_62_fu_2504_p2[0:0] == 1'b1) ? trunc_ln145_53_fu_1584_p4 : 15'd0);

assign select_ln51_55_fu_2524_p3 = ((icmp_ln1695_63_fu_2518_p2[0:0] == 1'b1) ? trunc_ln145_54_fu_1604_p4 : 15'd0);

assign select_ln51_56_fu_2538_p3 = ((icmp_ln1695_64_fu_2532_p2[0:0] == 1'b1) ? trunc_ln145_55_fu_1624_p4 : 15'd0);

assign select_ln51_57_fu_2552_p3 = ((icmp_ln1695_65_fu_2546_p2[0:0] == 1'b1) ? trunc_ln145_56_fu_1644_p4 : 15'd0);

assign select_ln51_58_fu_2566_p3 = ((icmp_ln1695_66_fu_2560_p2[0:0] == 1'b1) ? trunc_ln145_57_fu_1664_p4 : 15'd0);

assign select_ln51_59_fu_2580_p3 = ((icmp_ln1695_67_fu_2574_p2[0:0] == 1'b1) ? trunc_ln145_58_fu_1684_p4 : 15'd0);

assign select_ln51_5_fu_1824_p3 = ((icmp_ln1695_13_fu_1818_p2[0:0] == 1'b1) ? trunc_ln145_4_fu_604_p4 : 15'd0);

assign select_ln51_60_fu_2594_p3 = ((icmp_ln1695_68_fu_2588_p2[0:0] == 1'b1) ? trunc_ln145_59_fu_1704_p4 : 15'd0);

assign select_ln51_61_fu_2608_p3 = ((icmp_ln1695_69_fu_2602_p2[0:0] == 1'b1) ? trunc_ln145_60_fu_1714_p4 : 15'd0);

assign select_ln51_62_fu_2622_p3 = ((icmp_ln1695_70_fu_2616_p2[0:0] == 1'b1) ? trunc_ln2_fu_1724_p4 : 15'd0);

assign select_ln51_6_fu_1838_p3 = ((icmp_ln1695_14_fu_1832_p2[0:0] == 1'b1) ? trunc_ln145_5_fu_624_p4 : 15'd0);

assign select_ln51_7_fu_1852_p3 = ((icmp_ln1695_15_fu_1846_p2[0:0] == 1'b1) ? trunc_ln145_6_fu_644_p4 : 15'd0);

assign select_ln51_8_fu_1866_p3 = ((icmp_ln1695_16_fu_1860_p2[0:0] == 1'b1) ? trunc_ln145_7_fu_664_p4 : 15'd0);

assign select_ln51_9_fu_1880_p3 = ((icmp_ln1695_17_fu_1874_p2[0:0] == 1'b1) ? trunc_ln145_8_fu_684_p4 : 15'd0);

assign select_ln51_fu_1796_p3 = ((icmp_ln1695_11_fu_1790_p2[0:0] == 1'b1) ? trunc_ln145_s_fu_564_p4 : 15'd0);

assign start_out = real_start;

assign tmp_10_fu_734_p4 = {{layer2_out_dout[223:208]}};

assign tmp_11_fu_754_p4 = {{layer2_out_dout[239:224]}};

assign tmp_12_fu_774_p4 = {{layer2_out_dout[255:240]}};

assign tmp_13_fu_794_p4 = {{layer2_out_dout[271:256]}};

assign tmp_14_fu_814_p4 = {{layer2_out_dout[287:272]}};

assign tmp_15_fu_834_p4 = {{layer2_out_dout[303:288]}};

assign tmp_16_fu_854_p4 = {{layer2_out_dout[319:304]}};

assign tmp_17_fu_874_p4 = {{layer2_out_dout[335:320]}};

assign tmp_18_fu_894_p4 = {{layer2_out_dout[351:336]}};

assign tmp_19_fu_914_p4 = {{layer2_out_dout[367:352]}};

assign tmp_20_fu_934_p4 = {{layer2_out_dout[383:368]}};

assign tmp_21_fu_954_p4 = {{layer2_out_dout[399:384]}};

assign tmp_22_fu_974_p4 = {{layer2_out_dout[415:400]}};

assign tmp_23_fu_994_p4 = {{layer2_out_dout[431:416]}};

assign tmp_24_fu_1014_p4 = {{layer2_out_dout[447:432]}};

assign tmp_25_fu_1034_p4 = {{layer2_out_dout[463:448]}};

assign tmp_26_fu_1054_p4 = {{layer2_out_dout[479:464]}};

assign tmp_27_fu_1074_p4 = {{layer2_out_dout[495:480]}};

assign tmp_28_fu_1094_p4 = {{layer2_out_dout[511:496]}};

assign tmp_29_fu_1114_p4 = {{layer2_out_dout[527:512]}};

assign tmp_30_fu_1134_p4 = {{layer2_out_dout[543:528]}};

assign tmp_31_fu_1154_p4 = {{layer2_out_dout[559:544]}};

assign tmp_32_fu_1174_p4 = {{layer2_out_dout[575:560]}};

assign tmp_33_fu_1194_p4 = {{layer2_out_dout[591:576]}};

assign tmp_34_fu_1214_p4 = {{layer2_out_dout[607:592]}};

assign tmp_35_fu_1234_p4 = {{layer2_out_dout[623:608]}};

assign tmp_36_fu_1254_p4 = {{layer2_out_dout[639:624]}};

assign tmp_37_fu_1274_p4 = {{layer2_out_dout[655:640]}};

assign tmp_38_fu_1294_p4 = {{layer2_out_dout[671:656]}};

assign tmp_39_fu_1314_p4 = {{layer2_out_dout[687:672]}};

assign tmp_3_fu_594_p4 = {{layer2_out_dout[111:96]}};

assign tmp_40_fu_1334_p4 = {{layer2_out_dout[703:688]}};

assign tmp_41_fu_1354_p4 = {{layer2_out_dout[719:704]}};

assign tmp_42_fu_1374_p4 = {{layer2_out_dout[735:720]}};

assign tmp_43_fu_1394_p4 = {{layer2_out_dout[751:736]}};

assign tmp_44_fu_1414_p4 = {{layer2_out_dout[767:752]}};

assign tmp_45_fu_1434_p4 = {{layer2_out_dout[783:768]}};

assign tmp_46_fu_1454_p4 = {{layer2_out_dout[799:784]}};

assign tmp_47_fu_1474_p4 = {{layer2_out_dout[815:800]}};

assign tmp_48_fu_1494_p4 = {{layer2_out_dout[831:816]}};

assign tmp_49_fu_1514_p4 = {{layer2_out_dout[847:832]}};

assign tmp_4_fu_614_p4 = {{layer2_out_dout[127:112]}};

assign tmp_50_fu_1534_p4 = {{layer2_out_dout[863:848]}};

assign tmp_51_fu_1554_p4 = {{layer2_out_dout[879:864]}};

assign tmp_52_fu_1574_p4 = {{layer2_out_dout[895:880]}};

assign tmp_53_fu_1594_p4 = {{layer2_out_dout[911:896]}};

assign tmp_54_fu_1614_p4 = {{layer2_out_dout[927:912]}};

assign tmp_55_fu_1634_p4 = {{layer2_out_dout[943:928]}};

assign tmp_56_fu_1654_p4 = {{layer2_out_dout[959:944]}};

assign tmp_57_fu_1674_p4 = {{layer2_out_dout[975:960]}};

assign tmp_58_fu_1694_p4 = {{layer2_out_dout[991:976]}};

assign tmp_5_fu_634_p4 = {{layer2_out_dout[143:128]}};

assign tmp_6_fu_654_p4 = {{layer2_out_dout[159:144]}};

assign tmp_7_fu_674_p4 = {{layer2_out_dout[175:160]}};

assign tmp_8_fu_694_p4 = {{layer2_out_dout[191:176]}};

assign tmp_9_fu_714_p4 = {{layer2_out_dout[207:192]}};

assign tmp_fu_554_p4 = {{layer2_out_dout[79:64]}};

assign tmp_s_fu_574_p4 = {{layer2_out_dout[95:80]}};

assign trunc_ln145_10_fu_724_p4 = {{layer2_out_dout[206:192]}};

assign trunc_ln145_11_fu_744_p4 = {{layer2_out_dout[222:208]}};

assign trunc_ln145_12_fu_764_p4 = {{layer2_out_dout[238:224]}};

assign trunc_ln145_13_fu_784_p4 = {{layer2_out_dout[254:240]}};

assign trunc_ln145_14_fu_804_p4 = {{layer2_out_dout[270:256]}};

assign trunc_ln145_15_fu_824_p4 = {{layer2_out_dout[286:272]}};

assign trunc_ln145_16_fu_844_p4 = {{layer2_out_dout[302:288]}};

assign trunc_ln145_17_fu_864_p4 = {{layer2_out_dout[318:304]}};

assign trunc_ln145_18_fu_884_p4 = {{layer2_out_dout[334:320]}};

assign trunc_ln145_19_fu_904_p4 = {{layer2_out_dout[350:336]}};

assign trunc_ln145_1_fu_474_p4 = {{layer2_out_dout[1007:992]}};

assign trunc_ln145_20_fu_924_p4 = {{layer2_out_dout[366:352]}};

assign trunc_ln145_21_fu_944_p4 = {{layer2_out_dout[382:368]}};

assign trunc_ln145_22_fu_964_p4 = {{layer2_out_dout[398:384]}};

assign trunc_ln145_23_fu_984_p4 = {{layer2_out_dout[414:400]}};

assign trunc_ln145_24_fu_1004_p4 = {{layer2_out_dout[430:416]}};

assign trunc_ln145_25_fu_1024_p4 = {{layer2_out_dout[446:432]}};

assign trunc_ln145_26_fu_1044_p4 = {{layer2_out_dout[462:448]}};

assign trunc_ln145_27_fu_1064_p4 = {{layer2_out_dout[478:464]}};

assign trunc_ln145_28_fu_1084_p4 = {{layer2_out_dout[494:480]}};

assign trunc_ln145_29_fu_1104_p4 = {{layer2_out_dout[510:496]}};

assign trunc_ln145_2_fu_484_p4 = {{layer2_out_dout[1023:1008]}};

assign trunc_ln145_30_fu_1124_p4 = {{layer2_out_dout[526:512]}};

assign trunc_ln145_31_fu_1144_p4 = {{layer2_out_dout[542:528]}};

assign trunc_ln145_32_fu_1164_p4 = {{layer2_out_dout[558:544]}};

assign trunc_ln145_33_fu_1184_p4 = {{layer2_out_dout[574:560]}};

assign trunc_ln145_34_fu_1204_p4 = {{layer2_out_dout[590:576]}};

assign trunc_ln145_35_fu_1224_p4 = {{layer2_out_dout[606:592]}};

assign trunc_ln145_36_fu_1244_p4 = {{layer2_out_dout[622:608]}};

assign trunc_ln145_37_fu_1264_p4 = {{layer2_out_dout[638:624]}};

assign trunc_ln145_38_fu_1284_p4 = {{layer2_out_dout[654:640]}};

assign trunc_ln145_39_fu_1304_p4 = {{layer2_out_dout[670:656]}};

assign trunc_ln145_3_fu_584_p4 = {{layer2_out_dout[94:80]}};

assign trunc_ln145_40_fu_1324_p4 = {{layer2_out_dout[686:672]}};

assign trunc_ln145_41_fu_1344_p4 = {{layer2_out_dout[702:688]}};

assign trunc_ln145_42_fu_1364_p4 = {{layer2_out_dout[718:704]}};

assign trunc_ln145_43_fu_1384_p4 = {{layer2_out_dout[734:720]}};

assign trunc_ln145_44_fu_1404_p4 = {{layer2_out_dout[750:736]}};

assign trunc_ln145_45_fu_1424_p4 = {{layer2_out_dout[766:752]}};

assign trunc_ln145_46_fu_1444_p4 = {{layer2_out_dout[782:768]}};

assign trunc_ln145_47_fu_1464_p4 = {{layer2_out_dout[798:784]}};

assign trunc_ln145_48_fu_1484_p4 = {{layer2_out_dout[814:800]}};

assign trunc_ln145_49_fu_1504_p4 = {{layer2_out_dout[830:816]}};

assign trunc_ln145_4_fu_604_p4 = {{layer2_out_dout[110:96]}};

assign trunc_ln145_50_fu_1524_p4 = {{layer2_out_dout[846:832]}};

assign trunc_ln145_51_fu_1544_p4 = {{layer2_out_dout[862:848]}};

assign trunc_ln145_52_fu_1564_p4 = {{layer2_out_dout[878:864]}};

assign trunc_ln145_53_fu_1584_p4 = {{layer2_out_dout[894:880]}};

assign trunc_ln145_54_fu_1604_p4 = {{layer2_out_dout[910:896]}};

assign trunc_ln145_55_fu_1624_p4 = {{layer2_out_dout[926:912]}};

assign trunc_ln145_56_fu_1644_p4 = {{layer2_out_dout[942:928]}};

assign trunc_ln145_57_fu_1664_p4 = {{layer2_out_dout[958:944]}};

assign trunc_ln145_58_fu_1684_p4 = {{layer2_out_dout[974:960]}};

assign trunc_ln145_59_fu_1704_p4 = {{layer2_out_dout[990:976]}};

assign trunc_ln145_5_fu_624_p4 = {{layer2_out_dout[126:112]}};

assign trunc_ln145_60_fu_1714_p4 = {{layer2_out_dout[1006:992]}};

assign trunc_ln145_61_fu_470_p1 = layer2_out_dout[14:0];

assign trunc_ln145_6_fu_644_p4 = {{layer2_out_dout[142:128]}};

assign trunc_ln145_7_fu_664_p4 = {{layer2_out_dout[158:144]}};

assign trunc_ln145_8_fu_684_p4 = {{layer2_out_dout[174:160]}};

assign trunc_ln145_9_fu_704_p4 = {{layer2_out_dout[190:176]}};

assign trunc_ln145_s_fu_564_p4 = {{layer2_out_dout[78:64]}};

assign trunc_ln2_fu_1724_p4 = {{layer2_out_dout[1022:1008]}};

assign trunc_ln44_3_fu_524_p4 = {{layer2_out_dout[46:32]}};

assign trunc_ln44_4_fu_544_p4 = {{layer2_out_dout[62:48]}};

assign trunc_ln_fu_504_p4 = {{layer2_out_dout[30:16]}};

assign zext_ln1695_10_fu_2666_p1 = select_ln51_11_reg_3026;

assign zext_ln1695_11_fu_2669_p1 = select_ln51_12_reg_3031;

assign zext_ln1695_12_fu_2672_p1 = select_ln51_13_reg_3036;

assign zext_ln1695_13_fu_2675_p1 = select_ln51_14_reg_3041;

assign zext_ln1695_14_fu_2678_p1 = select_ln51_15_reg_3046;

assign zext_ln1695_15_fu_2681_p1 = select_ln51_16_reg_3051;

assign zext_ln1695_16_fu_2684_p1 = select_ln51_17_reg_3056;

assign zext_ln1695_17_fu_2687_p1 = select_ln51_18_reg_3061;

assign zext_ln1695_18_fu_2690_p1 = select_ln51_19_reg_3066;

assign zext_ln1695_19_fu_2693_p1 = select_ln51_20_reg_3071;

assign zext_ln1695_20_fu_2696_p1 = select_ln51_21_reg_3076;

assign zext_ln1695_21_fu_2699_p1 = select_ln51_22_reg_3081;

assign zext_ln1695_22_fu_2702_p1 = select_ln51_23_reg_3086;

assign zext_ln1695_23_fu_2705_p1 = select_ln51_24_reg_3091;

assign zext_ln1695_24_fu_2708_p1 = select_ln51_25_reg_3096;

assign zext_ln1695_25_fu_2711_p1 = select_ln51_26_reg_3101;

assign zext_ln1695_26_fu_2714_p1 = select_ln51_27_reg_3106;

assign zext_ln1695_27_fu_2717_p1 = select_ln51_28_reg_3111;

assign zext_ln1695_28_fu_2720_p1 = select_ln51_29_reg_3116;

assign zext_ln1695_29_fu_2723_p1 = select_ln51_30_reg_3121;

assign zext_ln1695_30_fu_2726_p1 = select_ln51_31_reg_3126;

assign zext_ln1695_31_fu_2729_p1 = select_ln51_32_reg_3131;

assign zext_ln1695_32_fu_2732_p1 = select_ln51_33_reg_3136;

assign zext_ln1695_33_fu_2735_p1 = select_ln51_34_reg_3141;

assign zext_ln1695_34_fu_2738_p1 = select_ln51_35_reg_3146;

assign zext_ln1695_35_fu_2741_p1 = select_ln51_36_reg_3151;

assign zext_ln1695_36_fu_2744_p1 = select_ln51_37_reg_3156;

assign zext_ln1695_37_fu_2747_p1 = select_ln51_38_reg_3161;

assign zext_ln1695_38_fu_2750_p1 = select_ln51_39_reg_3166;

assign zext_ln1695_39_fu_2753_p1 = select_ln51_40_reg_3171;

assign zext_ln1695_3_fu_2645_p1 = select_ln51_4_reg_2991;

assign zext_ln1695_40_fu_2756_p1 = select_ln51_41_reg_3176;

assign zext_ln1695_41_fu_2759_p1 = select_ln51_42_reg_3181;

assign zext_ln1695_42_fu_2762_p1 = select_ln51_43_reg_3186;

assign zext_ln1695_43_fu_2765_p1 = select_ln51_44_reg_3191;

assign zext_ln1695_44_fu_2768_p1 = select_ln51_45_reg_3196;

assign zext_ln1695_45_fu_2771_p1 = select_ln51_46_reg_3201;

assign zext_ln1695_46_fu_2774_p1 = select_ln51_47_reg_3206;

assign zext_ln1695_47_fu_2777_p1 = select_ln51_48_reg_3211;

assign zext_ln1695_48_fu_2780_p1 = select_ln51_49_reg_3216;

assign zext_ln1695_49_fu_2783_p1 = select_ln51_50_reg_3221;

assign zext_ln1695_4_fu_2648_p1 = select_ln51_5_reg_2996;

assign zext_ln1695_50_fu_2786_p1 = select_ln51_51_reg_3226;

assign zext_ln1695_51_fu_2789_p1 = select_ln51_52_reg_3231;

assign zext_ln1695_52_fu_2792_p1 = select_ln51_53_reg_3236;

assign zext_ln1695_53_fu_2795_p1 = select_ln51_54_reg_3241;

assign zext_ln1695_54_fu_2798_p1 = select_ln51_55_reg_3246;

assign zext_ln1695_55_fu_2801_p1 = select_ln51_56_reg_3251;

assign zext_ln1695_56_fu_2804_p1 = select_ln51_57_reg_3256;

assign zext_ln1695_57_fu_2807_p1 = select_ln51_58_reg_3261;

assign zext_ln1695_58_fu_2810_p1 = select_ln51_59_reg_3266;

assign zext_ln1695_59_fu_2813_p1 = select_ln51_60_reg_3271;

assign zext_ln1695_5_fu_2651_p1 = select_ln51_6_reg_3001;

assign zext_ln1695_60_fu_2816_p1 = select_ln51_61_reg_3276;

assign zext_ln1695_6_fu_2654_p1 = select_ln51_7_reg_3006;

assign zext_ln1695_7_fu_2657_p1 = select_ln51_8_reg_3011;

assign zext_ln1695_8_fu_2660_p1 = select_ln51_9_reg_3016;

assign zext_ln1695_9_fu_2663_p1 = select_ln51_10_reg_3021;

assign zext_ln1695_fu_2642_p1 = select_ln51_reg_2986;

assign zext_ln45_4_fu_2633_p1 = out_data_data_8_reg_2971;

assign zext_ln45_5_fu_2636_p1 = out_data_data_10_reg_2976;

assign zext_ln45_6_fu_2639_p1 = out_data_data_12_reg_2981;

assign zext_ln45_fu_2630_p1 = out_data_data_reg_2966;

endmodule //AlexNet_Cifar10_Keras_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_s
