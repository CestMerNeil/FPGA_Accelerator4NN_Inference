-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AlexNet_Cifar10_Keras_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer34_out_dout : IN STD_LOGIC_VECTOR (159 downto 0);
    layer34_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer34_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer34_out_empty_n : IN STD_LOGIC;
    layer34_out_read : OUT STD_LOGIC;
    layer36_out_TDATA : OUT STD_LOGIC_VECTOR (159 downto 0);
    layer36_out_TVALID : OUT STD_LOGIC;
    layer36_out_TREADY : IN STD_LOGIC );
end;


architecture behav of AlexNet_Cifar10_Keras_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exp_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce0 : STD_LOGIC;
    signal exp_table_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce1 : STD_LOGIC;
    signal exp_table_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce2 : STD_LOGIC;
    signal exp_table_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce3 : STD_LOGIC;
    signal exp_table_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce4 : STD_LOGIC;
    signal exp_table_q4 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce5 : STD_LOGIC;
    signal exp_table_q5 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce6 : STD_LOGIC;
    signal exp_table_q6 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce7 : STD_LOGIC;
    signal exp_table_q7 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce8 : STD_LOGIC;
    signal exp_table_q8 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce9 : STD_LOGIC;
    signal exp_table_q9 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table_ce0 : STD_LOGIC;
    signal invert_table_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal layer34_out_blk_n : STD_LOGIC;
    signal layer36_out_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal in_pack_data_fu_654_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_pack_data_reg_2439 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_8_reg_2445 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_9_reg_2452 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_pack_data_4_fu_678_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_pack_data_4_reg_2459 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_pack_data_5_fu_688_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_pack_data_5_reg_2465 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_pack_data_6_fu_698_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_pack_data_6_reg_2471 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_4_fu_708_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_4_reg_2477 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_5_fu_718_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_5_reg_2483 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_6_fu_728_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_6_reg_2489 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_7_fu_738_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_V_7_reg_2495 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1697_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_reg_2501 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_1_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_1_reg_2506 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_3_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_3_reg_2511 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_4_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_4_reg_2516 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_6_fu_868_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_reg_2521 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln1697_7_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1697_7_reg_2527 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal exp_res_V_reg_2582 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exp_res_V_10_reg_2587 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_11_reg_2592 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_12_reg_2597 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_13_reg_2602 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_14_reg_2607 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_15_reg_2612 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_16_reg_2617 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_17_reg_2622 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_V_18_reg_2629 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_6_fu_1839_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_6_reg_2636 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_6_fu_2033_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_6_reg_2642 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln225_fu_1369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_1_fu_1400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_1462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_5_fu_1524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_7_fu_1586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_8_fu_1617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_9_fu_1648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_2255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal mul_ln1316_fu_283_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1319_fu_2260_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_fu_283_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_2_fu_284_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_2_fu_284_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_4_fu_285_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_4_fu_285_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_6_fu_286_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_6_fu_286_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_3_fu_287_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_3_fu_287_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_7_fu_288_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_7_fu_288_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_5_fu_289_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_5_fu_289_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_1_fu_290_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_1_fu_290_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_8_fu_291_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_8_fu_291_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1316_9_fu_292_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1316_9_fu_292_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln1697_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_1_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_777_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_788_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1697_2_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_2_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_3_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_4_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_819_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_830_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1697_5_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_5_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_806_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_fu_848_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1697_6_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_6_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_7_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_7_fu_885_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1697_8_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1697_8_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_902_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1394_fu_909_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1394_1_fu_912_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_916_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_44_fu_922_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_45_fu_930_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_2_fu_956_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_fu_959_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_46_fu_965_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_47_fu_973_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_1_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_3_fu_999_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_2_fu_1002_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_48_fu_1008_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_49_fu_1016_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_2_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_4_fu_1042_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_3_fu_1045_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_50_fu_1051_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_fu_1059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_3_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_5_fu_1085_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_4_fu_1088_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_52_fu_1094_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_53_fu_1102_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_4_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_6_fu_1128_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_5_fu_1131_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_54_fu_1137_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_55_fu_1145_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_5_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_7_fu_1171_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_6_fu_1174_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_56_fu_1180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_57_fu_1188_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_6_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_8_fu_1214_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_7_fu_1217_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_58_fu_1223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_59_fu_1231_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_7_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_9_fu_1257_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_8_fu_1260_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_60_fu_1266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_61_fu_1274_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_8_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1394_10_fu_1300_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_fu_1303_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_62_fu_1309_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_63_fu_1317_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_9_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_fu_1343_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_1351_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_s_fu_1361_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_1_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_1_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_1_fu_1374_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_1382_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_21_fu_1392_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_2_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_2_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_2_fu_1405_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_1413_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_22_fu_1423_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_3_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_3_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_3_fu_1436_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_1444_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_23_fu_1454_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_4_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_4_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_4_fu_1467_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_1475_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_24_fu_1485_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_5_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_5_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_5_fu_1498_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1506_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_25_fu_1516_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_6_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_6_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_6_fu_1529_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_1537_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_26_fu_1547_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_7_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_7_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_7_fu_1560_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_1568_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_27_fu_1578_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_8_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_8_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_8_fu_1591_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_1599_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_28_fu_1609_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal overflow_9_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_9_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_9_fu_1622_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_1630_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_29_fu_1640_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln43_2_fu_1661_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_3_fu_1665_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_10_fu_1669_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_31_fu_1683_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_64_fu_1675_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_11_fu_1691_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_fu_1653_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_1_fu_1657_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_11_fu_1707_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_33_fu_1721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_65_fu_1713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_12_fu_1729_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_2_fu_1699_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_2_fu_1737_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln859_4_fu_1749_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln859_3_fu_1745_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_10_fu_1753_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_13_fu_1759_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_66_fu_1765_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_67_fu_1773_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_12_fu_1781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln942_1_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_13_fu_1805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_12_fu_1787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_14_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_1799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln348_1_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln348_fu_1823_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln396_fu_1831_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_6_fu_1855_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_7_fu_1859_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_14_fu_1863_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_37_fu_1877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_68_fu_1869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_13_fu_1885_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_4_fu_1847_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_5_fu_1851_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_15_fu_1901_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_39_fu_1915_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_69_fu_1907_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_14_fu_1923_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_5_fu_1893_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_5_fu_1931_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln859_6_fu_1943_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln859_5_fu_1939_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_11_fu_1947_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_17_fu_1953_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_70_fu_1959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_71_fu_1967_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_13_fu_1975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln942_2_fu_1987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_15_fu_1999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_15_fu_1981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_16_fu_2005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_1993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln348_2_fu_2011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln348_5_fu_2017_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln396_1_fu_2025_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln859_fu_2047_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln859_1_fu_2050_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_12_fu_2053_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_19_fu_2059_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_72_fu_2063_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_73_fu_2071_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_10_fu_2079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_16_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_10_fu_2091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln392_10_fu_2097_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_9_cast40_fu_2044_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_V_8_cast39_fu_2041_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_20_fu_2113_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_74_fu_2123_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln902_fu_2119_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_7_fu_2131_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_7_fu_2105_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln859_2_fu_2143_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln859_1_fu_2147_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln859_fu_2139_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_13_fu_2151_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_22_fu_2157_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_75_fu_2163_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_76_fu_2171_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln941_11_fu_2179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln942_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_11_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_18_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln348_12_fu_2209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_2221_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_fu_2197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln348_fu_2215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln348_8_fu_2231_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln396_2_fu_2239_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_43_fu_2247_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1316_fu_283_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_1_fu_290_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_2_fu_284_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_3_fu_287_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_4_fu_285_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_5_fu_289_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_6_fu_286_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_7_fu_288_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_8_fu_291_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_9_fu_292_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln864_5_fu_2404_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_4_fu_2390_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_3_fu_2376_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_2_fu_2362_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_1_fu_2348_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_2334_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_pack_data_3_fu_2320_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_pack_data_2_fu_2306_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_pack_data_1_fu_2292_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_pack_data_fu_2278_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal mul_ln1316_1_fu_290_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_2_fu_284_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_3_fu_287_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_4_fu_285_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_5_fu_289_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_6_fu_286_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_7_fu_288_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_8_fu_291_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_9_fu_292_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1316_fu_283_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component AlexNet_Cifar10_Keras_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s_exp_tabeBS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component AlexNet_Cifar10_Keras_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s_invert_eCS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table_U : component AlexNet_Cifar10_Keras_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s_exp_tabeBS
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table_address0,
        ce0 => exp_table_ce0,
        q0 => exp_table_q0,
        address1 => exp_table_address1,
        ce1 => exp_table_ce1,
        q1 => exp_table_q1,
        address2 => exp_table_address2,
        ce2 => exp_table_ce2,
        q2 => exp_table_q2,
        address3 => exp_table_address3,
        ce3 => exp_table_ce3,
        q3 => exp_table_q3,
        address4 => exp_table_address4,
        ce4 => exp_table_ce4,
        q4 => exp_table_q4,
        address5 => exp_table_address5,
        ce5 => exp_table_ce5,
        q5 => exp_table_q5,
        address6 => exp_table_address6,
        ce6 => exp_table_ce6,
        q6 => exp_table_q6,
        address7 => exp_table_address7,
        ce7 => exp_table_ce7,
        q7 => exp_table_q7,
        address8 => exp_table_address8,
        ce8 => exp_table_ce8,
        q8 => exp_table_q8,
        address9 => exp_table_address9,
        ce9 => exp_table_ce9,
        q9 => exp_table_q9);

    invert_table_U : component AlexNet_Cifar10_Keras_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s_invert_eCS
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table_address0,
        ce0 => invert_table_ce0,
        q0 => invert_table_q0);

    mul_18s_17ns_26_1_1_U6899 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_fu_283_p0,
        din1 => mul_ln1316_fu_283_p1,
        dout => mul_ln1316_fu_283_p2);

    mul_18s_17ns_26_1_1_U6900 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_2_fu_284_p0,
        din1 => mul_ln1316_2_fu_284_p1,
        dout => mul_ln1316_2_fu_284_p2);

    mul_18s_17ns_26_1_1_U6901 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_4_fu_285_p0,
        din1 => mul_ln1316_4_fu_285_p1,
        dout => mul_ln1316_4_fu_285_p2);

    mul_18s_17ns_26_1_1_U6902 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_6_fu_286_p0,
        din1 => mul_ln1316_6_fu_286_p1,
        dout => mul_ln1316_6_fu_286_p2);

    mul_18s_17ns_26_1_1_U6903 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_3_fu_287_p0,
        din1 => mul_ln1316_3_fu_287_p1,
        dout => mul_ln1316_3_fu_287_p2);

    mul_18s_17ns_26_1_1_U6904 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_7_fu_288_p0,
        din1 => mul_ln1316_7_fu_288_p1,
        dout => mul_ln1316_7_fu_288_p2);

    mul_18s_17ns_26_1_1_U6905 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_5_fu_289_p0,
        din1 => mul_ln1316_5_fu_289_p1,
        dout => mul_ln1316_5_fu_289_p2);

    mul_18s_17ns_26_1_1_U6906 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_1_fu_290_p0,
        din1 => mul_ln1316_1_fu_290_p1,
        dout => mul_ln1316_1_fu_290_p2);

    mul_18s_17ns_26_1_1_U6907 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_8_fu_291_p0,
        din1 => mul_ln1316_8_fu_291_p1,
        dout => mul_ln1316_8_fu_291_p2);

    mul_18s_17ns_26_1_1_U6908 : component AlexNet_Cifar10_Keras_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1316_9_fu_292_p0,
        din1 => mul_ln1316_9_fu_292_p1,
        dout => mul_ln1316_9_fu_292_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_array_V_4_reg_2477 <= layer34_out_dout(79 downto 64);
                data_array_V_5_reg_2483 <= layer34_out_dout(95 downto 80);
                data_array_V_6_reg_2489 <= layer34_out_dout(111 downto 96);
                data_array_V_7_reg_2495 <= layer34_out_dout(127 downto 112);
                data_array_V_8_reg_2445 <= layer34_out_dout(143 downto 128);
                data_array_V_9_reg_2452 <= layer34_out_dout(159 downto 144);
                icmp_ln1697_1_reg_2506 <= icmp_ln1697_1_fu_754_p2;
                icmp_ln1697_3_reg_2511 <= icmp_ln1697_3_fu_760_p2;
                icmp_ln1697_4_reg_2516 <= icmp_ln1697_4_fu_766_p2;
                icmp_ln1697_reg_2501 <= icmp_ln1697_fu_748_p2;
                in_pack_data_4_reg_2459 <= layer34_out_dout(31 downto 16);
                in_pack_data_5_reg_2465 <= layer34_out_dout(47 downto 32);
                in_pack_data_6_reg_2471 <= layer34_out_dout(63 downto 48);
                in_pack_data_reg_2439 <= in_pack_data_fu_654_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                exp_res_V_10_reg_2587 <= exp_table_q8;
                exp_res_V_11_reg_2592 <= exp_table_q7;
                exp_res_V_12_reg_2597 <= exp_table_q6;
                exp_res_V_13_reg_2602 <= exp_table_q5;
                exp_res_V_14_reg_2607 <= exp_table_q4;
                exp_res_V_15_reg_2612 <= exp_table_q3;
                exp_res_V_16_reg_2617 <= exp_table_q2;
                exp_res_V_17_reg_2622 <= exp_table_q1;
                exp_res_V_18_reg_2629 <= exp_table_q0;
                exp_res_V_reg_2582 <= exp_table_q9;
                lhs_6_reg_2636 <= lhs_6_fu_1839_p3;
                rhs_6_reg_2642 <= rhs_6_fu_2033_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln1697_7_reg_2527 <= icmp_ln1697_7_fu_876_p2;
                select_ln65_6_reg_2521 <= select_ln65_6_fu_868_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, layer34_out_empty_n, layer36_out_TREADY, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((layer34_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((layer36_out_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln902_fu_2119_p2 <= std_logic_vector(unsigned(exp_res_V_18_reg_2629) + unsigned(exp_res_V_17_reg_2622));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, layer34_out_empty_n)
    begin
        if (((layer34_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(layer36_out_TREADY)
    begin
        if ((layer36_out_TREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, layer34_out_empty_n)
    begin
                ap_block_state1 <= ((layer34_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    data_array_V_4_fu_708_p4 <= layer34_out_dout(79 downto 64);
    data_array_V_5_fu_718_p4 <= layer34_out_dout(95 downto 80);
    data_array_V_6_fu_728_p4 <= layer34_out_dout(111 downto 96);
    data_array_V_7_fu_738_p4 <= layer34_out_dout(127 downto 112);
    exp_res_V_8_cast39_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_17_reg_2622),18));
    exp_res_V_9_cast40_fu_2044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_18_reg_2629),18));
    exp_table_address0 <= zext_ln225_9_fu_1648_p1(10 - 1 downto 0);
    exp_table_address1 <= zext_ln225_8_fu_1617_p1(10 - 1 downto 0);
    exp_table_address2 <= zext_ln225_7_fu_1586_p1(10 - 1 downto 0);
    exp_table_address3 <= zext_ln225_6_fu_1555_p1(10 - 1 downto 0);
    exp_table_address4 <= zext_ln225_5_fu_1524_p1(10 - 1 downto 0);
    exp_table_address5 <= zext_ln225_4_fu_1493_p1(10 - 1 downto 0);
    exp_table_address6 <= zext_ln225_3_fu_1462_p1(10 - 1 downto 0);
    exp_table_address7 <= zext_ln225_2_fu_1431_p1(10 - 1 downto 0);
    exp_table_address8 <= zext_ln225_1_fu_1400_p1(10 - 1 downto 0);
    exp_table_address9 <= zext_ln225_fu_1369_p1(10 - 1 downto 0);

    exp_table_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce0 <= ap_const_logic_1;
        else 
            exp_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce1 <= ap_const_logic_1;
        else 
            exp_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce2_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce2 <= ap_const_logic_1;
        else 
            exp_table_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce3_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce3 <= ap_const_logic_1;
        else 
            exp_table_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce4_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce4 <= ap_const_logic_1;
        else 
            exp_table_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce5_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce5 <= ap_const_logic_1;
        else 
            exp_table_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce6_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce6 <= ap_const_logic_1;
        else 
            exp_table_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce7_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce7 <= ap_const_logic_1;
        else 
            exp_table_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce8_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce8 <= ap_const_logic_1;
        else 
            exp_table_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce9_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            exp_table_ce9 <= ap_const_logic_1;
        else 
            exp_table_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1697_1_fu_754_p2 <= "1" when (signed(in_pack_data_5_fu_688_p4) < signed(in_pack_data_6_fu_698_p4)) else "0";
    icmp_ln1697_2_fu_794_p2 <= "1" when (signed(select_ln65_fu_777_p3) < signed(select_ln65_1_fu_788_p3)) else "0";
    icmp_ln1697_3_fu_760_p2 <= "1" when (signed(data_array_V_4_fu_708_p4) < signed(data_array_V_5_fu_718_p4)) else "0";
    icmp_ln1697_4_fu_766_p2 <= "1" when (signed(data_array_V_6_fu_728_p4) < signed(data_array_V_7_fu_738_p4)) else "0";
    icmp_ln1697_5_fu_836_p2 <= "1" when (signed(select_ln65_3_fu_819_p3) < signed(select_ln65_4_fu_830_p3)) else "0";
    icmp_ln1697_6_fu_856_p2 <= "1" when (signed(select_ln65_2_fu_806_p3) < signed(select_ln65_5_fu_848_p3)) else "0";
    icmp_ln1697_7_fu_876_p2 <= "1" when (signed(data_array_V_8_reg_2445) < signed(data_array_V_9_reg_2452)) else "0";
    icmp_ln1697_8_fu_891_p2 <= "1" when (signed(select_ln65_6_reg_2521) < signed(select_ln65_7_fu_885_p3)) else "0";
    icmp_ln1697_fu_748_p2 <= "1" when (signed(in_pack_data_fu_654_p1) < signed(in_pack_data_4_fu_678_p4)) else "0";
    in_pack_data_4_fu_678_p4 <= layer34_out_dout(31 downto 16);
    in_pack_data_5_fu_688_p4 <= layer34_out_dout(47 downto 32);
    in_pack_data_6_fu_698_p4 <= layer34_out_dout(63 downto 48);
    in_pack_data_fu_654_p1 <= layer34_out_dout(16 - 1 downto 0);
    invert_table_address0 <= zext_ln235_fu_2255_p1(10 - 1 downto 0);

    invert_table_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            invert_table_ce0 <= ap_const_logic_1;
        else 
            invert_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer34_out_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, layer34_out_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            layer34_out_blk_n <= layer34_out_empty_n;
        else 
            layer34_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer34_out_read_assign_proc : process(ap_start, ap_CS_fsm_state1, layer34_out_empty_n)
    begin
        if ((not(((layer34_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer34_out_read <= ap_const_logic_1;
        else 
            layer34_out_read <= ap_const_logic_0;
        end if; 
    end process;

    layer36_out_TDATA <= (((((((((trunc_ln864_5_fu_2404_p4 & trunc_ln864_4_fu_2390_p4) & trunc_ln864_3_fu_2376_p4) & trunc_ln864_2_fu_2362_p4) & trunc_ln864_1_fu_2348_p4) & trunc_ln_fu_2334_p4) & out_pack_data_3_fu_2320_p4) & out_pack_data_2_fu_2306_p4) & out_pack_data_1_fu_2292_p4) & out_pack_data_fu_2278_p4);

    layer36_out_TDATA_blk_n_assign_proc : process(layer36_out_TREADY, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            layer36_out_TDATA_blk_n <= layer36_out_TREADY;
        else 
            layer36_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer36_out_TVALID_assign_proc : process(layer36_out_TREADY, ap_CS_fsm_state6)
    begin
        if (((layer36_out_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            layer36_out_TVALID <= ap_const_logic_1;
        else 
            layer36_out_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    lhs_2_fu_1699_p3 <= 
        select_ln392_11_fu_1691_p3 when (p_Result_64_fu_1675_p3(0) = '1') else 
        p_Val2_10_fu_1669_p2;
    lhs_5_fu_1893_p3 <= 
        select_ln392_13_fu_1885_p3 when (p_Result_68_fu_1869_p3(0) = '1') else 
        p_Val2_14_fu_1863_p2;
    lhs_6_fu_1839_p3 <= 
        select_ln348_fu_1823_p3 when (or_ln348_1_fu_1817_p2(0) = '1') else 
        select_ln396_fu_1831_p3;
    lhs_7_fu_2105_p3 <= 
        select_ln392_10_fu_2097_p3 when (xor_ln348_10_fu_2091_p2(0) = '1') else 
        p_Val2_19_fu_2059_p2;
    mul_ln1316_1_fu_290_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_1_fu_290_p1 <= mul_ln1316_1_fu_290_p10(17 - 1 downto 0);
    mul_ln1316_1_fu_290_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_10_reg_2587),26));
    mul_ln1316_2_fu_284_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_2_fu_284_p1 <= mul_ln1316_2_fu_284_p10(17 - 1 downto 0);
    mul_ln1316_2_fu_284_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_11_reg_2592),26));
    mul_ln1316_3_fu_287_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_3_fu_287_p1 <= mul_ln1316_3_fu_287_p10(17 - 1 downto 0);
    mul_ln1316_3_fu_287_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_12_reg_2597),26));
    mul_ln1316_4_fu_285_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_4_fu_285_p1 <= mul_ln1316_4_fu_285_p10(17 - 1 downto 0);
    mul_ln1316_4_fu_285_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_13_reg_2602),26));
    mul_ln1316_5_fu_289_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_5_fu_289_p1 <= mul_ln1316_5_fu_289_p10(17 - 1 downto 0);
    mul_ln1316_5_fu_289_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_14_reg_2607),26));
    mul_ln1316_6_fu_286_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_6_fu_286_p1 <= mul_ln1316_6_fu_286_p10(17 - 1 downto 0);
    mul_ln1316_6_fu_286_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_15_reg_2612),26));
    mul_ln1316_7_fu_288_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_7_fu_288_p1 <= mul_ln1316_7_fu_288_p10(17 - 1 downto 0);
    mul_ln1316_7_fu_288_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_16_reg_2617),26));
    mul_ln1316_8_fu_291_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_8_fu_291_p1 <= mul_ln1316_8_fu_291_p10(17 - 1 downto 0);
    mul_ln1316_8_fu_291_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_17_reg_2622),26));
    mul_ln1316_9_fu_292_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_9_fu_292_p1 <= mul_ln1316_9_fu_292_p10(17 - 1 downto 0);
    mul_ln1316_9_fu_292_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_18_reg_2629),26));
    mul_ln1316_fu_283_p0 <= sext_ln1319_fu_2260_p1(18 - 1 downto 0);
    mul_ln1316_fu_283_p1 <= mul_ln1316_fu_283_p10(17 - 1 downto 0);
    mul_ln1316_fu_283_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_V_reg_2582),26));
    or_ln348_1_fu_1817_p2 <= (xor_ln348_14_fu_1811_p2 or overflow_12_fu_1787_p2);
    or_ln348_2_fu_2011_p2 <= (xor_ln348_16_fu_2005_p2 or overflow_15_fu_1981_p2);
    or_ln348_fu_2215_p2 <= (xor_ln348_12_fu_2209_p2 or overflow_18_fu_2185_p2);
    out_pack_data_1_fu_2292_p4 <= mul_ln1316_1_fu_290_p2(25 downto 10);
    out_pack_data_2_fu_2306_p4 <= mul_ln1316_2_fu_284_p2(25 downto 10);
    out_pack_data_3_fu_2320_p4 <= mul_ln1316_3_fu_287_p2(25 downto 10);
    out_pack_data_fu_2278_p4 <= mul_ln1316_fu_283_p2(25 downto 10);
    overflow_12_fu_1787_p2 <= (xor_ln941_12_fu_1781_p2 and p_Result_67_fu_1773_p3);
    overflow_15_fu_1981_p2 <= (xor_ln941_13_fu_1975_p2 and p_Result_71_fu_1967_p3);
    overflow_16_fu_2085_p2 <= (xor_ln941_10_fu_2079_p2 and p_Result_73_fu_2071_p3);
    overflow_18_fu_2185_p2 <= (xor_ln941_11_fu_2179_p2 and p_Result_76_fu_2171_p3);
    overflow_1_fu_987_p2 <= (xor_ln941_1_fu_981_p2 and p_Result_47_fu_973_p3);
    overflow_2_fu_1030_p2 <= (xor_ln941_2_fu_1024_p2 and p_Result_49_fu_1016_p3);
    overflow_3_fu_1073_p2 <= (xor_ln941_3_fu_1067_p2 and p_Result_51_fu_1059_p3);
    overflow_4_fu_1116_p2 <= (xor_ln941_4_fu_1110_p2 and p_Result_53_fu_1102_p3);
    overflow_5_fu_1159_p2 <= (xor_ln941_5_fu_1153_p2 and p_Result_55_fu_1145_p3);
    overflow_6_fu_1202_p2 <= (xor_ln941_6_fu_1196_p2 and p_Result_57_fu_1188_p3);
    overflow_7_fu_1245_p2 <= (xor_ln941_7_fu_1239_p2 and p_Result_59_fu_1231_p3);
    overflow_8_fu_1288_p2 <= (xor_ln941_8_fu_1282_p2 and p_Result_61_fu_1274_p3);
    overflow_9_fu_1331_p2 <= (xor_ln941_9_fu_1325_p2 and p_Result_63_fu_1317_p3);
    overflow_fu_944_p2 <= (xor_ln941_fu_938_p2 and p_Result_45_fu_930_p3);
    p_Result_21_fu_1392_p3 <= 
        select_ln392_1_fu_1374_p3 when (xor_ln348_1_fu_993_p2(0) = '1') else 
        tmp_s_fu_1382_p4;
    p_Result_22_fu_1423_p3 <= 
        select_ln392_2_fu_1405_p3 when (xor_ln348_2_fu_1036_p2(0) = '1') else 
        tmp_1_fu_1413_p4;
    p_Result_23_fu_1454_p3 <= 
        select_ln392_3_fu_1436_p3 when (xor_ln348_3_fu_1079_p2(0) = '1') else 
        tmp_2_fu_1444_p4;
    p_Result_24_fu_1485_p3 <= 
        select_ln392_4_fu_1467_p3 when (xor_ln348_4_fu_1122_p2(0) = '1') else 
        tmp_3_fu_1475_p4;
    p_Result_25_fu_1516_p3 <= 
        select_ln392_5_fu_1498_p3 when (xor_ln348_5_fu_1165_p2(0) = '1') else 
        tmp_4_fu_1506_p4;
    p_Result_26_fu_1547_p3 <= 
        select_ln392_6_fu_1529_p3 when (xor_ln348_6_fu_1208_p2(0) = '1') else 
        tmp_5_fu_1537_p4;
    p_Result_27_fu_1578_p3 <= 
        select_ln392_7_fu_1560_p3 when (xor_ln348_7_fu_1251_p2(0) = '1') else 
        tmp_6_fu_1568_p4;
    p_Result_28_fu_1609_p3 <= 
        select_ln392_8_fu_1591_p3 when (xor_ln348_8_fu_1294_p2(0) = '1') else 
        tmp_7_fu_1599_p4;
    p_Result_29_fu_1640_p3 <= 
        select_ln392_9_fu_1622_p3 when (xor_ln348_9_fu_1337_p2(0) = '1') else 
        tmp_8_fu_1630_p4;
    p_Result_43_fu_2247_p3 <= 
        select_ln348_8_fu_2231_p3 when (or_ln348_fu_2215_p2(0) = '1') else 
        select_ln396_2_fu_2239_p3;
    p_Result_44_fu_922_p3 <= ret_V_fu_916_p2(16 downto 16);
    p_Result_45_fu_930_p3 <= ret_V_fu_916_p2(15 downto 15);
    p_Result_46_fu_965_p3 <= ret_V_1_fu_959_p2(16 downto 16);
    p_Result_47_fu_973_p3 <= ret_V_1_fu_959_p2(15 downto 15);
    p_Result_48_fu_1008_p3 <= ret_V_2_fu_1002_p2(16 downto 16);
    p_Result_49_fu_1016_p3 <= ret_V_2_fu_1002_p2(15 downto 15);
    p_Result_50_fu_1051_p3 <= ret_V_3_fu_1045_p2(16 downto 16);
    p_Result_51_fu_1059_p3 <= ret_V_3_fu_1045_p2(15 downto 15);
    p_Result_52_fu_1094_p3 <= ret_V_4_fu_1088_p2(16 downto 16);
    p_Result_53_fu_1102_p3 <= ret_V_4_fu_1088_p2(15 downto 15);
    p_Result_54_fu_1137_p3 <= ret_V_5_fu_1131_p2(16 downto 16);
    p_Result_55_fu_1145_p3 <= ret_V_5_fu_1131_p2(15 downto 15);
    p_Result_56_fu_1180_p3 <= ret_V_6_fu_1174_p2(16 downto 16);
    p_Result_57_fu_1188_p3 <= ret_V_6_fu_1174_p2(15 downto 15);
    p_Result_58_fu_1223_p3 <= ret_V_7_fu_1217_p2(16 downto 16);
    p_Result_59_fu_1231_p3 <= ret_V_7_fu_1217_p2(15 downto 15);
    p_Result_60_fu_1266_p3 <= ret_V_8_fu_1260_p2(16 downto 16);
    p_Result_61_fu_1274_p3 <= ret_V_8_fu_1260_p2(15 downto 15);
    p_Result_62_fu_1309_p3 <= ret_V_9_fu_1303_p2(16 downto 16);
    p_Result_63_fu_1317_p3 <= ret_V_9_fu_1303_p2(15 downto 15);
    p_Result_64_fu_1675_p3 <= p_Val2_10_fu_1669_p2(17 downto 17);
    p_Result_65_fu_1713_p3 <= p_Val2_11_fu_1707_p2(17 downto 17);
    p_Result_66_fu_1765_p3 <= ret_V_10_fu_1753_p2(18 downto 18);
    p_Result_67_fu_1773_p3 <= p_Val2_13_fu_1759_p2(17 downto 17);
    p_Result_68_fu_1869_p3 <= p_Val2_14_fu_1863_p2(17 downto 17);
    p_Result_69_fu_1907_p3 <= p_Val2_15_fu_1901_p2(17 downto 17);
    p_Result_70_fu_1959_p3 <= ret_V_11_fu_1947_p2(18 downto 18);
    p_Result_71_fu_1967_p3 <= p_Val2_17_fu_1953_p2(17 downto 17);
    p_Result_72_fu_2063_p3 <= ret_V_12_fu_2053_p2(18 downto 18);
    p_Result_73_fu_2071_p3 <= p_Val2_19_fu_2059_p2(17 downto 17);
    p_Result_74_fu_2123_p3 <= p_Val2_20_fu_2113_p2(17 downto 17);
    p_Result_75_fu_2163_p3 <= ret_V_13_fu_2151_p2(18 downto 18);
    p_Result_76_fu_2171_p3 <= p_Val2_22_fu_2157_p2(17 downto 17);
    p_Result_s_fu_1361_p3 <= 
        select_ln392_fu_1343_p3 when (xor_ln348_fu_950_p2(0) = '1') else 
        tmp_fu_1351_p4;
    p_Val2_10_fu_1669_p2 <= std_logic_vector(unsigned(zext_ln43_2_fu_1661_p1) + unsigned(zext_ln43_3_fu_1665_p1));
    p_Val2_11_fu_1707_p2 <= std_logic_vector(unsigned(zext_ln43_fu_1653_p1) + unsigned(zext_ln43_1_fu_1657_p1));
    p_Val2_13_fu_1759_p2 <= std_logic_vector(signed(rhs_2_fu_1737_p3) + signed(lhs_2_fu_1699_p3));
    p_Val2_14_fu_1863_p2 <= std_logic_vector(unsigned(zext_ln43_6_fu_1855_p1) + unsigned(zext_ln43_7_fu_1859_p1));
    p_Val2_15_fu_1901_p2 <= std_logic_vector(unsigned(zext_ln43_4_fu_1847_p1) + unsigned(zext_ln43_5_fu_1851_p1));
    p_Val2_17_fu_1953_p2 <= std_logic_vector(signed(rhs_5_fu_1931_p3) + signed(lhs_5_fu_1893_p3));
    p_Val2_19_fu_2059_p2 <= std_logic_vector(signed(lhs_6_reg_2636) + signed(rhs_6_reg_2642));
    p_Val2_20_fu_2113_p2 <= std_logic_vector(unsigned(exp_res_V_9_cast40_fu_2044_p1) + unsigned(exp_res_V_8_cast39_fu_2041_p1));
    p_Val2_22_fu_2157_p2 <= std_logic_vector(signed(lhs_7_fu_2105_p3) + signed(zext_ln859_fu_2139_p1));
    ret_V_10_fu_1753_p2 <= std_logic_vector(signed(sext_ln859_4_fu_1749_p1) + signed(sext_ln859_3_fu_1745_p1));
    ret_V_11_fu_1947_p2 <= std_logic_vector(signed(sext_ln859_6_fu_1943_p1) + signed(sext_ln859_5_fu_1939_p1));
    ret_V_12_fu_2053_p2 <= std_logic_vector(signed(sext_ln859_fu_2047_p1) + signed(sext_ln859_1_fu_2050_p1));
    ret_V_13_fu_2151_p2 <= std_logic_vector(signed(sext_ln859_2_fu_2143_p1) + signed(zext_ln859_1_fu_2147_p1));
    ret_V_1_fu_959_p2 <= std_logic_vector(signed(sext_ln1394_2_fu_956_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_2_fu_1002_p2 <= std_logic_vector(signed(sext_ln1394_3_fu_999_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_3_fu_1045_p2 <= std_logic_vector(signed(sext_ln1394_4_fu_1042_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_4_fu_1088_p2 <= std_logic_vector(signed(sext_ln1394_5_fu_1085_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_5_fu_1131_p2 <= std_logic_vector(signed(sext_ln1394_6_fu_1128_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_6_fu_1174_p2 <= std_logic_vector(signed(sext_ln1394_7_fu_1171_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_7_fu_1217_p2 <= std_logic_vector(signed(sext_ln1394_8_fu_1214_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_8_fu_1260_p2 <= std_logic_vector(signed(sext_ln1394_9_fu_1257_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_9_fu_1303_p2 <= std_logic_vector(signed(sext_ln1394_10_fu_1300_p1) - signed(sext_ln1394_1_fu_912_p1));
    ret_V_fu_916_p2 <= std_logic_vector(signed(sext_ln1394_fu_909_p1) - signed(sext_ln1394_1_fu_912_p1));
    rhs_2_fu_1737_p3 <= 
        select_ln392_12_fu_1729_p3 when (p_Result_65_fu_1713_p3(0) = '1') else 
        p_Val2_11_fu_1707_p2;
    rhs_5_fu_1931_p3 <= 
        select_ln392_14_fu_1923_p3 when (p_Result_69_fu_1907_p3(0) = '1') else 
        p_Val2_15_fu_1901_p2;
    rhs_6_fu_2033_p3 <= 
        select_ln348_5_fu_2017_p3 when (or_ln348_2_fu_2011_p2(0) = '1') else 
        select_ln396_1_fu_2025_p3;
    rhs_7_fu_2131_p3 <= 
        ap_const_lv17_1FFFF when (p_Result_74_fu_2123_p3(0) = '1') else 
        add_ln902_fu_2119_p2;
    select_ln348_5_fu_2017_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln348_15_fu_1999_p2(0) = '1') else 
        p_Val2_17_fu_1953_p2;
    select_ln348_8_fu_2231_p3 <= 
        ap_const_lv10_1FF when (xor_ln348_11_fu_2203_p2(0) = '1') else 
        tmp_9_fu_2221_p4;
    select_ln348_fu_1823_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln348_13_fu_1805_p2(0) = '1') else 
        p_Val2_13_fu_1759_p2;
    select_ln392_10_fu_2097_p3 <= 
        ap_const_lv18_1FFFF when (overflow_16_fu_2085_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln392_11_fu_1691_p3 <= 
        ap_const_lv18_1FFFF when (tmp_31_fu_1683_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln392_12_fu_1729_p3 <= 
        ap_const_lv18_1FFFF when (tmp_33_fu_1721_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln392_13_fu_1885_p3 <= 
        ap_const_lv18_1FFFF when (tmp_37_fu_1877_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln392_14_fu_1923_p3 <= 
        ap_const_lv18_1FFFF when (tmp_39_fu_1915_p3(0) = '1') else 
        ap_const_lv18_20000;
    select_ln392_1_fu_1374_p3 <= 
        ap_const_lv10_1FF when (overflow_1_fu_987_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_2_fu_1405_p3 <= 
        ap_const_lv10_1FF when (overflow_2_fu_1030_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_3_fu_1436_p3 <= 
        ap_const_lv10_1FF when (overflow_3_fu_1073_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_4_fu_1467_p3 <= 
        ap_const_lv10_1FF when (overflow_4_fu_1116_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_5_fu_1498_p3 <= 
        ap_const_lv10_1FF when (overflow_5_fu_1159_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_6_fu_1529_p3 <= 
        ap_const_lv10_1FF when (overflow_6_fu_1202_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_7_fu_1560_p3 <= 
        ap_const_lv10_1FF when (overflow_7_fu_1245_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_8_fu_1591_p3 <= 
        ap_const_lv10_1FF when (overflow_8_fu_1288_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_9_fu_1622_p3 <= 
        ap_const_lv10_1FF when (overflow_9_fu_1331_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln392_fu_1343_p3 <= 
        ap_const_lv10_1FF when (overflow_fu_944_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln396_1_fu_2025_p3 <= 
        ap_const_lv18_20000 when (underflow_2_fu_1993_p2(0) = '1') else 
        p_Val2_17_fu_1953_p2;
    select_ln396_2_fu_2239_p3 <= 
        ap_const_lv10_200 when (underflow_fu_2197_p2(0) = '1') else 
        tmp_9_fu_2221_p4;
    select_ln396_fu_1831_p3 <= 
        ap_const_lv18_20000 when (underflow_1_fu_1799_p2(0) = '1') else 
        p_Val2_13_fu_1759_p2;
    select_ln65_1_fu_788_p3 <= 
        in_pack_data_5_reg_2465 when (xor_ln1697_1_fu_783_p2(0) = '1') else 
        in_pack_data_6_reg_2471;
    select_ln65_2_fu_806_p3 <= 
        select_ln65_fu_777_p3 when (xor_ln1697_2_fu_800_p2(0) = '1') else 
        select_ln65_1_fu_788_p3;
    select_ln65_3_fu_819_p3 <= 
        data_array_V_4_reg_2477 when (xor_ln1697_3_fu_814_p2(0) = '1') else 
        data_array_V_5_reg_2483;
    select_ln65_4_fu_830_p3 <= 
        data_array_V_6_reg_2489 when (xor_ln1697_4_fu_825_p2(0) = '1') else 
        data_array_V_7_reg_2495;
    select_ln65_5_fu_848_p3 <= 
        select_ln65_3_fu_819_p3 when (xor_ln1697_5_fu_842_p2(0) = '1') else 
        select_ln65_4_fu_830_p3;
    select_ln65_6_fu_868_p3 <= 
        select_ln65_2_fu_806_p3 when (xor_ln1697_6_fu_862_p2(0) = '1') else 
        select_ln65_5_fu_848_p3;
    select_ln65_7_fu_885_p3 <= 
        data_array_V_8_reg_2445 when (xor_ln1697_7_fu_880_p2(0) = '1') else 
        data_array_V_9_reg_2452;
    select_ln65_fu_777_p3 <= 
        in_pack_data_reg_2439 when (xor_ln1697_fu_772_p2(0) = '1') else 
        in_pack_data_4_reg_2459;
        sext_ln1319_fu_2260_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(invert_table_q0),26));

        sext_ln1394_10_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_9_reg_2452),17));

        sext_ln1394_1_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_902_p3),17));

        sext_ln1394_2_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_pack_data_4_reg_2459),17));

        sext_ln1394_3_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_pack_data_5_reg_2465),17));

        sext_ln1394_4_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_pack_data_6_reg_2471),17));

        sext_ln1394_5_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_4_reg_2477),17));

        sext_ln1394_6_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_5_reg_2483),17));

        sext_ln1394_7_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_6_reg_2489),17));

        sext_ln1394_8_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_7_reg_2495),17));

        sext_ln1394_9_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_V_8_reg_2445),17));

        sext_ln1394_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_pack_data_reg_2439),17));

        sext_ln859_1_fu_2050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_6_reg_2642),19));

        sext_ln859_2_fu_2143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_7_fu_2105_p3),19));

        sext_ln859_3_fu_1745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_2_fu_1699_p3),19));

        sext_ln859_4_fu_1749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_2_fu_1737_p3),19));

        sext_ln859_5_fu_1939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_5_fu_1893_p3),19));

        sext_ln859_6_fu_1943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_5_fu_1931_p3),19));

        sext_ln859_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_6_reg_2636),19));

    tmp_1_fu_1413_p4 <= ret_V_2_fu_1002_p2(15 downto 6);
    tmp_2_fu_1444_p4 <= ret_V_3_fu_1045_p2(15 downto 6);
    tmp_31_fu_1683_p3 <= p_Val2_10_fu_1669_p2(17 downto 17);
    tmp_33_fu_1721_p3 <= p_Val2_11_fu_1707_p2(17 downto 17);
    tmp_37_fu_1877_p3 <= p_Val2_14_fu_1863_p2(17 downto 17);
    tmp_39_fu_1915_p3 <= p_Val2_15_fu_1901_p2(17 downto 17);
    tmp_3_fu_1475_p4 <= ret_V_4_fu_1088_p2(15 downto 6);
    tmp_4_fu_1506_p4 <= ret_V_5_fu_1131_p2(15 downto 6);
    tmp_5_fu_1537_p4 <= ret_V_6_fu_1174_p2(15 downto 6);
    tmp_6_fu_1568_p4 <= ret_V_7_fu_1217_p2(15 downto 6);
    tmp_7_fu_1599_p4 <= ret_V_8_fu_1260_p2(15 downto 6);
    tmp_8_fu_1630_p4 <= ret_V_9_fu_1303_p2(15 downto 6);
    tmp_9_fu_2221_p4 <= p_Val2_22_fu_2157_p2(17 downto 8);
    tmp_fu_1351_p4 <= ret_V_fu_916_p2(15 downto 6);
    tmp_s_fu_1382_p4 <= ret_V_1_fu_959_p2(15 downto 6);
    trunc_ln864_1_fu_2348_p4 <= mul_ln1316_5_fu_289_p2(25 downto 10);
    trunc_ln864_2_fu_2362_p4 <= mul_ln1316_6_fu_286_p2(25 downto 10);
    trunc_ln864_3_fu_2376_p4 <= mul_ln1316_7_fu_288_p2(25 downto 10);
    trunc_ln864_4_fu_2390_p4 <= mul_ln1316_8_fu_291_p2(25 downto 10);
    trunc_ln864_5_fu_2404_p4 <= mul_ln1316_9_fu_292_p2(25 downto 10);
    trunc_ln_fu_2334_p4 <= mul_ln1316_4_fu_285_p2(25 downto 10);
    underflow_1_fu_1799_p2 <= (xor_ln942_1_fu_1793_p2 and p_Result_66_fu_1765_p3);
    underflow_2_fu_1993_p2 <= (xor_ln942_2_fu_1987_p2 and p_Result_70_fu_1959_p3);
    underflow_fu_2197_p2 <= (xor_ln942_fu_2191_p2 and p_Result_75_fu_2163_p3);
    x_max_V_fu_902_p3 <= 
        select_ln65_6_reg_2521 when (xor_ln1697_8_fu_896_p2(0) = '1') else 
        select_ln65_7_fu_885_p3;
    xor_ln1697_1_fu_783_p2 <= (icmp_ln1697_1_reg_2506 xor ap_const_lv1_1);
    xor_ln1697_2_fu_800_p2 <= (icmp_ln1697_2_fu_794_p2 xor ap_const_lv1_1);
    xor_ln1697_3_fu_814_p2 <= (icmp_ln1697_3_reg_2511 xor ap_const_lv1_1);
    xor_ln1697_4_fu_825_p2 <= (icmp_ln1697_4_reg_2516 xor ap_const_lv1_1);
    xor_ln1697_5_fu_842_p2 <= (icmp_ln1697_5_fu_836_p2 xor ap_const_lv1_1);
    xor_ln1697_6_fu_862_p2 <= (icmp_ln1697_6_fu_856_p2 xor ap_const_lv1_1);
    xor_ln1697_7_fu_880_p2 <= (icmp_ln1697_7_reg_2527 xor ap_const_lv1_1);
    xor_ln1697_8_fu_896_p2 <= (icmp_ln1697_8_fu_891_p2 xor ap_const_lv1_1);
    xor_ln1697_fu_772_p2 <= (icmp_ln1697_reg_2501 xor ap_const_lv1_1);
    xor_ln348_10_fu_2091_p2 <= (p_Result_73_fu_2071_p3 xor p_Result_72_fu_2063_p3);
    xor_ln348_11_fu_2203_p2 <= (p_Result_76_fu_2171_p3 xor p_Result_75_fu_2163_p3);
    xor_ln348_12_fu_2209_p2 <= (xor_ln348_11_fu_2203_p2 xor ap_const_lv1_1);
    xor_ln348_13_fu_1805_p2 <= (p_Result_67_fu_1773_p3 xor p_Result_66_fu_1765_p3);
    xor_ln348_14_fu_1811_p2 <= (xor_ln348_13_fu_1805_p2 xor ap_const_lv1_1);
    xor_ln348_15_fu_1999_p2 <= (p_Result_71_fu_1967_p3 xor p_Result_70_fu_1959_p3);
    xor_ln348_16_fu_2005_p2 <= (xor_ln348_15_fu_1999_p2 xor ap_const_lv1_1);
    xor_ln348_1_fu_993_p2 <= (p_Result_47_fu_973_p3 xor p_Result_46_fu_965_p3);
    xor_ln348_2_fu_1036_p2 <= (p_Result_49_fu_1016_p3 xor p_Result_48_fu_1008_p3);
    xor_ln348_3_fu_1079_p2 <= (p_Result_51_fu_1059_p3 xor p_Result_50_fu_1051_p3);
    xor_ln348_4_fu_1122_p2 <= (p_Result_53_fu_1102_p3 xor p_Result_52_fu_1094_p3);
    xor_ln348_5_fu_1165_p2 <= (p_Result_55_fu_1145_p3 xor p_Result_54_fu_1137_p3);
    xor_ln348_6_fu_1208_p2 <= (p_Result_57_fu_1188_p3 xor p_Result_56_fu_1180_p3);
    xor_ln348_7_fu_1251_p2 <= (p_Result_59_fu_1231_p3 xor p_Result_58_fu_1223_p3);
    xor_ln348_8_fu_1294_p2 <= (p_Result_61_fu_1274_p3 xor p_Result_60_fu_1266_p3);
    xor_ln348_9_fu_1337_p2 <= (p_Result_63_fu_1317_p3 xor p_Result_62_fu_1309_p3);
    xor_ln348_fu_950_p2 <= (p_Result_45_fu_930_p3 xor p_Result_44_fu_922_p3);
    xor_ln941_10_fu_2079_p2 <= (p_Result_72_fu_2063_p3 xor ap_const_lv1_1);
    xor_ln941_11_fu_2179_p2 <= (p_Result_75_fu_2163_p3 xor ap_const_lv1_1);
    xor_ln941_12_fu_1781_p2 <= (p_Result_66_fu_1765_p3 xor ap_const_lv1_1);
    xor_ln941_13_fu_1975_p2 <= (p_Result_70_fu_1959_p3 xor ap_const_lv1_1);
    xor_ln941_1_fu_981_p2 <= (p_Result_46_fu_965_p3 xor ap_const_lv1_1);
    xor_ln941_2_fu_1024_p2 <= (p_Result_48_fu_1008_p3 xor ap_const_lv1_1);
    xor_ln941_3_fu_1067_p2 <= (p_Result_50_fu_1051_p3 xor ap_const_lv1_1);
    xor_ln941_4_fu_1110_p2 <= (p_Result_52_fu_1094_p3 xor ap_const_lv1_1);
    xor_ln941_5_fu_1153_p2 <= (p_Result_54_fu_1137_p3 xor ap_const_lv1_1);
    xor_ln941_6_fu_1196_p2 <= (p_Result_56_fu_1180_p3 xor ap_const_lv1_1);
    xor_ln941_7_fu_1239_p2 <= (p_Result_58_fu_1223_p3 xor ap_const_lv1_1);
    xor_ln941_8_fu_1282_p2 <= (p_Result_60_fu_1266_p3 xor ap_const_lv1_1);
    xor_ln941_9_fu_1325_p2 <= (p_Result_62_fu_1309_p3 xor ap_const_lv1_1);
    xor_ln941_fu_938_p2 <= (p_Result_44_fu_922_p3 xor ap_const_lv1_1);
    xor_ln942_1_fu_1793_p2 <= (p_Result_67_fu_1773_p3 xor ap_const_lv1_1);
    xor_ln942_2_fu_1987_p2 <= (p_Result_71_fu_1967_p3 xor ap_const_lv1_1);
    xor_ln942_fu_2191_p2 <= (p_Result_76_fu_2171_p3 xor ap_const_lv1_1);
    zext_ln225_1_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_21_fu_1392_p3),64));
    zext_ln225_2_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_22_fu_1423_p3),64));
    zext_ln225_3_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_23_fu_1454_p3),64));
    zext_ln225_4_fu_1493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_24_fu_1485_p3),64));
    zext_ln225_5_fu_1524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_25_fu_1516_p3),64));
    zext_ln225_6_fu_1555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_26_fu_1547_p3),64));
    zext_ln225_7_fu_1586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_27_fu_1578_p3),64));
    zext_ln225_8_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_28_fu_1609_p3),64));
    zext_ln225_9_fu_1648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_29_fu_1640_p3),64));
    zext_ln225_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_1361_p3),64));
    zext_ln235_fu_2255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_43_fu_2247_p3),64));
    zext_ln43_1_fu_1657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q7),18));
    zext_ln43_2_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q8),18));
    zext_ln43_3_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q9),18));
    zext_ln43_4_fu_1847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q2),18));
    zext_ln43_5_fu_1851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q3),18));
    zext_ln43_6_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q4),18));
    zext_ln43_7_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q5),18));
    zext_ln43_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q6),18));
    zext_ln859_1_fu_2147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_7_fu_2131_p3),19));
    zext_ln859_fu_2139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_7_fu_2131_p3),18));
end behav;
