-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AlexNet_Cifar10_Keras is
port (
    input_1_TDATA : IN STD_LOGIC_VECTOR (47 downto 0);
    layer36_out_TDATA : OUT STD_LOGIC_VECTOR (159 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_1_TVALID : IN STD_LOGIC;
    input_1_TREADY : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    layer36_out_TVALID : OUT STD_LOGIC;
    layer36_out_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of AlexNet_Cifar10_Keras is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "AlexNet_Cifar10_Keras_AlexNet_Cifar10_Keras,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.331437,HLS_SYN_LAT=1171,HLS_SYN_TPT=1170,HLS_SYN_MEM=374,HLS_SYN_DSP=0,HLS_SYN_FF=109969,HLS_SYN_LUT=412007,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_start : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_done : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_continue : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_idle : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_ready : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_start_out : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_input_1_TREADY : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_layer37_out_din : STD_LOGIC_VECTOR (47 downto 0);
    signal zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_layer37_out_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_start : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_done : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_continue : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_idle : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_ready : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_start_out : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_start_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer37_out_read : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer2_out_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer2_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer2_out_read : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer5_out_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer5_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_start_out : STD_LOGIC;
    signal relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_start_write : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_start : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_done : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_continue : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_idle : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_ready : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer5_out_read : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer6_out_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer6_out_write : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_start_out : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_start : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_done : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_continue : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_idle : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_ready : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_start_out : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer6_out_read : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer38_out_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer38_out_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_start : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_done : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_continue : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_idle : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_ready : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_start_out : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_start_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer38_out_read : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer7_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer7_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer7_out_read : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer10_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer10_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_start_out : STD_LOGIC;
    signal relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_start_write : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_start : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_done : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_continue : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_idle : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_ready : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer10_out_read : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer11_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer11_out_write : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_start_out : STD_LOGIC;
    signal pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_start : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_done : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_continue : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_idle : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_ready : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_start_out : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer11_out_read : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer39_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer39_out_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_start : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_done : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_continue : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_idle : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_ready : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_start_out : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_start_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer39_out_read : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer12_out_din : STD_LOGIC_VECTOR (127 downto 0);
    signal conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer12_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer12_out_read : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer15_out_din : STD_LOGIC_VECTOR (127 downto 0);
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer15_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_start_out : STD_LOGIC;
    signal relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_start : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_done : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_continue : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_idle : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_ready : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_start_out : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer15_out_read : STD_LOGIC;
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer40_out_din : STD_LOGIC_VECTOR (127 downto 0);
    signal zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer40_out_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_start : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_done : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_continue : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_idle : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_ready : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_start_out : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_start_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer40_out_read : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer16_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer16_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer16_out_read : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer19_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer19_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_start_out : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_start : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_done : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_continue : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_idle : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_ready : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_start_out : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_start_write : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer19_out_read : STD_LOGIC;
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer41_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer41_out_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_start : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_done : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_continue : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_idle : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_ready : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_start_out : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_start_write : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer41_out_read : STD_LOGIC;
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer20_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer20_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer20_out_read : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer23_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer23_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_start_out : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_start_write : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_start : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_done : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_continue : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_idle : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_ready : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer23_out_read : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer24_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer24_out_write : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_start_out : STD_LOGIC;
    signal pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_start_write : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_start : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_done : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_continue : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_idle : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_ready : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_start_out : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_start_write : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer24_out_read : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer26_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer26_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_start_out : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_start_write : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer26_out_read : STD_LOGIC;
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer29_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer29_out_write : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_start : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_done : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_continue : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_idle : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_ready : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_start_out : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_start_write : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer29_out_read : STD_LOGIC;
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer30_out_din : STD_LOGIC_VECTOR (159 downto 0);
    signal dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer30_out_write : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_start_out : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_start_write : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer30_out_read : STD_LOGIC;
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer33_out_din : STD_LOGIC_VECTOR (159 downto 0);
    signal relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer33_out_write : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_start : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_done : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_continue : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_idle : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_ready : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_start_out : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_start_write : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer33_out_read : STD_LOGIC;
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer34_out_din : STD_LOGIC_VECTOR (159 downto 0);
    signal dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer34_out_write : STD_LOGIC;
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_start : STD_LOGIC;
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_done : STD_LOGIC;
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_continue : STD_LOGIC;
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_idle : STD_LOGIC;
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_ready : STD_LOGIC;
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer34_out_read : STD_LOGIC;
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer36_out_TDATA : STD_LOGIC_VECTOR (159 downto 0);
    signal softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer36_out_TVALID : STD_LOGIC;
    signal layer37_out_full_n : STD_LOGIC;
    signal layer37_out_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal layer37_out_num_data_valid : STD_LOGIC_VECTOR (11 downto 0);
    signal layer37_out_fifo_cap : STD_LOGIC_VECTOR (11 downto 0);
    signal layer37_out_empty_n : STD_LOGIC;
    signal layer2_out_full_n : STD_LOGIC;
    signal layer2_out_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal layer2_out_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal layer2_out_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal layer2_out_empty_n : STD_LOGIC;
    signal layer5_out_full_n : STD_LOGIC;
    signal layer5_out_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal layer5_out_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal layer5_out_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal layer5_out_empty_n : STD_LOGIC;
    signal layer6_out_full_n : STD_LOGIC;
    signal layer6_out_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal layer6_out_num_data_valid : STD_LOGIC_VECTOR (8 downto 0);
    signal layer6_out_fifo_cap : STD_LOGIC_VECTOR (8 downto 0);
    signal layer6_out_empty_n : STD_LOGIC;
    signal layer38_out_full_n : STD_LOGIC;
    signal layer38_out_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal layer38_out_num_data_valid : STD_LOGIC_VECTOR (9 downto 0);
    signal layer38_out_fifo_cap : STD_LOGIC_VECTOR (9 downto 0);
    signal layer38_out_empty_n : STD_LOGIC;
    signal layer7_out_full_n : STD_LOGIC;
    signal layer7_out_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal layer7_out_num_data_valid : STD_LOGIC_VECTOR (8 downto 0);
    signal layer7_out_fifo_cap : STD_LOGIC_VECTOR (8 downto 0);
    signal layer7_out_empty_n : STD_LOGIC;
    signal layer10_out_full_n : STD_LOGIC;
    signal layer10_out_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal layer10_out_num_data_valid : STD_LOGIC_VECTOR (8 downto 0);
    signal layer10_out_fifo_cap : STD_LOGIC_VECTOR (8 downto 0);
    signal layer10_out_empty_n : STD_LOGIC;
    signal layer11_out_full_n : STD_LOGIC;
    signal layer11_out_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal layer11_out_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal layer11_out_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal layer11_out_empty_n : STD_LOGIC;
    signal layer39_out_full_n : STD_LOGIC;
    signal layer39_out_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal layer39_out_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal layer39_out_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal layer39_out_empty_n : STD_LOGIC;
    signal layer12_out_full_n : STD_LOGIC;
    signal layer12_out_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal layer12_out_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal layer12_out_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal layer12_out_empty_n : STD_LOGIC;
    signal layer15_out_full_n : STD_LOGIC;
    signal layer15_out_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal layer15_out_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal layer15_out_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal layer15_out_empty_n : STD_LOGIC;
    signal layer40_out_full_n : STD_LOGIC;
    signal layer40_out_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal layer40_out_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal layer40_out_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal layer40_out_empty_n : STD_LOGIC;
    signal layer16_out_full_n : STD_LOGIC;
    signal layer16_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer16_out_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal layer16_out_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal layer16_out_empty_n : STD_LOGIC;
    signal layer19_out_full_n : STD_LOGIC;
    signal layer19_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer19_out_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal layer19_out_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal layer19_out_empty_n : STD_LOGIC;
    signal layer41_out_full_n : STD_LOGIC;
    signal layer41_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer41_out_num_data_valid : STD_LOGIC_VECTOR (7 downto 0);
    signal layer41_out_fifo_cap : STD_LOGIC_VECTOR (7 downto 0);
    signal layer41_out_empty_n : STD_LOGIC;
    signal layer20_out_full_n : STD_LOGIC;
    signal layer20_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer20_out_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal layer20_out_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal layer20_out_empty_n : STD_LOGIC;
    signal layer23_out_full_n : STD_LOGIC;
    signal layer23_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer23_out_num_data_valid : STD_LOGIC_VECTOR (6 downto 0);
    signal layer23_out_fifo_cap : STD_LOGIC_VECTOR (6 downto 0);
    signal layer23_out_empty_n : STD_LOGIC;
    signal layer24_out_full_n : STD_LOGIC;
    signal layer24_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer24_out_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal layer24_out_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal layer24_out_empty_n : STD_LOGIC;
    signal layer26_out_full_n : STD_LOGIC;
    signal layer26_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer26_out_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal layer26_out_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal layer26_out_empty_n : STD_LOGIC;
    signal layer29_out_full_n : STD_LOGIC;
    signal layer29_out_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal layer29_out_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal layer29_out_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal layer29_out_empty_n : STD_LOGIC;
    signal layer30_out_full_n : STD_LOGIC;
    signal layer30_out_dout : STD_LOGIC_VECTOR (159 downto 0);
    signal layer30_out_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal layer30_out_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal layer30_out_empty_n : STD_LOGIC;
    signal layer33_out_full_n : STD_LOGIC;
    signal layer33_out_dout : STD_LOGIC_VECTOR (159 downto 0);
    signal layer33_out_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal layer33_out_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal layer33_out_empty_n : STD_LOGIC;
    signal layer34_out_full_n : STD_LOGIC;
    signal layer34_out_dout : STD_LOGIC_VECTOR (159 downto 0);
    signal layer34_out_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal layer34_out_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal layer34_out_empty_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_full_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_empty_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_full_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_empty_n : STD_LOGIC;
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_full_n : STD_LOGIC;
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_empty_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_full_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_empty_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_full_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_empty_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_full_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_empty_n : STD_LOGIC;
    signal start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_full_n : STD_LOGIC;
    signal start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_empty_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_full_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_empty_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_full_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_empty_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_full_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_empty_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_full_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_empty_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_full_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_empty_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_full_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_empty_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_full_n : STD_LOGIC;
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_empty_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_full_n : STD_LOGIC;
    signal start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_empty_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_full_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_empty_n : STD_LOGIC;
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_full_n : STD_LOGIC;
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_empty_n : STD_LOGIC;
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_full_n : STD_LOGIC;
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_empty_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_full_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_empty_n : STD_LOGIC;
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_full_n : STD_LOGIC;
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_empty_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_full_n : STD_LOGIC;
    signal start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_empty_n : STD_LOGIC;
    signal start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_full_n : STD_LOGIC;
    signal start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_empty_n : STD_LOGIC;
    signal start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_full_n : STD_LOGIC;
    signal start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_empty_n : STD_LOGIC;

    component AlexNet_Cifar10_Keras_zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        input_1_TDATA : IN STD_LOGIC_VECTOR (47 downto 0);
        input_1_TVALID : IN STD_LOGIC;
        input_1_TREADY : OUT STD_LOGIC;
        layer37_out_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        layer37_out_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        layer37_out_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        layer37_out_full_n : IN STD_LOGIC;
        layer37_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer37_out_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        layer37_out_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        layer37_out_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        layer37_out_empty_n : IN STD_LOGIC;
        layer37_out_read : OUT STD_LOGIC;
        layer2_out_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        layer2_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        layer2_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        layer2_out_full_n : IN STD_LOGIC;
        layer2_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer2_out_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        layer2_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        layer2_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        layer2_out_empty_n : IN STD_LOGIC;
        layer2_out_read : OUT STD_LOGIC;
        layer5_out_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        layer5_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        layer5_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        layer5_out_full_n : IN STD_LOGIC;
        layer5_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer5_out_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        layer5_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        layer5_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        layer5_out_empty_n : IN STD_LOGIC;
        layer5_out_read : OUT STD_LOGIC;
        layer6_out_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        layer6_out_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
        layer6_out_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
        layer6_out_full_n : IN STD_LOGIC;
        layer6_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer6_out_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        layer6_out_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
        layer6_out_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
        layer6_out_empty_n : IN STD_LOGIC;
        layer6_out_read : OUT STD_LOGIC;
        layer38_out_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        layer38_out_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        layer38_out_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        layer38_out_full_n : IN STD_LOGIC;
        layer38_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer38_out_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        layer38_out_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        layer38_out_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        layer38_out_empty_n : IN STD_LOGIC;
        layer38_out_read : OUT STD_LOGIC;
        layer7_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer7_out_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
        layer7_out_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
        layer7_out_full_n : IN STD_LOGIC;
        layer7_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer7_out_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        layer7_out_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
        layer7_out_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
        layer7_out_empty_n : IN STD_LOGIC;
        layer7_out_read : OUT STD_LOGIC;
        layer10_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer10_out_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
        layer10_out_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
        layer10_out_full_n : IN STD_LOGIC;
        layer10_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer10_out_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        layer10_out_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
        layer10_out_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
        layer10_out_empty_n : IN STD_LOGIC;
        layer10_out_read : OUT STD_LOGIC;
        layer11_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer11_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer11_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer11_out_full_n : IN STD_LOGIC;
        layer11_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer11_out_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        layer11_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer11_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer11_out_empty_n : IN STD_LOGIC;
        layer11_out_read : OUT STD_LOGIC;
        layer39_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer39_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        layer39_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        layer39_out_full_n : IN STD_LOGIC;
        layer39_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer39_out_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        layer39_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        layer39_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        layer39_out_empty_n : IN STD_LOGIC;
        layer39_out_read : OUT STD_LOGIC;
        layer12_out_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        layer12_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer12_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer12_out_full_n : IN STD_LOGIC;
        layer12_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer12_out_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        layer12_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer12_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer12_out_empty_n : IN STD_LOGIC;
        layer12_out_read : OUT STD_LOGIC;
        layer15_out_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        layer15_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer15_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer15_out_full_n : IN STD_LOGIC;
        layer15_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer15_out_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        layer15_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer15_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer15_out_empty_n : IN STD_LOGIC;
        layer15_out_read : OUT STD_LOGIC;
        layer40_out_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        layer40_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        layer40_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        layer40_out_full_n : IN STD_LOGIC;
        layer40_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer40_out_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        layer40_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        layer40_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        layer40_out_empty_n : IN STD_LOGIC;
        layer40_out_read : OUT STD_LOGIC;
        layer16_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer16_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer16_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer16_out_full_n : IN STD_LOGIC;
        layer16_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer16_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer16_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer16_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer16_out_empty_n : IN STD_LOGIC;
        layer16_out_read : OUT STD_LOGIC;
        layer19_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer19_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer19_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer19_out_full_n : IN STD_LOGIC;
        layer19_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer19_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer19_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer19_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer19_out_empty_n : IN STD_LOGIC;
        layer19_out_read : OUT STD_LOGIC;
        layer41_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer41_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        layer41_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        layer41_out_full_n : IN STD_LOGIC;
        layer41_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer41_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer41_out_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
        layer41_out_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
        layer41_out_empty_n : IN STD_LOGIC;
        layer41_out_read : OUT STD_LOGIC;
        layer20_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer20_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer20_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer20_out_full_n : IN STD_LOGIC;
        layer20_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer20_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer20_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer20_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer20_out_empty_n : IN STD_LOGIC;
        layer20_out_read : OUT STD_LOGIC;
        layer23_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer23_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer23_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer23_out_full_n : IN STD_LOGIC;
        layer23_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer23_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer23_out_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        layer23_out_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        layer23_out_empty_n : IN STD_LOGIC;
        layer23_out_read : OUT STD_LOGIC;
        layer24_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer24_out_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        layer24_out_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        layer24_out_full_n : IN STD_LOGIC;
        layer24_out_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer24_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer24_out_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        layer24_out_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        layer24_out_empty_n : IN STD_LOGIC;
        layer24_out_read : OUT STD_LOGIC;
        layer26_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer26_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer26_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer26_out_full_n : IN STD_LOGIC;
        layer26_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer26_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer26_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer26_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer26_out_empty_n : IN STD_LOGIC;
        layer26_out_read : OUT STD_LOGIC;
        layer29_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        layer29_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer29_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer29_out_full_n : IN STD_LOGIC;
        layer29_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer29_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        layer29_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer29_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer29_out_empty_n : IN STD_LOGIC;
        layer29_out_read : OUT STD_LOGIC;
        layer30_out_din : OUT STD_LOGIC_VECTOR (159 downto 0);
        layer30_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer30_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer30_out_full_n : IN STD_LOGIC;
        layer30_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer30_out_dout : IN STD_LOGIC_VECTOR (159 downto 0);
        layer30_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer30_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer30_out_empty_n : IN STD_LOGIC;
        layer30_out_read : OUT STD_LOGIC;
        layer33_out_din : OUT STD_LOGIC_VECTOR (159 downto 0);
        layer33_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer33_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer33_out_full_n : IN STD_LOGIC;
        layer33_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        layer33_out_dout : IN STD_LOGIC_VECTOR (159 downto 0);
        layer33_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer33_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer33_out_empty_n : IN STD_LOGIC;
        layer33_out_read : OUT STD_LOGIC;
        layer34_out_din : OUT STD_LOGIC_VECTOR (159 downto 0);
        layer34_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer34_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer34_out_full_n : IN STD_LOGIC;
        layer34_out_write : OUT STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer34_out_dout : IN STD_LOGIC_VECTOR (159 downto 0);
        layer34_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        layer34_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        layer34_out_empty_n : IN STD_LOGIC;
        layer34_out_read : OUT STD_LOGIC;
        layer36_out_TDATA : OUT STD_LOGIC_VECTOR (159 downto 0);
        layer36_out_TVALID : OUT STD_LOGIC;
        layer36_out_TREADY : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w48_d1156_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (47 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (47 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w1024_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1023 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1023 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w1024_d256_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1023 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1023 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w1024_d324_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1023 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1023 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w64_d256_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w64_d64_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w64_d100_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w128_d64_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w128_d100_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w256_d64_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w256_d100_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w256_d16_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w256_d1_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_fifo_w160_d1_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (159 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (159 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config1eDS IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config3eES IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config4eFT IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16eGT IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19eHT IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config2eIT IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23eJT IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29eKT IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33eLT IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component AlexNet_Cifar10_Keras_start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0 : component AlexNet_Cifar10_Keras_zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_start,
        start_full_n => start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_full_n,
        ap_done => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_done,
        ap_continue => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_continue,
        ap_idle => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_idle,
        ap_ready => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_ready,
        start_out => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_start_out,
        start_write => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_start_write,
        input_1_TDATA => input_1_TDATA,
        input_1_TVALID => input_1_TVALID,
        input_1_TREADY => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_input_1_TREADY,
        layer37_out_din => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_layer37_out_din,
        layer37_out_num_data_valid => layer37_out_num_data_valid,
        layer37_out_fifo_cap => layer37_out_fifo_cap,
        layer37_out_full_n => layer37_out_full_n,
        layer37_out_write => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_layer37_out_write);

    conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0 : component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_start,
        start_full_n => start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_full_n,
        ap_done => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_done,
        ap_continue => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_continue,
        ap_idle => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_idle,
        ap_ready => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_ready,
        start_out => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_start_out,
        start_write => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_start_write,
        layer37_out_dout => layer37_out_dout,
        layer37_out_num_data_valid => layer37_out_num_data_valid,
        layer37_out_fifo_cap => layer37_out_fifo_cap,
        layer37_out_empty_n => layer37_out_empty_n,
        layer37_out_read => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer37_out_read,
        layer2_out_din => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer2_out_din,
        layer2_out_num_data_valid => layer2_out_num_data_valid,
        layer2_out_fifo_cap => layer2_out_fifo_cap,
        layer2_out_full_n => layer2_out_full_n,
        layer2_out_write => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer2_out_write);

    relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0 : component AlexNet_Cifar10_Keras_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_start,
        start_full_n => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_full_n,
        ap_done => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_done,
        ap_continue => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_ready,
        layer2_out_dout => layer2_out_dout,
        layer2_out_num_data_valid => layer2_out_num_data_valid,
        layer2_out_fifo_cap => layer2_out_fifo_cap,
        layer2_out_empty_n => layer2_out_empty_n,
        layer2_out_read => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer2_out_read,
        layer5_out_din => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer5_out_din,
        layer5_out_num_data_valid => layer5_out_num_data_valid,
        layer5_out_fifo_cap => layer5_out_fifo_cap,
        layer5_out_full_n => layer5_out_full_n,
        layer5_out_write => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer5_out_write,
        start_out => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_start_out,
        start_write => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_start_write);

    pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0 : component AlexNet_Cifar10_Keras_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_start,
        start_full_n => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_full_n,
        ap_done => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_done,
        ap_continue => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_continue,
        ap_idle => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_idle,
        ap_ready => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_ready,
        layer5_out_dout => layer5_out_dout,
        layer5_out_num_data_valid => layer5_out_num_data_valid,
        layer5_out_fifo_cap => layer5_out_fifo_cap,
        layer5_out_empty_n => layer5_out_empty_n,
        layer5_out_read => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer5_out_read,
        layer6_out_din => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer6_out_din,
        layer6_out_num_data_valid => layer6_out_num_data_valid,
        layer6_out_fifo_cap => layer6_out_fifo_cap,
        layer6_out_full_n => layer6_out_full_n,
        layer6_out_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer6_out_write,
        start_out => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_start_out,
        start_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_start_write);

    zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0 : component AlexNet_Cifar10_Keras_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_start,
        start_full_n => start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_full_n,
        ap_done => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_done,
        ap_continue => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_continue,
        ap_idle => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_idle,
        ap_ready => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_ready,
        start_out => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_start_out,
        start_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_start_write,
        layer6_out_dout => layer6_out_dout,
        layer6_out_num_data_valid => layer6_out_num_data_valid,
        layer6_out_fifo_cap => layer6_out_fifo_cap,
        layer6_out_empty_n => layer6_out_empty_n,
        layer6_out_read => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer6_out_read,
        layer38_out_din => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer38_out_din,
        layer38_out_num_data_valid => layer38_out_num_data_valid,
        layer38_out_fifo_cap => layer38_out_fifo_cap,
        layer38_out_full_n => layer38_out_full_n,
        layer38_out_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer38_out_write);

    conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0 : component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_start,
        start_full_n => start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_full_n,
        ap_done => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_done,
        ap_continue => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_continue,
        ap_idle => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_idle,
        ap_ready => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_ready,
        start_out => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_start_out,
        start_write => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_start_write,
        layer38_out_dout => layer38_out_dout,
        layer38_out_num_data_valid => layer38_out_num_data_valid,
        layer38_out_fifo_cap => layer38_out_fifo_cap,
        layer38_out_empty_n => layer38_out_empty_n,
        layer38_out_read => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer38_out_read,
        layer7_out_din => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer7_out_din,
        layer7_out_num_data_valid => layer7_out_num_data_valid,
        layer7_out_fifo_cap => layer7_out_fifo_cap,
        layer7_out_full_n => layer7_out_full_n,
        layer7_out_write => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer7_out_write);

    relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0 : component AlexNet_Cifar10_Keras_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_start,
        start_full_n => start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_full_n,
        ap_done => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_done,
        ap_continue => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_ready,
        layer7_out_dout => layer7_out_dout,
        layer7_out_num_data_valid => layer7_out_num_data_valid,
        layer7_out_fifo_cap => layer7_out_fifo_cap,
        layer7_out_empty_n => layer7_out_empty_n,
        layer7_out_read => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer7_out_read,
        layer10_out_din => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer10_out_din,
        layer10_out_num_data_valid => layer10_out_num_data_valid,
        layer10_out_fifo_cap => layer10_out_fifo_cap,
        layer10_out_full_n => layer10_out_full_n,
        layer10_out_write => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer10_out_write,
        start_out => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_start_out,
        start_write => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_start_write);

    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0 : component AlexNet_Cifar10_Keras_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_start,
        start_full_n => start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_full_n,
        ap_done => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_done,
        ap_continue => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_continue,
        ap_idle => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_idle,
        ap_ready => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_ready,
        layer10_out_dout => layer10_out_dout,
        layer10_out_num_data_valid => layer10_out_num_data_valid,
        layer10_out_fifo_cap => layer10_out_fifo_cap,
        layer10_out_empty_n => layer10_out_empty_n,
        layer10_out_read => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer10_out_read,
        layer11_out_din => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer11_out_din,
        layer11_out_num_data_valid => layer11_out_num_data_valid,
        layer11_out_fifo_cap => layer11_out_fifo_cap,
        layer11_out_full_n => layer11_out_full_n,
        layer11_out_write => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer11_out_write,
        start_out => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_start_out,
        start_write => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_start_write);

    zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0 : component AlexNet_Cifar10_Keras_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_start,
        start_full_n => start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_full_n,
        ap_done => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_done,
        ap_continue => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_continue,
        ap_idle => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_idle,
        ap_ready => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_ready,
        start_out => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_start_out,
        start_write => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_start_write,
        layer11_out_dout => layer11_out_dout,
        layer11_out_num_data_valid => layer11_out_num_data_valid,
        layer11_out_fifo_cap => layer11_out_fifo_cap,
        layer11_out_empty_n => layer11_out_empty_n,
        layer11_out_read => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer11_out_read,
        layer39_out_din => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer39_out_din,
        layer39_out_num_data_valid => layer39_out_num_data_valid,
        layer39_out_fifo_cap => layer39_out_fifo_cap,
        layer39_out_full_n => layer39_out_full_n,
        layer39_out_write => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer39_out_write);

    conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0 : component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_start,
        start_full_n => start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_full_n,
        ap_done => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_done,
        ap_continue => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_continue,
        ap_idle => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_idle,
        ap_ready => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_ready,
        start_out => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_start_out,
        start_write => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_start_write,
        layer39_out_dout => layer39_out_dout,
        layer39_out_num_data_valid => layer39_out_num_data_valid,
        layer39_out_fifo_cap => layer39_out_fifo_cap,
        layer39_out_empty_n => layer39_out_empty_n,
        layer39_out_read => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer39_out_read,
        layer12_out_din => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer12_out_din,
        layer12_out_num_data_valid => layer12_out_num_data_valid,
        layer12_out_fifo_cap => layer12_out_fifo_cap,
        layer12_out_full_n => layer12_out_full_n,
        layer12_out_write => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer12_out_write);

    relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0 : component AlexNet_Cifar10_Keras_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_start,
        start_full_n => start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_full_n,
        ap_done => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_done,
        ap_continue => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_ready,
        layer12_out_dout => layer12_out_dout,
        layer12_out_num_data_valid => layer12_out_num_data_valid,
        layer12_out_fifo_cap => layer12_out_fifo_cap,
        layer12_out_empty_n => layer12_out_empty_n,
        layer12_out_read => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer12_out_read,
        layer15_out_din => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer15_out_din,
        layer15_out_num_data_valid => layer15_out_num_data_valid,
        layer15_out_fifo_cap => layer15_out_fifo_cap,
        layer15_out_full_n => layer15_out_full_n,
        layer15_out_write => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer15_out_write,
        start_out => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_start_out,
        start_write => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_start_write);

    zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0 : component AlexNet_Cifar10_Keras_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_start,
        start_full_n => start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_full_n,
        ap_done => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_done,
        ap_continue => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_continue,
        ap_idle => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_idle,
        ap_ready => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_ready,
        start_out => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_start_out,
        start_write => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_start_write,
        layer15_out_dout => layer15_out_dout,
        layer15_out_num_data_valid => layer15_out_num_data_valid,
        layer15_out_fifo_cap => layer15_out_fifo_cap,
        layer15_out_empty_n => layer15_out_empty_n,
        layer15_out_read => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer15_out_read,
        layer40_out_din => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer40_out_din,
        layer40_out_num_data_valid => layer40_out_num_data_valid,
        layer40_out_fifo_cap => layer40_out_fifo_cap,
        layer40_out_full_n => layer40_out_full_n,
        layer40_out_write => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer40_out_write);

    conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0 : component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_start,
        start_full_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_full_n,
        ap_done => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_done,
        ap_continue => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_continue,
        ap_idle => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_idle,
        ap_ready => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_ready,
        start_out => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_start_out,
        start_write => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_start_write,
        layer40_out_dout => layer40_out_dout,
        layer40_out_num_data_valid => layer40_out_num_data_valid,
        layer40_out_fifo_cap => layer40_out_fifo_cap,
        layer40_out_empty_n => layer40_out_empty_n,
        layer40_out_read => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer40_out_read,
        layer16_out_din => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer16_out_din,
        layer16_out_num_data_valid => layer16_out_num_data_valid,
        layer16_out_fifo_cap => layer16_out_fifo_cap,
        layer16_out_full_n => layer16_out_full_n,
        layer16_out_write => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer16_out_write);

    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0 : component AlexNet_Cifar10_Keras_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_start,
        start_full_n => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_full_n,
        ap_done => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_done,
        ap_continue => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_ready,
        layer16_out_dout => layer16_out_dout,
        layer16_out_num_data_valid => layer16_out_num_data_valid,
        layer16_out_fifo_cap => layer16_out_fifo_cap,
        layer16_out_empty_n => layer16_out_empty_n,
        layer16_out_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer16_out_read,
        layer19_out_din => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer19_out_din,
        layer19_out_num_data_valid => layer19_out_num_data_valid,
        layer19_out_fifo_cap => layer19_out_fifo_cap,
        layer19_out_full_n => layer19_out_full_n,
        layer19_out_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer19_out_write,
        start_out => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_start_out,
        start_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_start_write);

    zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0 : component AlexNet_Cifar10_Keras_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_start,
        start_full_n => start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_full_n,
        ap_done => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_done,
        ap_continue => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_continue,
        ap_idle => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_idle,
        ap_ready => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_ready,
        start_out => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_start_out,
        start_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_start_write,
        layer19_out_dout => layer19_out_dout,
        layer19_out_num_data_valid => layer19_out_num_data_valid,
        layer19_out_fifo_cap => layer19_out_fifo_cap,
        layer19_out_empty_n => layer19_out_empty_n,
        layer19_out_read => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer19_out_read,
        layer41_out_din => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer41_out_din,
        layer41_out_num_data_valid => layer41_out_num_data_valid,
        layer41_out_fifo_cap => layer41_out_fifo_cap,
        layer41_out_full_n => layer41_out_full_n,
        layer41_out_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer41_out_write);

    conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0 : component AlexNet_Cifar10_Keras_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_start,
        start_full_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_full_n,
        ap_done => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_done,
        ap_continue => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_continue,
        ap_idle => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_idle,
        ap_ready => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_ready,
        start_out => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_start_out,
        start_write => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_start_write,
        layer41_out_dout => layer41_out_dout,
        layer41_out_num_data_valid => layer41_out_num_data_valid,
        layer41_out_fifo_cap => layer41_out_fifo_cap,
        layer41_out_empty_n => layer41_out_empty_n,
        layer41_out_read => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer41_out_read,
        layer20_out_din => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer20_out_din,
        layer20_out_num_data_valid => layer20_out_num_data_valid,
        layer20_out_fifo_cap => layer20_out_fifo_cap,
        layer20_out_full_n => layer20_out_full_n,
        layer20_out_write => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer20_out_write);

    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0 : component AlexNet_Cifar10_Keras_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_start,
        start_full_n => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_full_n,
        ap_done => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_done,
        ap_continue => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_ready,
        layer20_out_dout => layer20_out_dout,
        layer20_out_num_data_valid => layer20_out_num_data_valid,
        layer20_out_fifo_cap => layer20_out_fifo_cap,
        layer20_out_empty_n => layer20_out_empty_n,
        layer20_out_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer20_out_read,
        layer23_out_din => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer23_out_din,
        layer23_out_num_data_valid => layer23_out_num_data_valid,
        layer23_out_fifo_cap => layer23_out_fifo_cap,
        layer23_out_full_n => layer23_out_full_n,
        layer23_out_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer23_out_write,
        start_out => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_start_out,
        start_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_start_write);

    pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0 : component AlexNet_Cifar10_Keras_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_start,
        start_full_n => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_full_n,
        ap_done => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_done,
        ap_continue => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_continue,
        ap_idle => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_idle,
        ap_ready => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_ready,
        layer23_out_dout => layer23_out_dout,
        layer23_out_num_data_valid => layer23_out_num_data_valid,
        layer23_out_fifo_cap => layer23_out_fifo_cap,
        layer23_out_empty_n => layer23_out_empty_n,
        layer23_out_read => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer23_out_read,
        layer24_out_din => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer24_out_din,
        layer24_out_num_data_valid => layer24_out_num_data_valid,
        layer24_out_fifo_cap => layer24_out_fifo_cap,
        layer24_out_full_n => layer24_out_full_n,
        layer24_out_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer24_out_write,
        start_out => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_start_out,
        start_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_start_write);

    dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0 : component AlexNet_Cifar10_Keras_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_start,
        start_full_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_full_n,
        ap_done => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_done,
        ap_continue => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_continue,
        ap_idle => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_idle,
        ap_ready => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_ready,
        start_out => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_start_out,
        start_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_start_write,
        layer24_out_dout => layer24_out_dout,
        layer24_out_num_data_valid => layer24_out_num_data_valid,
        layer24_out_fifo_cap => layer24_out_fifo_cap,
        layer24_out_empty_n => layer24_out_empty_n,
        layer24_out_read => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer24_out_read,
        layer26_out_din => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer26_out_din,
        layer26_out_num_data_valid => layer26_out_num_data_valid,
        layer26_out_fifo_cap => layer26_out_fifo_cap,
        layer26_out_full_n => layer26_out_full_n,
        layer26_out_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer26_out_write);

    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0 : component AlexNet_Cifar10_Keras_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_start,
        start_full_n => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_full_n,
        ap_done => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_done,
        ap_continue => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_ready,
        start_out => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_start_out,
        start_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_start_write,
        layer26_out_dout => layer26_out_dout,
        layer26_out_num_data_valid => layer26_out_num_data_valid,
        layer26_out_fifo_cap => layer26_out_fifo_cap,
        layer26_out_empty_n => layer26_out_empty_n,
        layer26_out_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer26_out_read,
        layer29_out_din => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer29_out_din,
        layer29_out_num_data_valid => layer29_out_num_data_valid,
        layer29_out_fifo_cap => layer29_out_fifo_cap,
        layer29_out_full_n => layer29_out_full_n,
        layer29_out_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer29_out_write);

    dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0 : component AlexNet_Cifar10_Keras_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_start,
        start_full_n => start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_full_n,
        ap_done => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_done,
        ap_continue => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_continue,
        ap_idle => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_idle,
        ap_ready => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_ready,
        start_out => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_start_out,
        start_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_start_write,
        layer29_out_dout => layer29_out_dout,
        layer29_out_num_data_valid => layer29_out_num_data_valid,
        layer29_out_fifo_cap => layer29_out_fifo_cap,
        layer29_out_empty_n => layer29_out_empty_n,
        layer29_out_read => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer29_out_read,
        layer30_out_din => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer30_out_din,
        layer30_out_num_data_valid => layer30_out_num_data_valid,
        layer30_out_fifo_cap => layer30_out_fifo_cap,
        layer30_out_full_n => layer30_out_full_n,
        layer30_out_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer30_out_write);

    relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0 : component AlexNet_Cifar10_Keras_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_start,
        start_full_n => start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_full_n,
        ap_done => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_done,
        ap_continue => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_ready,
        start_out => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_start_out,
        start_write => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_start_write,
        layer30_out_dout => layer30_out_dout,
        layer30_out_num_data_valid => layer30_out_num_data_valid,
        layer30_out_fifo_cap => layer30_out_fifo_cap,
        layer30_out_empty_n => layer30_out_empty_n,
        layer30_out_read => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer30_out_read,
        layer33_out_din => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer33_out_din,
        layer33_out_num_data_valid => layer33_out_num_data_valid,
        layer33_out_fifo_cap => layer33_out_fifo_cap,
        layer33_out_full_n => layer33_out_full_n,
        layer33_out_write => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer33_out_write);

    dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0 : component AlexNet_Cifar10_Keras_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_start,
        start_full_n => start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_full_n,
        ap_done => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_done,
        ap_continue => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_continue,
        ap_idle => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_idle,
        ap_ready => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_ready,
        start_out => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_start_out,
        start_write => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_start_write,
        layer33_out_dout => layer33_out_dout,
        layer33_out_num_data_valid => layer33_out_num_data_valid,
        layer33_out_fifo_cap => layer33_out_fifo_cap,
        layer33_out_empty_n => layer33_out_empty_n,
        layer33_out_read => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer33_out_read,
        layer34_out_din => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer34_out_din,
        layer34_out_num_data_valid => layer34_out_num_data_valid,
        layer34_out_fifo_cap => layer34_out_fifo_cap,
        layer34_out_full_n => layer34_out_full_n,
        layer34_out_write => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer34_out_write);

    softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0 : component AlexNet_Cifar10_Keras_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_start,
        ap_done => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_done,
        ap_continue => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_continue,
        ap_idle => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_idle,
        ap_ready => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_ready,
        layer34_out_dout => layer34_out_dout,
        layer34_out_num_data_valid => layer34_out_num_data_valid,
        layer34_out_fifo_cap => layer34_out_fifo_cap,
        layer34_out_empty_n => layer34_out_empty_n,
        layer34_out_read => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer34_out_read,
        layer36_out_TDATA => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer36_out_TDATA,
        layer36_out_TVALID => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer36_out_TVALID,
        layer36_out_TREADY => layer36_out_TREADY);

    layer37_out_U : component AlexNet_Cifar10_Keras_fifo_w48_d1156_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_layer37_out_din,
        if_full_n => layer37_out_full_n,
        if_write => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_layer37_out_write,
        if_dout => layer37_out_dout,
        if_num_data_valid => layer37_out_num_data_valid,
        if_fifo_cap => layer37_out_fifo_cap,
        if_empty_n => layer37_out_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer37_out_read);

    layer2_out_U : component AlexNet_Cifar10_Keras_fifo_w1024_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer2_out_din,
        if_full_n => layer2_out_full_n,
        if_write => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_layer2_out_write,
        if_dout => layer2_out_dout,
        if_num_data_valid => layer2_out_num_data_valid,
        if_fifo_cap => layer2_out_fifo_cap,
        if_empty_n => layer2_out_empty_n,
        if_read => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer2_out_read);

    layer5_out_U : component AlexNet_Cifar10_Keras_fifo_w1024_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer5_out_din,
        if_full_n => layer5_out_full_n,
        if_write => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_layer5_out_write,
        if_dout => layer5_out_dout,
        if_num_data_valid => layer5_out_num_data_valid,
        if_fifo_cap => layer5_out_fifo_cap,
        if_empty_n => layer5_out_empty_n,
        if_read => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer5_out_read);

    layer6_out_U : component AlexNet_Cifar10_Keras_fifo_w1024_d256_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer6_out_din,
        if_full_n => layer6_out_full_n,
        if_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_layer6_out_write,
        if_dout => layer6_out_dout,
        if_num_data_valid => layer6_out_num_data_valid,
        if_fifo_cap => layer6_out_fifo_cap,
        if_empty_n => layer6_out_empty_n,
        if_read => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer6_out_read);

    layer38_out_U : component AlexNet_Cifar10_Keras_fifo_w1024_d324_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer38_out_din,
        if_full_n => layer38_out_full_n,
        if_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_layer38_out_write,
        if_dout => layer38_out_dout,
        if_num_data_valid => layer38_out_num_data_valid,
        if_fifo_cap => layer38_out_fifo_cap,
        if_empty_n => layer38_out_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer38_out_read);

    layer7_out_U : component AlexNet_Cifar10_Keras_fifo_w64_d256_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer7_out_din,
        if_full_n => layer7_out_full_n,
        if_write => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_layer7_out_write,
        if_dout => layer7_out_dout,
        if_num_data_valid => layer7_out_num_data_valid,
        if_fifo_cap => layer7_out_fifo_cap,
        if_empty_n => layer7_out_empty_n,
        if_read => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer7_out_read);

    layer10_out_U : component AlexNet_Cifar10_Keras_fifo_w64_d256_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer10_out_din,
        if_full_n => layer10_out_full_n,
        if_write => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_layer10_out_write,
        if_dout => layer10_out_dout,
        if_num_data_valid => layer10_out_num_data_valid,
        if_fifo_cap => layer10_out_fifo_cap,
        if_empty_n => layer10_out_empty_n,
        if_read => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer10_out_read);

    layer11_out_U : component AlexNet_Cifar10_Keras_fifo_w64_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer11_out_din,
        if_full_n => layer11_out_full_n,
        if_write => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_layer11_out_write,
        if_dout => layer11_out_dout,
        if_num_data_valid => layer11_out_num_data_valid,
        if_fifo_cap => layer11_out_fifo_cap,
        if_empty_n => layer11_out_empty_n,
        if_read => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer11_out_read);

    layer39_out_U : component AlexNet_Cifar10_Keras_fifo_w64_d100_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer39_out_din,
        if_full_n => layer39_out_full_n,
        if_write => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_layer39_out_write,
        if_dout => layer39_out_dout,
        if_num_data_valid => layer39_out_num_data_valid,
        if_fifo_cap => layer39_out_fifo_cap,
        if_empty_n => layer39_out_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer39_out_read);

    layer12_out_U : component AlexNet_Cifar10_Keras_fifo_w128_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer12_out_din,
        if_full_n => layer12_out_full_n,
        if_write => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_layer12_out_write,
        if_dout => layer12_out_dout,
        if_num_data_valid => layer12_out_num_data_valid,
        if_fifo_cap => layer12_out_fifo_cap,
        if_empty_n => layer12_out_empty_n,
        if_read => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer12_out_read);

    layer15_out_U : component AlexNet_Cifar10_Keras_fifo_w128_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer15_out_din,
        if_full_n => layer15_out_full_n,
        if_write => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_layer15_out_write,
        if_dout => layer15_out_dout,
        if_num_data_valid => layer15_out_num_data_valid,
        if_fifo_cap => layer15_out_fifo_cap,
        if_empty_n => layer15_out_empty_n,
        if_read => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer15_out_read);

    layer40_out_U : component AlexNet_Cifar10_Keras_fifo_w128_d100_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer40_out_din,
        if_full_n => layer40_out_full_n,
        if_write => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_layer40_out_write,
        if_dout => layer40_out_dout,
        if_num_data_valid => layer40_out_num_data_valid,
        if_fifo_cap => layer40_out_fifo_cap,
        if_empty_n => layer40_out_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer40_out_read);

    layer16_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer16_out_din,
        if_full_n => layer16_out_full_n,
        if_write => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_layer16_out_write,
        if_dout => layer16_out_dout,
        if_num_data_valid => layer16_out_num_data_valid,
        if_fifo_cap => layer16_out_fifo_cap,
        if_empty_n => layer16_out_empty_n,
        if_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer16_out_read);

    layer19_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer19_out_din,
        if_full_n => layer19_out_full_n,
        if_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_layer19_out_write,
        if_dout => layer19_out_dout,
        if_num_data_valid => layer19_out_num_data_valid,
        if_fifo_cap => layer19_out_fifo_cap,
        if_empty_n => layer19_out_empty_n,
        if_read => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer19_out_read);

    layer41_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d100_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer41_out_din,
        if_full_n => layer41_out_full_n,
        if_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_layer41_out_write,
        if_dout => layer41_out_dout,
        if_num_data_valid => layer41_out_num_data_valid,
        if_fifo_cap => layer41_out_fifo_cap,
        if_empty_n => layer41_out_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer41_out_read);

    layer20_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer20_out_din,
        if_full_n => layer20_out_full_n,
        if_write => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_layer20_out_write,
        if_dout => layer20_out_dout,
        if_num_data_valid => layer20_out_num_data_valid,
        if_fifo_cap => layer20_out_fifo_cap,
        if_empty_n => layer20_out_empty_n,
        if_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer20_out_read);

    layer23_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer23_out_din,
        if_full_n => layer23_out_full_n,
        if_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_layer23_out_write,
        if_dout => layer23_out_dout,
        if_num_data_valid => layer23_out_num_data_valid,
        if_fifo_cap => layer23_out_fifo_cap,
        if_empty_n => layer23_out_empty_n,
        if_read => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer23_out_read);

    layer24_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer24_out_din,
        if_full_n => layer24_out_full_n,
        if_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_layer24_out_write,
        if_dout => layer24_out_dout,
        if_num_data_valid => layer24_out_num_data_valid,
        if_fifo_cap => layer24_out_fifo_cap,
        if_empty_n => layer24_out_empty_n,
        if_read => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer24_out_read);

    layer26_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d1_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer26_out_din,
        if_full_n => layer26_out_full_n,
        if_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_layer26_out_write,
        if_dout => layer26_out_dout,
        if_num_data_valid => layer26_out_num_data_valid,
        if_fifo_cap => layer26_out_fifo_cap,
        if_empty_n => layer26_out_empty_n,
        if_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer26_out_read);

    layer29_out_U : component AlexNet_Cifar10_Keras_fifo_w256_d1_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer29_out_din,
        if_full_n => layer29_out_full_n,
        if_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_layer29_out_write,
        if_dout => layer29_out_dout,
        if_num_data_valid => layer29_out_num_data_valid,
        if_fifo_cap => layer29_out_fifo_cap,
        if_empty_n => layer29_out_empty_n,
        if_read => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer29_out_read);

    layer30_out_U : component AlexNet_Cifar10_Keras_fifo_w160_d1_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer30_out_din,
        if_full_n => layer30_out_full_n,
        if_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_layer30_out_write,
        if_dout => layer30_out_dout,
        if_num_data_valid => layer30_out_num_data_valid,
        if_fifo_cap => layer30_out_fifo_cap,
        if_empty_n => layer30_out_empty_n,
        if_read => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer30_out_read);

    layer33_out_U : component AlexNet_Cifar10_Keras_fifo_w160_d1_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer33_out_din,
        if_full_n => layer33_out_full_n,
        if_write => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_layer33_out_write,
        if_dout => layer33_out_dout,
        if_num_data_valid => layer33_out_num_data_valid,
        if_fifo_cap => layer33_out_fifo_cap,
        if_empty_n => layer33_out_empty_n,
        if_read => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer33_out_read);

    layer34_out_U : component AlexNet_Cifar10_Keras_fifo_w160_d1_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer34_out_din,
        if_full_n => layer34_out_full_n,
        if_write => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_layer34_out_write,
        if_dout => layer34_out_dout,
        if_num_data_valid => layer34_out_num_data_valid,
        if_fifo_cap => layer34_out_fifo_cap,
        if_empty_n => layer34_out_empty_n,
        if_read => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer34_out_read);

    start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_U : component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_din,
        if_full_n => start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_full_n,
        if_write => zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_start_write,
        if_dout => start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_dout,
        if_empty_n => start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_ready);

    start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_U : component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_din,
        if_full_n => start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_full_n,
        if_write => conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_start_write,
        if_dout => start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_dout,
        if_empty_n => start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_empty_n,
        if_read => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_ready);

    start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_U : component AlexNet_Cifar10_Keras_start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_din,
        if_full_n => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_full_n,
        if_write => relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_start_write,
        if_dout => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_dout,
        if_empty_n => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_empty_n,
        if_read => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_ready);

    start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_U : component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_din,
        if_full_n => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_full_n,
        if_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_start_write,
        if_dout => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_dout,
        if_empty_n => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_empty_n,
        if_read => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_ready);

    start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_U : component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_din,
        if_full_n => start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_full_n,
        if_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_start_write,
        if_dout => start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_dout,
        if_empty_n => start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_ready);

    start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_U : component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_din,
        if_full_n => start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_full_n,
        if_write => conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_start_write,
        if_dout => start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_dout,
        if_empty_n => start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_empty_n,
        if_read => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_ready);

    start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config1eDS_U : component AlexNet_Cifar10_Keras_start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config1eDS
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_din,
        if_full_n => start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_full_n,
        if_write => relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_start_write,
        if_dout => start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_dout,
        if_empty_n => start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_empty_n,
        if_read => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_ready);

    start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config3eES_U : component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config3eES
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_din,
        if_full_n => start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_full_n,
        if_write => pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_start_write,
        if_dout => start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_dout,
        if_empty_n => start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_empty_n,
        if_read => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_ready);

    start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_U : component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_din,
        if_full_n => start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_full_n,
        if_write => zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_start_write,
        if_dout => start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_dout,
        if_empty_n => start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_ready);

    start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_U : component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_din,
        if_full_n => start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_full_n,
        if_write => conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_start_write,
        if_dout => start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_dout,
        if_empty_n => start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_empty_n,
        if_read => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_ready);

    start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config4eFT_U : component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config4eFT
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_din,
        if_full_n => start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_full_n,
        if_write => relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_start_write,
        if_dout => start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_dout,
        if_empty_n => start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_empty_n,
        if_read => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_ready);

    start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16eGT_U : component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16eGT
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_din,
        if_full_n => start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_full_n,
        if_write => zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_start_write,
        if_dout => start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_dout,
        if_empty_n => start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_ready);

    start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19eHT_U : component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19eHT
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_din,
        if_full_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_full_n,
        if_write => conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_start_write,
        if_dout => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_dout,
        if_empty_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_empty_n,
        if_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_ready);

    start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_U : component AlexNet_Cifar10_Keras_start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_din,
        if_full_n => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_full_n,
        if_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_start_write,
        if_dout => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_dout,
        if_empty_n => start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_empty_n,
        if_read => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_ready);

    start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config2eIT_U : component AlexNet_Cifar10_Keras_start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config2eIT
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_din,
        if_full_n => start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_full_n,
        if_write => zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_start_write,
        if_dout => start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_dout,
        if_empty_n => start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_empty_n,
        if_read => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_ready);

    start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23eJT_U : component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23eJT
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_din,
        if_full_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_full_n,
        if_write => conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_start_write,
        if_dout => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_dout,
        if_empty_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_empty_n,
        if_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_ready);

    start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_U : component AlexNet_Cifar10_Keras_start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_din,
        if_full_n => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_full_n,
        if_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_start_write,
        if_dout => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_dout,
        if_empty_n => start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_empty_n,
        if_read => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_ready);

    start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_U : component AlexNet_Cifar10_Keras_start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_din,
        if_full_n => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_full_n,
        if_write => pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_start_write,
        if_dout => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_dout,
        if_empty_n => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_empty_n,
        if_read => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_ready);

    start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29eKT_U : component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29eKT
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_din,
        if_full_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_full_n,
        if_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_start_write,
        if_dout => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_dout,
        if_empty_n => start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_empty_n,
        if_read => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_ready);

    start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_U : component AlexNet_Cifar10_Keras_start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_din,
        if_full_n => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_full_n,
        if_write => relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_start_write,
        if_dout => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_dout,
        if_empty_n => start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_empty_n,
        if_read => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_ready);

    start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33eLT_U : component AlexNet_Cifar10_Keras_start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33eLT
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_din,
        if_full_n => start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_full_n,
        if_write => dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_start_write,
        if_dout => start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_dout,
        if_empty_n => start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_empty_n,
        if_read => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_ready);

    start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_U : component AlexNet_Cifar10_Keras_start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_din,
        if_full_n => start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_full_n,
        if_write => relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_start_write,
        if_dout => start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_dout,
        if_empty_n => start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_empty_n,
        if_read => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_ready);

    start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_U : component AlexNet_Cifar10_Keras_start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_din,
        if_full_n => start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_full_n,
        if_write => dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_start_write,
        if_dout => start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_dout,
        if_empty_n => start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_empty_n,
        if_read => softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_ready);




    ap_done <= softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_done;
    ap_idle <= (zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_idle and zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_idle and zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_idle and zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_idle and zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_idle and softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_idle and relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_idle and relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_idle and relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_idle and relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_idle and relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_idle and relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_idle and relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_idle and pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_idle and pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_idle and pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_idle and dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_idle and dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_idle and dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_idle and conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_idle and conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_idle and conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_idle and conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_idle and conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_idle);
    ap_ready <= zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_continue <= ap_const_logic_1;
    conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_ap_start <= start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_empty_n;
    conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_continue <= ap_const_logic_1;
    conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_ap_start <= start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_empty_n;
    conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_continue <= ap_const_logic_1;
    conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_ap_start <= start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_empty_n;
    conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_continue <= ap_const_logic_1;
    conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_ap_start <= start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_empty_n;
    conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_continue <= ap_const_logic_1;
    conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_ap_start <= start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_empty_n;
    dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_continue <= ap_const_logic_1;
    dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_ap_start <= start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_empty_n;
    dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_continue <= ap_const_logic_1;
    dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_ap_start <= start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_empty_n;
    dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_continue <= ap_const_logic_1;
    dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_ap_start <= start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_empty_n;
    input_1_TREADY <= zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_input_1_TREADY;
    layer36_out_TDATA <= softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer36_out_TDATA;
    layer36_out_TVALID <= softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_layer36_out_TVALID;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_continue <= ap_const_logic_1;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_ap_start <= start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_empty_n;
    pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_continue <= ap_const_logic_1;
    pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_ap_start <= start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_empty_n;
    pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_continue <= ap_const_logic_1;
    pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_ap_start <= start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_empty_n;
    relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_continue <= ap_const_logic_1;
    relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_ap_start <= start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_empty_n;
    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_continue <= ap_const_logic_1;
    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_ap_start <= start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_empty_n;
    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_continue <= ap_const_logic_1;
    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_ap_start <= start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_empty_n;
    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_continue <= ap_const_logic_1;
    relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_ap_start <= start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_empty_n;
    relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_continue <= ap_const_logic_1;
    relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_ap_start <= start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_empty_n;
    relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_continue <= ap_const_logic_1;
    relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_ap_start <= start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_empty_n;
    relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_continue <= ap_const_logic_1;
    relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_ap_start <= start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_empty_n;
    softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_continue <= ap_const_logic_1;
    softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_ap_start <= start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_empty_n;
    start_for_conv_2d_cl_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config20_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv_2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_64u_config2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config12_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv_2d_cl_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_4u_config7_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv_2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_16u_config16_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_dense_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_config34_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_10u_config30_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_dense_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_config26_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config11_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config24_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_pooling2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config6_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_relu_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_relu_config33_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config19_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config23_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_relu_array_ap_fixed_16u_array_ap_fixed_16_6_5_3_0_16u_relu_config29_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_relu_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_relu_config10_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_relu_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_relu_config5_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_relu_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_relu_config15_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_softmax_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config36_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_din <= (0=>ap_const_logic_1, others=>'-');
    zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_continue <= ap_const_logic_1;
    zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config37_U0_ap_start <= ap_start;
    zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_continue <= ap_const_logic_1;
    zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_ap_start <= start_for_zeropad2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config39_U0_empty_n;
    zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_continue <= ap_const_logic_1;
    zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_ap_start <= start_for_zeropad2d_cl_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_8u_config40_U0_empty_n;
    zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_continue <= ap_const_logic_1;
    zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_ap_start <= start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config41_U0_empty_n;
    zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_continue <= ap_const_logic_1;
    zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_ap_start <= start_for_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_64u_config38_U0_empty_n;
end behav;
